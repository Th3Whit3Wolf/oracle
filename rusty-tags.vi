!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
AC	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    AC(&'a [Literal]),$/;"	e	enum:LiteralIter
AC	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    AC(FullAcAutomaton<Literal>),$/;"	e	enum:Matcher
AVX2VectorBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^impl AVX2VectorBuilder {$/;"	c
AVX2VectorBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^pub struct AVX2VectorBuilder(());$/;"	s
AbsoluteUriRequired	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    AbsoluteUriRequired,$/;"	e	enum:Kind
Accept	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Accept,$/;"	e	enum:Kind
Action	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^pub(crate) enum Action {$/;"	g
Adaptive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    Adaptive {$/;"	e	enum:ReadStrategy
AddrIncoming	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^impl AddrIncoming {$/;"	c
AddrIncoming	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^impl Stream for AddrIncoming {$/;"	c
AddrIncoming	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^impl fmt::Debug for AddrIncoming {$/;"	c
AddrIncoming	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^pub struct AddrIncoming {$/;"	s
AddrStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    impl AddrStream {$/;"	c	module:addr_stream
AddrStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    impl AsyncRead for AddrStream {$/;"	c	module:addr_stream
AddrStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    impl AsyncWrite for AddrStream {$/;"	c	module:addr_stream
AddrStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    impl Read for AddrStream {$/;"	c	module:addr_stream
AddrStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    impl Write for AddrStream {$/;"	c	module:addr_stream
AddrStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    pub struct AddrStream {$/;"	s	module:addr_stream
Addrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    type Addrs = GaiAddrs;$/;"	t	implementation:GaiResolver
Addrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    type Addrs = GaiAddrs;$/;"	t	implementation:TokioThreadpoolGaiResolver
Addrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    type Addrs: Iterator<Item=IpAddr>;$/;"	t	interface:Resolve
AfterFragment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    AfterFragment$/;"	e	enum:Position
AfterHost	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    AfterHost,$/;"	e	enum:Position
AfterPassword	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    AfterPassword,$/;"	e	enum:Position
AfterPath	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    AfterPath,$/;"	e	enum:Position
AfterPort	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    AfterPort,$/;"	e	enum:Position
AfterQuery	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    AfterQuery,$/;"	e	enum:Position
AfterScheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    AfterScheme,$/;"	e	enum:Position
AfterUsername	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    AfterUsername,$/;"	e	enum:Position
Alignment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^pub enum Alignment {$/;"	g
All	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    All(::hyper::Uri),$/;"	e	enum:Intercept
Alpn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^pub(super) enum Alpn {$/;"	g
Alt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Alt(char),$/;"	e	enum:Key
AlternateScreen	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^impl<W: Write> AlternateScreen<W> {$/;"	c
AlternateScreen	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^impl<W: Write> Drop for AlternateScreen<W> {$/;"	c
AlternateScreen	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^impl<W: Write> Write for AlternateScreen<W> {$/;"	c
AlternateScreen	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^impl<W: Write> ops::Deref for AlternateScreen<W> {$/;"	c
AlternateScreen	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^impl<W: Write> ops::DerefMut for AlternateScreen<W> {$/;"	c
AlternateScreen	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^pub struct AlternateScreen<W: Write> {$/;"	s
Ancestor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl Ancestor {$/;"	c
Ancestor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^struct Ancestor {$/;"	s
AnchoredEnd	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    AnchoredEnd,$/;"	e	enum:MatchLiteralType
AnchoredStart	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    AnchoredStart,$/;"	e	enum:MatchLiteralType
And	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^impl<A: Predicate, B: Predicate> Predicate for And<A, B> {$/;"	c
And	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^pub struct And<A, B>(pub A, pub B);$/;"	s
AnsiValue	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^impl AnsiValue {$/;"	c
AnsiValue	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^impl Color for AnsiValue {$/;"	c
AnsiValue	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^pub struct AnsiValue(pub u8);$/;"	s
Any	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^impl Predicate for Any {$/;"	c
Any	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^pub struct Any;$/;"	s
AsFail	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/as_fail.rs	/^pub trait AsFail {$/;"	i
AssertSend	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^trait AssertSend: Send {}$/;"	i
AssertSendSync	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^trait AssertSendSync: Send + Sync {}$/;"	i
AssertSendSync	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^trait AssertSendSync: Send + Sync + 'static {}$/;"	i
Async	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    impl HelpUnwrap<Bytes> for Async<Bytes> {$/;"	c	module:tests
Async	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    impl HelpUnwrap<ChunkedState> for Async<ChunkedState> {$/;"	c	module:tests
AsyncIo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl ::std::ops::Deref for AsyncIo<MockCursor> {$/;"	c
AsyncIo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl AsyncIo<MockCursor> {$/;"	c
AsyncIo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl<S: AsRef<[u8]>, T: AsRef<[u8]>> PartialEq<S> for AsyncIo<T> {$/;"	c
AsyncIo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl<T: Read + Write> AsyncIo<T> {$/;"	c
AsyncIo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl<T: Read + Write> AsyncRead for AsyncIo<T> {$/;"	c
AsyncIo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl<T: Read + Write> AsyncWrite for AsyncIo<T> {$/;"	c
AsyncIo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl<T: Read> Read for AsyncIo<T> {$/;"	c
AsyncIo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl<T: Write> Write for AsyncIo<T> {$/;"	c
AsyncIo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl<T> AsyncIo<T> {$/;"	c
AsyncIo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^pub struct AsyncIo<T> {$/;"	s
AsyncIo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    impl<T: Read> MemRead for ::mock::AsyncIo<T> {$/;"	c	module:tests
AsyncReader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/async.rs	/^impl Read for AsyncReader {$/;"	c
AsyncReader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/async.rs	/^pub struct AsyncReader {$/;"	s
Attr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^impl<'a> Predicate for Attr<&'a str, &'a str> {$/;"	c
Attr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^impl<'a> Predicate for Attr<&'a str, ()> {$/;"	c
Attr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^pub struct Attr<N, V>(pub N, pub V);$/;"	s
AttrChar	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    AttrChar,$/;"	e	enum:PercentEncoding
AttrCharEncodeSet	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^impl EncodeSet for AttrCharEncodeSet {$/;"	c
AttrCharEncodeSet	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^struct AttrCharEncodeSet;$/;"	s
Attrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^        impl<'a> fmt::Debug for Attrs<'a> {$/;"	c	method:Node::fmt
Attrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^        struct Attrs<'a>(&'a [(QualName, StrTendril)]);$/;"	s	method:Node::fmt
Auto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    Auto,$/;"	e	enum:Ver
Auto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    Auto,$/;"	e	enum:WriteStrategy
Auto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    Auto,$/;"	e	enum:MatchNfaType
Backspace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Backspace,$/;"	e	enum:Key
Backtrack	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    Backtrack,$/;"	e	enum:MatchNfaType
BeforeFragment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    BeforeFragment,$/;"	e	enum:Position
BeforeHost	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    BeforeHost,$/;"	e	enum:Position
BeforePassword	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    BeforePassword,$/;"	e	enum:Position
BeforePath	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    BeforePath,$/;"	e	enum:Position
BeforePort	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    BeforePort,$/;"	e	enum:Position
BeforeQuery	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    BeforeQuery,$/;"	e	enum:Position
BeforeScheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    BeforeScheme,$/;"	e	enum:Position
BeforeUsername	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    BeforeUsername,$/;"	e	enum:Position
Bg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^impl<C: Color> fmt::Display for Bg<C> {$/;"	c
Bg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^pub struct Bg<C: Color>(pub C);$/;"	s
BinaryBytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/format.rs	/^impl fmt::Display for BinaryBytes {$/;"	c
BinaryBytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/format.rs	/^pub struct BinaryBytes(pub u64);$/;"	s
Bits	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^type Bits = u32;$/;"	t
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    From<Box<Stream<Item = Chunk, Error = Box<::std::error::Error + Send + Sync>> + Send + 'stat/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^impl Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^impl Default for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^impl From<&'static [u8]> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^impl From<&'static str> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^impl From<Bytes> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^impl From<Chunk> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^impl From<Cow<'static, [u8]>> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^impl From<Cow<'static, str>> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^impl From<String> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^impl From<Vec<u8>> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^impl Payload for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^impl Stream for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^impl fmt::Debug for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^pub struct Body {$/;"	s
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Body,$/;"	e	enum:Kind
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    Body(Decoder),$/;"	e	enum:Reading
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    Body(Encoder),$/;"	e	enum:Writing
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    Body,$/;"	e	enum:ChunkedState
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    Body(PipeToSendStream<B>),$/;"	e	enum:H2StreamState
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^impl Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^impl From<&'static [u8]> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^impl From<&'static str> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^impl From<Bytes> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^impl From<String> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^impl From<Vec<u8>> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^impl Stream for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^impl fmt::Debug for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^pub struct Body {$/;"	s
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^impl Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^impl From<&'static [u8]> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^impl From<&'static str> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^impl From<File> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^impl From<String> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^impl From<Vec<u8>> for Body {$/;"	c
Body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^pub struct Body {$/;"	s
BodyCr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    BodyCr,$/;"	e	enum:ChunkedState
BodyLength	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^pub enum BodyLength {$/;"	g
BodyLf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    BodyLf,$/;"	e	enum:ChunkedState
BodySender	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^type BodySender = mpsc::Sender<Result<Chunk, ::Error>>;$/;"	t
BodyUser	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    BodyUser,$/;"	e	enum:Kind
BodyWrite	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    BodyWrite,$/;"	e	enum:Kind
Bounded	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^impl<'a, 'm, 'r, 's, I: Input> Bounded<'a, 'm, 'r, 's, I> {$/;"	c
Bounded	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^pub struct Bounded<'a, 'm, 'r, 's, I> {$/;"	s
Box	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^impl Fail for Box<Fail> {$/;"	c
Box	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/payload.rs	/^impl<E: Payload> Payload for Box<E> {$/;"	c
BoxStd	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/box_std.rs	/^impl Fail for BoxStd {}$/;"	c
BoxStd	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/box_std.rs	/^impl fmt::Debug for BoxStd {$/;"	c
BoxStd	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/box_std.rs	/^impl fmt::Display for BoxStd {$/;"	c
BoxStd	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/box_std.rs	/^pub struct BoxStd(pub Box<Error + Send + Sync + 'static>);$/;"	s
BoxedConnectFut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^type BoxedConnectFut = Box<Future<Item=(Duplex, Connected), Error=io::Error> + Send>;$/;"	t
BoyerMoore	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    BoyerMoore(BoyerMooreSearch),$/;"	e	enum:Matcher
BoyerMooreSearch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^impl BoyerMooreSearch {$/;"	c
BoyerMooreSearch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^pub struct BoyerMooreSearch {$/;"	s
BufDeque	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl<T: Buf> Buf for BufDeque<T> {$/;"	c
BufDeque	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl<T> BufDeque<T> {$/;"	c
BufDeque	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^struct BufDeque<T> {$/;"	s
BufKind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^enum BufKind<B> {$/;"	g
Buffered	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl<T, B> Buffered<T, B>$/;"	c
Buffered	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl<T, B> MemRead for Buffered<T, B> $/;"	c
Buffered	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl<T, B> fmt::Debug for Buffered<T, B>$/;"	c
Buffered	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^pub struct Buffered<T, B> {$/;"	s
Builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl AssertSendSync for Builder {}$/;"	c
Builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl Builder {$/;"	c
Builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^pub struct Builder {$/;"	s
Builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^impl Builder {$/;"	c
Builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^impl Default for Builder {$/;"	c
Builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^impl fmt::Debug for Builder {$/;"	c
Builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^pub struct Builder {$/;"	s
Builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^impl<E> Builder<AddrIncoming, E> {$/;"	c
Builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^impl<I, E> Builder<I, E> {$/;"	c
Builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^pub struct Builder<I, E = Exec> {$/;"	s
Builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^impl ResponseBuilderExt for http::response::Builder {$/;"	c
Busy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    Busy,$/;"	e	enum:KA
Byte	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^impl Byte {$/;"	c
Byte	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^struct Byte(u16);$/;"	s
ByteClassSet	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^impl ByteClassSet {$/;"	c
ByteClassSet	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^struct ByteClassSet([bool; 256]);$/;"	s
ByteInput	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^impl<'t> ByteInput<'t> {$/;"	c
ByteInput	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^impl<'t> Input for ByteInput<'t> {$/;"	c
ByteInput	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^impl<'t> ops::Deref for ByteInput<'t> {$/;"	c
ByteInput	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^pub struct ByteInput<'t> {$/;"	s
ByteSerialize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^impl<'a> Iterator for ByteSerialize<'a> {$/;"	c
ByteSerialize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^pub struct ByteSerialize<'a> {$/;"	s
Bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^impl From<Chunk> for Bytes {$/;"	c
Bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    Bytes { start: u8, end: u8 },$/;"	e	enum:InstHole
Bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    Bytes(&'a [u8]),$/;"	e	enum:LiteralIter
Bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    Bytes(SingleByteSet),$/;"	e	enum:Matcher
Bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    Bytes(InstBytes),$/;"	e	enum:Inst
Bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    Bytes(Bytes),$/;"	e	enum:Kind
Bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    Bytes(Cursor<Bytes>),$/;"	e	enum:Reader
CANCELED	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^        static CANCELED: &str = "pool checkout failed";$/;"	v	method:Checkout::poll_waiter
COUNTER	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/origin.rs	/^        static COUNTER: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	v	method:Origin::new_opaque
Cache	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^impl Cache {$/;"	c
Cache	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^pub struct Cache {$/;"	s
Cache	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^impl Cache {$/;"	c
Cache	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^pub struct Cache {$/;"	s
Cache	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^impl Cache {$/;"	c
Cache	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^pub struct Cache {$/;"	s
CacheInner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^impl CacheInner {$/;"	c
CacheInner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^struct CacheInner {$/;"	s
CachedDate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/date.rs	/^impl CachedDate {$/;"	c
CachedDate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/date.rs	/^impl fmt::Write for CachedDate {$/;"	c
CachedDate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/date.rs	/^struct CachedDate {$/;"	s
Callback	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^impl<T, U> Callback<T, U> {$/;"	c
Callback	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^pub enum Callback<T, U> {$/;"	g
CanClose	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    impl Poolable for CanClose {$/;"	c	module:tests
CanClose	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    struct CanClose {$/;"	s	module:tests
Canceled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    Canceled {$/;"	e	enum:ClientError
Canceled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Canceled,$/;"	e	enum:Kind
CantImpl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    pub trait CantImpl {}$/;"	i	module:sealed
CantName	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    impl CantImpl for CantName {}$/;"	c	module:sealed
CantName	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    pub enum CantName {}$/;"	g	module:sealed
Capture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    Capture { slot: usize, pos: Slot },$/;"	e	enum:FollowEpsilon
CaptureLocations	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl CaptureLocations {$/;"	c
CaptureLocations	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^pub struct CaptureLocations(re_trait::Locations);$/;"	s
CaptureLocations	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl CaptureLocations {$/;"	c
CaptureLocations	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^pub struct CaptureLocations(re_trait::Locations);$/;"	s
CaptureMatches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl<'r, 't> Iterator for CaptureMatches<'r, 't> {$/;"	c
CaptureMatches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^pub struct CaptureMatches<'r, 't>(re_trait::CaptureMatches<'t, ExecNoSync<'r>>);$/;"	s
CaptureMatches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^impl<'t, R> CaptureMatches<'t, R> where R: RegularExpression, R::Text: 't {$/;"	c
CaptureMatches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^impl<'t, R> Iterator for CaptureMatches<'t, R>$/;"	c
CaptureMatches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^pub struct CaptureMatches<'t, R>(Matches<'t, R>)$/;"	s
CaptureMatches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<'r, 't> Iterator for CaptureMatches<'r, 't> {$/;"	c
CaptureMatches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^pub struct CaptureMatches<'r, 't>(re_trait::CaptureMatches<'t, ExecNoSyncStr<'r>>);$/;"	s
CaptureNames	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl<'r> Iterator for CaptureNames<'r> {$/;"	c
CaptureNames	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^pub struct CaptureNames<'r>(::std::slice::Iter<'r, Option<String>>);$/;"	s
CaptureNames	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<'r> Iterator for CaptureNames<'r> {$/;"	c
CaptureNames	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^pub struct CaptureNames<'r>(::std::slice::Iter<'r, Option<String>>);$/;"	s
CaptureRef	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^struct CaptureRef<'a> {$/;"	s
Captures	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl<'t, 'i> Index<&'i str> for Captures<'t> {$/;"	c
Captures	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl<'t> Captures<'t> {$/;"	c
Captures	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl<'t> Index<usize> for Captures<'t> {$/;"	c
Captures	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl<'t> fmt::Debug for Captures<'t> {$/;"	c
Captures	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^pub struct Captures<'t> {$/;"	s
Captures	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<'t, 'i> Index<&'i str> for Captures<'t> {$/;"	c
Captures	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<'t> Captures<'t> {$/;"	c
Captures	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<'t> Index<usize> for Captures<'t> {$/;"	c
Captures	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<'t> fmt::Debug for Captures<'t> {$/;"	c
Captures	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^pub struct Captures<'t> {$/;"	s
CapturesDebug	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl<'c, 't> fmt::Debug for CapturesDebug<'c, 't> {$/;"	c
CapturesDebug	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^struct CapturesDebug<'c, 't: 'c>(&'c Captures<'t>);$/;"	s
CapturesDebug	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<'c, 't> fmt::Debug for CapturesDebug<'c, 't> {$/;"	c
CapturesDebug	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^struct CapturesDebug<'c, 't: 'c>(&'c Captures<'t>);$/;"	s
Cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^type Cause = Box<StdError + Send + Sync>;$/;"	t
Causes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^impl<'f> Iterator for Causes<'f> {$/;"	c
Causes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^pub struct Causes<'f> {$/;"	s
Center	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    Center,$/;"	e	enum:Alignment
Certificate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/tls.rs	/^impl Certificate {$/;"	c
Certificate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/tls.rs	/^impl fmt::Debug for Certificate {$/;"	c
Certificate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/tls.rs	/^pub struct Certificate(native_tls::Certificate);$/;"	s
Chain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^        impl<T: StdError> StdError for Chain<T> {$/;"	c	function:tests::test_cause_chain
Chain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^        impl<T: fmt::Display> fmt::Display  for Chain<T> {$/;"	c	function:tests::test_cause_chain
Chain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^        struct Chain<T>(Option<T>);$/;"	s	function:tests::test_cause_chain
Chan	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    Chan {$/;"	e	enum:Kind
Char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    Char { c: char },$/;"	e	enum:InstHole
Char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^impl Char {$/;"	c
Char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^impl From<Option<char>> for Char {$/;"	c
Char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^impl From<char> for Char {$/;"	c
Char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^impl PartialEq<char> for Char {$/;"	c
Char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^impl PartialOrd<char> for Char {$/;"	c
Char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^impl fmt::Debug for Char {$/;"	c
Char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^pub struct Char(u32);$/;"	s
Char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    Char(InstChar),$/;"	e	enum:Inst
Char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Char(char),$/;"	e	enum:Key
CharInput	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^impl<'t> CharInput<'t> {$/;"	c
CharInput	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^impl<'t> Input for CharInput<'t> {$/;"	c
CharInput	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^impl<'t> ops::Deref for CharInput<'t> {$/;"	c
CharInput	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^pub struct CharInput<'t>(&'t [u8]);$/;"	s
Checkout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T: Poolable> Checkout<T> {$/;"	c
Checkout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T: Poolable> Future for Checkout<T> {$/;"	c
Checkout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T> Drop for Checkout<T> {$/;"	c
Checkout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^pub(super) struct Checkout<T> {$/;"	s
Child	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^impl<A: Predicate, B: Predicate> Predicate for Child<A, B> {$/;"	c
Child	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^pub struct Child<A, B>(pub A, pub B);$/;"	s
Children	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^        impl<'a> fmt::Debug for Children<'a> {$/;"	c	method:Node::fmt
Children	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^        struct Children<'a>(&'a Node<'a>);$/;"	s	method:Node::fmt
Children	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^impl<'a> Children<'a> {$/;"	c
Children	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^impl<'a> Iterator for Children<'a> {$/;"	c
Children	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^pub struct Children<'a> {$/;"	s
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^impl ::std::ops::Deref for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^impl AsRef<[u8]> for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^impl Buf for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^impl Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^impl Default for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^impl Extend<u8> for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^impl From<&'static [u8]> for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^impl From<&'static str> for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^impl From<Bytes> for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^impl From<String> for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^impl From<Vec<u8>> for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^impl IntoIterator for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^impl fmt::Debug for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^pub struct Chunk {$/;"	s
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^impl ::std::ops::Deref for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^impl AsRef<[u8]> for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^impl Buf for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^impl Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^impl Extend<u8> for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^impl IntoIterator for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^impl fmt::Debug for Chunk {$/;"	c
Chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^pub struct Chunk {$/;"	s
ChunkSize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^impl Buf for ChunkSize {$/;"	c
ChunkSize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^impl ChunkSize {$/;"	c
ChunkSize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^impl fmt::Debug for ChunkSize {$/;"	c
ChunkSize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^impl fmt::Write for ChunkSize {$/;"	c
ChunkSize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^struct ChunkSize {$/;"	s
Chunked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    Chunked(ChunkedState, u64),$/;"	e	enum:Kind
Chunked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    Chunked(Chain<Chain<ChunkSize, B>, StaticBuf>),$/;"	e	enum:BufKind
Chunked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    Chunked,$/;"	e	enum:Kind
ChunkedEnd	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    ChunkedEnd(StaticBuf),$/;"	e	enum:BufKind
ChunkedState	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^enum ChunkedState {$/;"	g
ChunkedState	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^impl ChunkedState {$/;"	c
Class	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^impl<'a> Predicate for Class<&'a str> {$/;"	c
Class	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^pub struct Class<T>(pub T);$/;"	s
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^impl Client<(), Body> {$/;"	c
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^impl Client<HttpConnector, Body> {$/;"	c
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^impl Default for Client<HttpConnector, Body> {$/;"	c
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^impl<C, B> Client<C, B>$/;"	c
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^impl<C, B> Clone for Client<C, B> {$/;"	c
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^impl<C, B> fmt::Debug for Client<C, B> {$/;"	c
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^pub struct Client<C, B = Body> {$/;"	s
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^impl<B> Client<B> {$/;"	c
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^impl<B> Dispatch for Client<B>$/;"	c
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^pub struct Client<B> {$/;"	s
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^impl Client {$/;"	c
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^impl Http1Transaction for Client {$/;"	c
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^pub(crate) enum Client {}$/;"	g
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/client.rs	/^impl<T, B> Client<T, B>$/;"	c
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/client.rs	/^impl<T, B> Future for Client<T, B>$/;"	c
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/client.rs	/^pub(crate) struct Client<T, B>$/;"	s
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^impl Client {$/;"	c
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^impl fmt::Debug for Client {$/;"	c
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^pub struct Client {$/;"	s
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^impl Client {$/;"	c
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^impl fmt::Debug for Client {$/;"	c
Client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^pub struct Client {$/;"	s
ClientBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^impl ClientBuilder {$/;"	c
ClientBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^impl fmt::Debug for ClientBuilder {$/;"	c
ClientBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^pub struct ClientBuilder {$/;"	s
ClientBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^impl ClientBuilder {$/;"	c
ClientBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^impl fmt::Debug for ClientBuilder {$/;"	c
ClientBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^pub struct ClientBuilder {$/;"	s
ClientError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^enum ClientError<B> {$/;"	g
ClientError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^impl<B> ClientError<B> {$/;"	c
ClientError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    ClientError(StatusCode),$/;"	e	enum:Kind
ClientHandle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^impl ClientHandle {$/;"	c
ClientHandle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^struct ClientHandle {$/;"	s
ClientRef	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^struct ClientRef {$/;"	s
ClientRx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^type ClientRx<B> = ::client::dispatch::Receiver<Request<B>, Response<Body>>;$/;"	t
ClientRx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/client.rs	/^type ClientRx<B> = ::client::dispatch::Receiver<Request<B>, Response<Body>>;$/;"	t
ClientTransaction	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^pub(crate) type ClientTransaction = role::Client;$/;"	t
CloseDelimited	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    CloseDelimited,$/;"	e	enum:Kind
Closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Closed,$/;"	e	enum:Kind
Closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    Closed,$/;"	e	enum:Reading
Closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    Closed,$/;"	e	enum:Writing
Closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    Closed,$/;"	e	enum:State
Closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    Closed(vec::IntoIter<Result<DirEntry>>),$/;"	e	enum:DirList
Color	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^impl<'a> Color for &'a Color {$/;"	c
Color	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^pub trait Color {$/;"	i
Comment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    Comment(StrTendril),$/;"	e	enum:Data
Comment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^impl Predicate for Comment {$/;"	c
Comment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^pub struct Comment;$/;"	s
Compat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/compat.rs	/^impl<E: Display> Display for Compat<E> {$/;"	c
Compat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/compat.rs	/^impl<E> Compat<E> {$/;"	c
Compat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/compat.rs	/^pub struct Compat<E> {$/;"	s
CompileClass	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^impl<'a, 'b> CompileClass<'a, 'b> {$/;"	c
CompileClass	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^struct CompileClass<'a, 'b> {$/;"	s
Compiled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    Compiled(Inst),$/;"	e	enum:MaybeInst
CompiledTooBig	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/error.rs	/^    CompiledTooBig(usize),$/;"	e	enum:Error
Compiler	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^impl Compiler {$/;"	c
Compiler	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^pub struct Compiler {$/;"	s
Config	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^struct Config {$/;"	s
Config	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^pub(super) struct Config {$/;"	s
Config	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^struct Config {$/;"	s
Conn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^impl<I, B, T> Conn<I, B, T>$/;"	c
Conn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^impl<I, B: Buf, T> fmt::Debug for Conn<I, B, T> {$/;"	c
Conn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^pub(crate) struct Conn<I, B, T> {$/;"	s
Conn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^impl AsyncRead for Conn {$/;"	c
Conn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^impl AsyncWrite for Conn {$/;"	c
Conn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^impl Read for Conn {$/;"	c
Conn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^impl Write for Conn {$/;"	c
Conn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^pub(crate) enum Conn {$/;"	g
ConnDropRef	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/client.rs	/^type ConnDropRef = mpsc::Sender<Never>;$/;"	t
ConnEither	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^type ConnEither<T, B> = Either<$/;"	t
Connect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^pub trait Connect: Send + Sync {$/;"	i
Connect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Connect,$/;"	e	enum:Kind
ConnectAsync	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^impl<S: Read + Write> Future for ConnectAsync<S> {$/;"	c
ConnectAsync	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^pub struct ConnectAsync<S> {$/;"	s
Connected	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^impl Connected {$/;"	c
Connected	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^pub struct Connected {$/;"	s
Connected	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^        Connected(W::Future),$/;"	e	enum:spawn_all::State
Connecting	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    Connecting(ConnectingTcp),$/;"	e	enum:State
Connecting	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T: Poolable> Connecting<T> {$/;"	c
Connecting	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T: Poolable> Drop for Connecting<T> {$/;"	c
Connecting	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^pub(super) struct Connecting<T: Poolable> {$/;"	s
Connecting	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^        Connecting(Connecting<I, N, E>, W),$/;"	e	enum:spawn_all::State
Connecting	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^impl<I, F, E, S, B> Future for Connecting<I, F, E>$/;"	c
Connecting	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^pub struct Connecting<I, F, E = Exec> {$/;"	s
Connecting	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^pub(crate) type Connecting = Box<Future<Item=(Conn, Connected), Error=io::Error> + Send>;$/;"	t
ConnectingTcp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^impl ConnectingTcp {$/;"	c
ConnectingTcp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^struct ConnectingTcp {$/;"	s
ConnectingTcpFallback	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^struct ConnectingTcpFallback {$/;"	s
ConnectingTcpFuture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^        impl Future for ConnectingTcpFuture {$/;"	c	function:tests::client_happy_eyeballs
ConnectingTcpFuture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^        struct ConnectingTcpFuture(ConnectingTcp);$/;"	s	function:tests::client_happy_eyeballs
ConnectingTcpRemote	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^impl ConnectingTcpRemote {$/;"	c
ConnectingTcpRemote	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^struct ConnectingTcpRemote {$/;"	s
Connection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl<T, B> Connection<T, B>$/;"	c
Connection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl<T, B> Future for Connection<T, B>$/;"	c
Connection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl<T, B> fmt::Debug for Connection<T, B>$/;"	c
Connection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl<T: Send + Sync, B: Send + Sync> AssertSendSync for Connection<T, B>$/;"	c
Connection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl<T: Send, B: Send> AssertSend for Connection<T, B>$/;"	c
Connection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^pub struct Connection<T, B>$/;"	s
Connection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^impl<I, B, S, E> Connection<I, S, E>$/;"	c
Connection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^impl<I, B, S, E> Future for Connection<I, S, E>$/;"	c
Connection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^impl<I, S> fmt::Debug for Connection<I, S>$/;"	c
Connection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^pub struct Connection<T, S, E = Exec>$/;"	s
ConnectionMode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^enum ConnectionMode {$/;"	g
Connector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^impl Connect for Connector {$/;"	c
Connector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^impl Connector {$/;"	c
Connector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^pub(crate) struct Connector {$/;"	s
Context	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/context.rs	/^impl<D> From<D> for Context<D>$/;"	c
Context	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^pub enum Context {$/;"	g
Ctrl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Ctrl(char),$/;"	e	enum:Key
Cursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl Cursor<Vec<u8>> {$/;"	c
Cursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl<T: AsRef<[u8]>> Buf for Cursor<T> {$/;"	c
Cursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl<T: AsRef<[u8]>> Cursor<T> {$/;"	c
Cursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl<T: AsRef<[u8]>> fmt::Debug for Cursor<T> {$/;"	c
Cursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^pub struct Cursor<T> {$/;"	s
Custom	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    struct Custom(i32);$/;"	s	module:tests
Custom	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    Custom(Custom),$/;"	e	enum:Intercept
Custom	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^impl fmt::Debug for Custom {$/;"	c
Custom	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^struct Custom(Arc<Fn(&Url) -> Option<Url> + Send + Sync + 'static>);$/;"	s
Custom	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    Custom(Box<Fn(RedirectAttempt) -> RedirectAction + Send + Sync + 'static>),$/;"	e	enum:Policy
DEFAULT_USER_AGENT	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^static DEFAULT_USER_AGENT: &'static str =$/;"	v
DUMMY	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^            static DUMMY: &[u8] = &[0];$/;"	v	method:AsyncIo::write_buf
Data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    type Data = Chunk;$/;"	t	implementation:Body
Data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/payload.rs	/^    type Data = E::Data;$/;"	t	implementation:Box
Data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/payload.rs	/^    type Data: Buf + Send;$/;"	t	interface:Payload
Data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^pub enum Data {$/;"	g
DebugLength	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^impl<'a> fmt::Debug for DebugLength<'a> {$/;"	c
DebugLength	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^struct DebugLength<'a>(&'a Option<u64>);$/;"	s
DecimalBytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/format.rs	/^impl fmt::Display for DecimalBytes {$/;"	c
DecimalBytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/format.rs	/^pub struct DecimalBytes(pub u64);$/;"	s
DecodedLength	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^    impl DecodedLength {$/;"	c	module:body_length
DecodedLength	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^    impl fmt::Display for DecodedLength {$/;"	c	module:body_length
DecodedLength	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^    pub(crate) struct DecodedLength(u64);$/;"	s	module:body_length
Decoder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^impl Decoder {$/;"	c
Decoder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^impl fmt::Debug for Decoder {$/;"	c
Decoder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^pub struct Decoder {$/;"	s
Decoder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^impl Decoder {$/;"	c
Decoder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^impl Stream for Decoder {$/;"	c
Decoder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^impl fmt::Debug for Decoder {$/;"	c
Decoder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^pub struct Decoder {$/;"	s
Default	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^    Default,$/;"	e	enum:Exec
DelayEof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^enum DelayEof {$/;"	g
DelayEofUntil	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^type DelayEofUntil = oneshot::Receiver<Never>;$/;"	t
Delete	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Delete,$/;"	e	enum:Key
Descendant	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^impl<A: Predicate, B: Predicate> Predicate for Descendant<A, B> {$/;"	c
Descendant	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^pub struct Descendant<A, B>(pub A, pub B);$/;"	s
Descendants	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^impl<'a> Iterator for Descendants<'a> {$/;"	c
Descendants	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^pub struct Descendants<'a> {$/;"	s
Destination	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^impl Destination {$/;"	c
Destination	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^pub struct Destination {$/;"	s
Destination	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^impl Dst for Destination {$/;"	c
DetectColors	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^pub trait DetectColors {$/;"	i
DetectCursorPos	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^pub trait DetectCursorPos {$/;"	i
Dfa	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    Dfa,$/;"	e	enum:MatchType
DfaAnchoredReverse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    DfaAnchoredReverse,$/;"	e	enum:MatchType
DfaMany	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    DfaMany,$/;"	e	enum:MatchType
DfaSuffix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    DfaSuffix,$/;"	e	enum:MatchType
Dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    Dir(DirEntry),$/;"	e	enum:WalkEvent
Dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    Dir(PathBuf, Vec<Tree>),$/;"	e	enum:Tree
DirEntry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl Clone for DirEntry {$/;"	c
DirEntry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl DirEntry {$/;"	c
DirEntry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl fmt::Debug for DirEntry {$/;"	c
DirEntry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^pub struct DirEntry {$/;"	s
DirEntry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/unix.rs	/^impl DirEntryExt for DirEntry {$/;"	c
DirEntryExt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/unix.rs	/^pub trait DirEntryExt {$/;"	i
DirList	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^enum DirList {$/;"	g
DirList	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl DirList {$/;"	c
DirList	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl Iterator for DirList {$/;"	c
Disabled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    Disabled,$/;"	e	enum:KA
Dispatch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^pub(crate) trait Dispatch {$/;"	i
Dispatched	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^pub(crate) enum Dispatched {$/;"	g
Dispatcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^impl<D, Bs, I, T> Dispatcher<D, Bs, I, T>$/;"	c
Dispatcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^impl<D, Bs, I, T> Future for Dispatcher<D, Bs, I, T>$/;"	c
Dispatcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^pub(crate) struct Dispatcher<D, Bs: Payload, I, T> {$/;"	s
Document	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^impl Document {$/;"	c
Document	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^impl From<StrTendril> for Document {$/;"	c
Document	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^impl<'a> From<&'a str> for Document {$/;"	c
Document	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^pub struct Document {$/;"	s
Domain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    Domain(S),$/;"	e	enum:Host
Domain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    Domain(vec::IntoIter<SocketAddr>),$/;"	e	enum:SocketAddrsState
Domain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    Domain,$/;"	e	enum:HostInternal
Done	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    Done,$/;"	e	enum:SocketAddrsState
DoneHidden	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    DoneHidden,$/;"	e	enum:Status
DoneVisible	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    DoneVisible,$/;"	e	enum:Status
Down	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^impl fmt::Display for Down {$/;"	c
Down	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^pub struct Down(pub u16);$/;"	s
Down	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Down,$/;"	e	enum:Key
Down	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/scroll.rs	/^impl fmt::Display for Down {$/;"	c
Down	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/scroll.rs	/^pub struct Down(pub u16);$/;"	s
DownloadProgress	/home/doc/Code/Git/oracle/src/download.rs	/^impl<R: Read> Read for DownloadProgress<R> {$/;"	c
DownloadProgress	/home/doc/Code/Git/oracle/src/download.rs	/^pub struct DownloadProgress<R> {$/;"	s
Draining	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    Draining,$/;"	e	enum:State
Draining	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^impl Future for Draining {$/;"	c
Draining	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^pub struct Draining {$/;"	s
Draining	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/shutdown.rs	/^    Draining(Draining),$/;"	e	enum:State
Dst	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^pub(crate) trait Dst {$/;"	i
Duplex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl AsyncRead for Duplex {$/;"	c
Duplex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl AsyncWrite for Duplex {$/;"	c
Duplex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl Duplex {$/;"	c
Duplex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl Read for Duplex {$/;"	c
Duplex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl Write for Duplex {$/;"	c
Duplex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^pub struct Duplex {$/;"	s
DuplexHandle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl Drop for DuplexHandle {$/;"	c
DuplexHandle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl DuplexHandle {$/;"	c
DuplexHandle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^pub struct DuplexHandle {$/;"	s
DuplexInner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^struct DuplexInner {$/;"	s
E	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^impl<E: StdError + Send + Sync + 'static> Fail for E {}$/;"	c
E	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^impl<E, F, B> H2Exec<F, B> for E$/;"	c
E	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^impl<I, N, S, E, W> NewSvcExec<I, N, S, E, W> for E$/;"	c
ENABLED	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^        static ENABLED: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	v	method:InternalBacktrace::new
Element	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    Element(QualName, Vec<(QualName, StrTendril)>),$/;"	e	enum:Data
Element	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^impl Predicate for Element {$/;"	c
Element	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^pub struct Element;$/;"	s
Empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/lazy.rs	/^    Empty,$/;"	e	enum:Inner
Empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    Empty,$/;"	e	enum:LiteralIter
Empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    Empty,$/;"	e	enum:Matcher
EmptyFlags	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^struct EmptyFlags {$/;"	s
EmptyLook	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    EmptyLook { look: EmptyLook },$/;"	e	enum:InstHole
EmptyLook	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    EmptyLook(InstEmptyLook),$/;"	e	enum:Inst
EmptyLook	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^pub enum EmptyLook {$/;"	g
Encode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^pub(crate) struct Encode<'a, T: 'a> {$/;"	s
EncodedBuf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^impl<B: Buf> From<B> for EncodedBuf<B> {$/;"	c
EncodedBuf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^impl<B: Buf> From<Chain<Chain<ChunkSize, B>, StaticBuf>> for EncodedBuf<B> {$/;"	c
EncodedBuf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^impl<B: Buf> From<Take<B>> for EncodedBuf<B> {$/;"	c
EncodedBuf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^impl<B> Buf for EncodedBuf<B>$/;"	c
EncodedBuf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^pub struct EncodedBuf<B> {$/;"	s
Encoder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^impl Encoder {$/;"	c
Encoder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^pub struct Encoder {$/;"	s
EncodingOverride	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^impl Debug for EncodingOverride {$/;"	c
EncodingOverride	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^impl EncodingOverride {$/;"	c
EncodingOverride	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^pub struct EncodingOverride {$/;"	s
EncodingOverride	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^pub struct EncodingOverride;$/;"	s
End	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    End,$/;"	e	enum:ChunkedState
End	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    End,$/;"	e	enum:Key
EndCr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    EndCr,$/;"	e	enum:ChunkedState
EndLf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    EndLf,$/;"	e	enum:ChunkedState
EndLine	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    EndLine,$/;"	e	enum:EmptyLook
EndText	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    EndText,$/;"	e	enum:EmptyLook
Envelope	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^impl<T, U> Drop for Envelope<T, U> {$/;"	c
Envelope	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^struct Envelope<T, U>(Option<(T, Callback<T, U>)>);$/;"	s
Eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    Eof(DelayEofUntil),$/;"	e	enum:DelayEof
Eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    Eof(bool),$/;"	e	enum:Kind
Eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    Eof$/;"	e	enum:StreamState
Eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    Eof,$/;"	e	enum:ReadState
Err	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    type Err = Error;$/;"	t	implementation:Regex
Err	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    type Err = Error;$/;"	t	implementation:Regex
Err	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^    Err(E),$/;"	e	enum:Waited
Err	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    type Err = ParseError;$/;"	t	implementation:Url
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^impl AsRef<Fail> for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^impl Debug for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^impl Display for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^impl Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^impl<F: Fail> From<F> for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^pub struct Error {$/;"	s
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^impl Debug for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^impl Display for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^impl Drop for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^impl Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^impl<F: Fail> From<F> for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^pub struct Error {$/;"	s
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    type Error = ::Error;$/;"	t	implementation:Body
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/payload.rs	/^    type Error = E::Error;$/;"	t	implementation:Box
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/payload.rs	/^    type Error: Into<Box<::std::error::Error + Send + Sync>>;$/;"	t	interface:Payload
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    type Error = ::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    type Error = ::Error;$/;"	t	implementation:ResponseFuture
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    type Error = ::Error;$/;"	t	implementation:WhenReady
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^        type Error = ();$/;"	t	implementation:sealed::GaiTask
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    type Error = io::Error;$/;"	t	implementation:GaiBlocking
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    type Error = io::Error;$/;"	t	implementation:GaiFuture
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    type Error = io::Error;$/;"	t	implementation:TokioThreadpoolGaiFuture
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^            type Error = ::std::io::Error;$/;"	t	implementation:tests::client_happy_eyeballs::ConnectingTcpFuture
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    Error(Option<io::Error>),$/;"	e	enum:State
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    type Error = io::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    type Error = io::Error;$/;"	t	implementation:HttpConnecting
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    type Error: Into<Box<StdError + Send + Sync>>;$/;"	t	interface:Connect
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    type Error = Never;$/;"	t	implementation:Receiver
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    type Error = ::Error;$/;"	t	implementation:ResponseFuture
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    type Error = ();$/;"	t	implementation:IdleInterval
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    type Error = ::Error;$/;"	t	implementation:Checkout
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^        type Error = ();$/;"	t	implementation:tests::TestMe
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    type Error = ();$/;"	t	implementation:Draining
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    type Error = F::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/lazy.rs	/^    type Error = R::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^impl AssertSendSync for Error {}$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^impl Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^impl From<Parse> for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^impl StdError for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^impl fmt::Debug for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^pub struct Error {$/;"	s
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    type Error = io::Error;$/;"	t	implementation:MockConnector
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    type Error = ::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/client.rs	/^    type Error = ::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^    type Error = ::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    type Error = ();$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    type Error = ::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^        type Error = ();$/;"	t	module:spawn_all
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^        type Error = ::Error;$/;"	t	module:upgrades
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    type Error = ::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    type Error = F::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    type Error = ::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/shutdown.rs	/^    type Error = ::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    type Error = ::std::io::Error;$/;"	t	implementation:AddrIncoming
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type Error = <Ret::Item as Service>::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type Error = E;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type Error: Into<Box<StdError + Send + Sync>>;$/;"	t	interface:MakeService
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type Error: Into<Box<StdError + Send + Sync>>;$/;"	t	interface:MakeServiceRef
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type Error = N::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type Error = S::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type Error: Into<Box<StdError + Send + Sync>>;$/;"	t	interface:NewService
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    type Error = Never;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    type Error = Never;$/;"	t	implementation:ServiceFn
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    type Error = Never;$/;"	t	implementation:ServiceFnOk
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    type Error = Ret::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    type Error: Into<Box<StdError + Send + Sync>>;$/;"	t	interface:Service
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    type Error = ::Error;$/;"	t	implementation:OnUpgrade
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/error.rs	/^impl ::std::error::Error for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/error.rs	/^impl fmt::Debug for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/error.rs	/^pub enum Error {$/;"	g
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    type Error = ::Error;$/;"	t	implementation:Body
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    Error(Option<::Error>),$/;"	e	enum:PendingInner
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    type Error = ::Error;$/;"	t	implementation:Pending
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    type Error = ::Error;$/;"	t	implementation:PendingRequest
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    type Error = error::Error;$/;"	t	implementation:Decoder
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    type Error = error::Error;$/;"	t	implementation:Gzip
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    type Error = error::Error;$/;"	t	implementation:Pending
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    type Error = ::Error;$/;"	t	implementation:Json
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    type Error = io::Error;$/;"	t
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    type Error = io::Error;$/;"	t	implementation:Connector
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^    type Error = Error;$/;"	t	implementation:ConnectAsync
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^    type Error = Error;$/;"	t	implementation:MidHandshake
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^impl Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^impl From<InternalFrom<Error>> for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^impl StdError for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^impl fmt::Debug for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^impl<T> From<InternalFrom<T>> for Error$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^pub struct Error {$/;"	s
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    type Error = <async_impl::Decoder as Stream>::Error;$/;"	t	implementation:WaitBody
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl From<Error> for io::Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl error::Error for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^pub struct Error {$/;"	s
ErrorImpl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl.rs	/^impl ErrorImpl {$/;"	c
ErrorImpl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl.rs	/^impl<F: Fail> From<F> for ErrorImpl {$/;"	c
ErrorImpl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl.rs	/^pub(crate) struct ErrorImpl {$/;"	s
ErrorImpl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^impl ErrorImpl {$/;"	c
ErrorImpl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^impl<F: Fail> From<F> for ErrorImpl {$/;"	c
ErrorImpl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^pub(crate) struct ErrorImpl {$/;"	s
ErrorImpl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^struct ErrorImpl {$/;"	s
ErrorInner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^enum ErrorInner {$/;"	g
ErrorMessage	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error_message.rs	/^impl<D: Display + Debug + Sync + Send + 'static> Display for ErrorMessage<D> {$/;"	c
ErrorMessage	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error_message.rs	/^impl<D: Display + Debug + Sync + Send + 'static> Fail for ErrorMessage<D> { }$/;"	c
ErrorMessage	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error_message.rs	/^struct ErrorMessage<D: Display + Debug + Sync + Send + 'static> {$/;"	s
Esc	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Esc,$/;"	e	enum:Key
Estimate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^impl Estimate {$/;"	c
Estimate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^pub struct Estimate {$/;"	s
Event	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^pub enum Event {$/;"	g
Events	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^impl<R: Read> Iterator for Events<R> {$/;"	c
Events	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^pub struct Events<R>  {$/;"	s
EventsAndRaw	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^impl<R: Read> Iterator for EventsAndRaw<R> {$/;"	c
EventsAndRaw	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^pub struct EventsAndRaw<R> {$/;"	s
Ex1	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    struct Ex1(usize);$/;"	s	module:tests
Ex2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    struct Ex2(&'static str);$/;"	s	module:tests
Ex3	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    struct Ex3(&'static str);$/;"	s	module:tests
Exact	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    Exact(B),$/;"	e	enum:BufKind
Exact	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    Exact(usize),$/;"	e	enum:ReadStrategy
Exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^impl Exec {$/;"	c
Exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^impl fmt::Debug for Exec {$/;"	c
Exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^impl<F, B> H2Exec<F, B> for Exec$/;"	c
Exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^impl<I, N, S, E, W> NewSvcExec<I, N, S, E, W> for Exec$/;"	c
Exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^pub enum Exec {$/;"	g
Exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^impl Clone for Exec {$/;"	c
Exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^impl Exec {$/;"	c
Exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^pub struct Exec {$/;"	s
ExecBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^impl ExecBuilder {$/;"	c
ExecBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^pub struct ExecBuilder {$/;"	s
ExecNoSync	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^impl<'c> ExecNoSync<'c> {$/;"	c
ExecNoSync	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^impl<'c> RegularExpression for ExecNoSync<'c> {$/;"	c
ExecNoSync	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^pub struct ExecNoSync<'c> {$/;"	s
ExecNoSyncStr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^impl<'c> ExecNoSyncStr<'c> {$/;"	c
ExecNoSyncStr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^impl<'c> RegularExpression for ExecNoSyncStr<'c> {$/;"	c
ExecNoSyncStr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^pub struct ExecNoSyncStr<'c>(ExecNoSync<'c>);$/;"	s
ExecReadOnly	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^impl ExecReadOnly {$/;"	c
ExecReadOnly	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^struct ExecReadOnly {$/;"	s
Execute	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Execute,$/;"	e	enum:Kind
Executor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^    Executor(Arc<Executor<Box<Future<Item=(), Error=()> + Send>> + Send + Sync>),$/;"	e	enum:Exec
Exit	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    Exit,$/;"	e	enum:WalkEvent
ExitDisplay	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/exitfailure-0.5.1/src/lib.rs	/^impl<E: std::fmt::Display> From<E> for ExitDisplay<E> {$/;"	c
ExitDisplay	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/exitfailure-0.5.1/src/lib.rs	/^impl<E: std::fmt::Display> std::fmt::Debug for ExitDisplay<E> {$/;"	c
ExitDisplay	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/exitfailure-0.5.1/src/lib.rs	/^pub struct ExitDisplay<E: std::fmt::Display>(E);$/;"	s
ExitFailure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/exitfailure-0.5.1/src/lib.rs	/^impl std::fmt::Debug for ExitFailure {$/;"	c
ExitFailure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/exitfailure-0.5.1/src/lib.rs	/^impl<T: Into<failure::Error>> From<T> for ExitFailure {$/;"	c
ExitFailure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/exitfailure-0.5.1/src/lib.rs	/^pub struct ExitFailure(failure::Error);$/;"	s
Expiration	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl Expiration {$/;"	c
Expiration	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^struct Expiration(Option<Duration>);$/;"	s
Extension	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    Extension,$/;"	e	enum:ChunkedState
Extra	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^struct Extra {$/;"	s
Extra	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^impl Clone for Extra {$/;"	c
Extra	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^impl Extra {$/;"	c
Extra	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^impl fmt::Debug for Extra {$/;"	c
Extra	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^pub(super) struct Extra(Box<ExtraInner>);$/;"	s
ExtraChain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^impl<T: Clone> Clone for ExtraChain<T> {$/;"	c
ExtraChain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^impl<T> ExtraInner for ExtraChain<T>$/;"	c
ExtraChain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^struct ExtraChain<T>(Box<ExtraInner>, T);$/;"	s
ExtraEnvelope	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^impl<T> ExtraInner for ExtraEnvelope<T>$/;"	c
ExtraEnvelope	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^struct ExtraEnvelope<T>(T);$/;"	s
ExtraInner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^trait ExtraInner: Send + Sync {$/;"	i
F	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^impl<F, R, S> NewService for F$/;"	c
F	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl<F, T> Replacer for F where F: FnMut(&Captures) -> T, T: AsRef<[u8]> {$/;"	c
F	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<F, T> Replacer for F where F: FnMut(&Captures) -> T, T: AsRef<str> {$/;"	c
F	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^impl<F: Fn(&Node) -> bool> Predicate for F {$/;"	c
F	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    F(u8),$/;"	e	enum:Key
F	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^impl<F: FnMut(char) -> bool> Pattern for F {$/;"	c
Fail	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/as_fail.rs	/^impl AsFail for Fail {$/;"	c
Fail	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^impl Fail {$/;"	c
Fail	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^pub trait Fail: Display + Debug + Send + Sync + 'static {$/;"	i
FailData	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    type FailData;$/;"	t
FailData	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    type FailData;$/;"	t
Fallback	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    Fallback,$/;"	e	enum:ConnectionMode
Fallback	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^enum Fallback<E> {$/;"	g
Fallback	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^impl<E> Fallback<E> {$/;"	c
FastWrite	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^impl<'a> fmt::Write for FastWrite<'a> {$/;"	c
FastWrite	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^struct FastWrite<'a>(&'a mut Vec<u8>);$/;"	s
Fg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^impl<C: Color> fmt::Display for Fg<C> {$/;"	c
Fg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^pub struct Fg<C: Color>(pub C);$/;"	s
File	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    File,$/;"	e	enum:SchemeType
File	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    File(DirEntry),$/;"	e	enum:WalkEvent
File	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    File(PathBuf),$/;"	e	enum:Tree
FilterEntry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl<P> FilterEntry<IntoIter, P> where P: FnMut(&DirEntry) -> bool {$/;"	c
FilterEntry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl<P> Iterator for FilterEntry<IntoIter, P>$/;"	c
FilterEntry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^pub struct FilterEntry<I, P> {$/;"	s
Find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^impl<'a, P: Predicate> Find<'a, P> {$/;"	c
Find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^impl<'a, P: Predicate> Iterator for Find<'a, P> {$/;"	c
Find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^pub struct Find<'a, P> {$/;"	s
Find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^impl<'a, P: Predicate> Find<'a, P> {$/;"	c
Find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^impl<'a, P: Predicate> Iterator for Find<'a, P> {$/;"	c
Find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^pub struct Find<'a, P: Predicate> {$/;"	s
Finished	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    type Finished = &'a mut ::Url;$/;"	t	implementation:UrlQuery
Finished	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    type Finished = Self;$/;"	t	implementation:String
Finished	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    type Finished;$/;"	t	interface:Target
Flatten	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    Flatten,$/;"	e	enum:WriteStrategy
Follow	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    Follow,$/;"	e	enum:Action
FollowEpsilon	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^enum FollowEpsilon {$/;"	g
Form	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^impl Form {$/;"	c
Form	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^impl fmt::Debug for Form {$/;"	c
Form	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^pub struct Form {$/;"	s
FormattedDuration	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/format.rs	/^impl fmt::Display for FormattedDuration {$/;"	c
FormattedDuration	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/format.rs	/^pub struct FormattedDuration(pub Duration);$/;"	s
FreqyPacked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    FreqyPacked(FreqyPacked),$/;"	e	enum:Matcher
FreqyPacked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^impl FreqyPacked {$/;"	c
FreqyPacked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^pub struct FreqyPacked {$/;"	s
Fsm	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^impl<'a> Fsm<'a> {$/;"	c
Fsm	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^pub struct Fsm<'a> {$/;"	s
Fsm	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^impl<'r, I: Input> Fsm<'r, I> {$/;"	c
Fsm	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^pub struct Fsm<'r, I> {$/;"	s
FullDataArg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/mod.rs	/^    pub struct FullDataArg(pub(crate) ());$/;"	s	module:internal
FullDataRet	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/mod.rs	/^    pub struct FullDataRet<B>(pub(crate) Option<B>);$/;"	s	module:internal
Fut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/lazy.rs	/^    Fut(R),$/;"	e	enum:Inner
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    type Future = GaiFuture;$/;"	t	implementation:GaiResolver
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    type Future = TokioThreadpoolGaiFuture;$/;"	t	implementation:TokioThreadpoolGaiResolver
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    type Future: Future<Item=Self::Addrs, Error=io::Error>;$/;"	t	interface:Resolve
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    type Future = HttpConnecting<R>;$/;"	t
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    type Future: Future<Item=(Self::Transport, Connected), Error=Self::Error> + Send;$/;"	t	interface:Connect
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    type Future = BoxedConnectFut;$/;"	t	implementation:MockConnector
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^        type Future = UpgradeableConnection<I, S, E>;$/;"	t	module:spawn_all
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^        type Future: Future<Item=(), Error=::Error>;$/;"	t	interface:spawn_all::Watcher
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/shutdown.rs	/^    type Future = Watching<UpgradeableConnection<I, S, E>, fn(&mut UpgradeableConnection<I, S, E/;"	t
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type Future = F;$/;"	t
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type Future = Ret::Future;$/;"	t
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type Future: Future<Item=Self::Service, Error=Self::MakeError>;$/;"	t	interface:MakeService
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type Future: Future<Item=Self::Service>;$/;"	t	interface:MakeServiceRef
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type Future = N::Future;$/;"	t
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type Future = R::Future;$/;"	t
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type Future: Future<Item=Self::Service, Error=Self::InitError>;$/;"	t	interface:NewService
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    type Future = Ret::Future;$/;"	t
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    type Future = future::FutureResult<Response<ResBody>, Never>;$/;"	t
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    type Future = future::FutureResult<Self::Item, Self::Error>;$/;"	t	implementation:ServiceFn
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    type Future = future::FutureResult<Self::Item, Self::Error>;$/;"	t	implementation:ServiceFnOk
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    type Future: Future<Item=Response<Self::ResBody>, Error=Self::Error>;$/;"	t	interface:Service
Future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    type Future = Connecting;$/;"	t	implementation:Connector
GaiAddrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl Iterator for GaiAddrs {$/;"	c
GaiAddrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl fmt::Debug for GaiAddrs {$/;"	c
GaiAddrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^pub struct GaiAddrs {$/;"	s
GaiBlocking	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl Future for GaiBlocking {$/;"	c
GaiBlocking	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl GaiBlocking {$/;"	c
GaiBlocking	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^pub(super) struct GaiBlocking {$/;"	s
GaiExecutor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl Executor<oneshot::Execute<GaiBlocking>> for GaiExecutor {$/;"	c
GaiExecutor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^struct GaiExecutor(Arc<Executor<GaiTask> + Send + Sync>);$/;"	s
GaiFuture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl Future for GaiFuture {$/;"	c
GaiFuture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl fmt::Debug for GaiFuture {$/;"	c
GaiFuture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^pub struct GaiFuture {$/;"	s
GaiResolver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl GaiResolver {$/;"	c
GaiResolver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl Resolve for GaiResolver {$/;"	c
GaiResolver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl fmt::Debug for GaiResolver {$/;"	c
GaiResolver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^pub struct GaiResolver {$/;"	s
GaiTask	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    impl Future for GaiTask {$/;"	c	module:sealed
GaiTask	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    impl fmt::Debug for GaiTask {$/;"	c	module:sealed
GaiTask	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    pub struct GaiTask {$/;"	s	module:sealed
Goto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^impl Default for Goto {$/;"	c
Goto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^impl fmt::Display for Goto {$/;"	c
Goto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^pub struct Goto(pub u16, pub u16);$/;"	s
Graceful	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/shutdown.rs	/^impl<I, S, B, F, E> Future for Graceful<I, S, F, E>$/;"	c
Graceful	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/shutdown.rs	/^impl<I, S, F, E> Graceful<I, S, F, E> {$/;"	c
Graceful	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/shutdown.rs	/^pub struct Graceful<I, S, F, E> {$/;"	s
GracefulWatcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/shutdown.rs	/^impl<I, S, E> Watcher<I, S, E> for GracefulWatcher$/;"	c
GracefulWatcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/shutdown.rs	/^pub struct GracefulWatcher(Watch);$/;"	s
Gzip	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    Gzip(Gzip),$/;"	e	enum:Inner
Gzip	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^impl Gzip {$/;"	c
Gzip	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^impl Stream for Gzip {$/;"	c
Gzip	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^struct Gzip {$/;"	s
H1Only	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    H1Only,$/;"	e	enum:ConnectionMode
H2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    H2 {$/;"	e	enum:Kind
H2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    H2,$/;"	e	enum:Alpn
H2Exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^pub trait H2Exec<F, B: Payload>: Clone {$/;"	i
H2Only	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    H2Only,$/;"	e	enum:ConnectionMode
H2Stream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^impl<F, B> Future for H2Stream<F, B>$/;"	c
H2Stream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^impl<F, B> H2Stream<F, B>$/;"	c
H2Stream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^pub struct H2Stream<F, B>$/;"	s
H2StreamState	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^enum H2StreamState<F, B>$/;"	g
Handshake	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl<T, B> Future for Handshake<T, B>$/;"	c
Handshake	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl<T, B> fmt::Debug for Handshake<T, B> {$/;"	c
Handshake	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^pub struct Handshake<T, B> {$/;"	s
Handshaking	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/client.rs	/^    Handshaking(Handshake<T, B>),$/;"	e	enum:State
Handshaking	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    Handshaking(Handshake<T, SendBuf<B::Data>>),$/;"	e	enum:State
HasMore	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    HasMore,$/;"	e	enum:StreamState
Header	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Header,$/;"	e	enum:Parse
HeaderIndices	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^struct HeaderIndices {$/;"	s
HelpUnwrap	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    trait HelpUnwrap<T> {$/;"	i	module:tests
Hidden	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    Hidden,$/;"	e	enum:ProgressDrawTargetKind
Hold	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Hold(u16, u16),$/;"	e	enum:MouseEvent
Hole	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^enum Hole {$/;"	g
Home	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Home,$/;"	e	enum:Key
Host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^impl Host<String> {$/;"	c
Host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^impl<'a> Host<&'a str> {$/;"	c
Host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^impl<S: ::serde::Deserialize> ::serde::Deserialize for Host<S> {$/;"	c
Host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^impl<S: ::serde::Serialize>  ::serde::Serialize for Host<S> {$/;"	c
Host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^impl<S: AsRef<str>> fmt::Display for Host<S> {$/;"	c
Host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^impl<S: HeapSizeOf> HeapSizeOf for Host<S> {$/;"	c
Host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^pub enum Host<S=String> {$/;"	g
HostAndPort	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^impl<'a> HostAndPort<&'a str> {$/;"	c
HostAndPort	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^impl<S: AsRef<str>> ToSocketAddrs for HostAndPort<S> {$/;"	c
HostAndPort	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^impl<S: AsRef<str>> fmt::Display for HostAndPort<S> {$/;"	c
HostAndPort	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^pub struct HostAndPort<S=String> {$/;"	s
HostInternal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^impl ::serde::Deserialize for HostInternal {$/;"	c
HostInternal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^impl ::serde::Serialize for HostInternal {$/;"	c
HostInternal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^impl<S> From<Host<S>> for HostInternal {$/;"	c
HostInternal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^pub enum HostInternal {$/;"	g
Http	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^impl Http {$/;"	c
Http	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^impl<E> Http<E> {$/;"	c
Http	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^pub struct Http<E = Exec> {$/;"	s
Http	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    Http(::http::Error),$/;"	e	enum:Kind
Http	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    Http(::hyper::Uri),$/;"	e	enum:Intercept
Http1	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    Http1(conn::SendRequest<B>),$/;"	e	enum:PoolTx
Http1Dispatcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^type Http1Dispatcher<T, B, R> = proto::dispatch::Dispatcher<$/;"	t
Http1Only	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    Http1Only,$/;"	e	enum:Fallback
Http1Transaction	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^pub(crate) trait Http1Transaction {$/;"	i
Http2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    Http2(conn::Http2SendRequest<B>),$/;"	e	enum:PoolTx
Http2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    Http2,$/;"	e	enum:Ver
Http2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Http2,$/;"	e	enum:Kind
Http2SendRequest	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl<B> Clone for Http2SendRequest<B> {$/;"	c
Http2SendRequest	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl<B> Http2SendRequest<B> {$/;"	c
Http2SendRequest	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl<B> Http2SendRequest<B>$/;"	c
Http2SendRequest	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl<B> fmt::Debug for Http2SendRequest<B> {$/;"	c
Http2SendRequest	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^pub(super) struct Http2SendRequest<B> {$/;"	s
HttpConnecting	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^impl<R: Resolve + fmt::Debug> fmt::Debug for HttpConnecting<R> {$/;"	c
HttpConnecting	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^impl<R: Resolve> Future for HttpConnecting<R> {$/;"	c
HttpConnecting	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^pub struct HttpConnecting<R: Resolve = GaiResolver> {$/;"	s
HttpConnector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^impl HttpConnector {$/;"	c
HttpConnector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^impl HttpConnector<TokioThreadpoolGaiResolver> {$/;"	c
HttpConnector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^impl<R: fmt::Debug> fmt::Debug for HttpConnector<R> {$/;"	c
HttpConnector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^impl<R> Connect for HttpConnector<R>$/;"	c
HttpConnector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^impl<R> HttpConnector<R> {$/;"	c
HttpConnector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^pub struct HttpConnector<R = GaiResolver> {$/;"	s
HttpInfo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^impl HttpInfo {$/;"	c
HttpInfo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^pub struct HttpInfo {$/;"	s
HttpStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^type HttpStream = <HttpConnector as Connect>::Transport;$/;"	t
Https	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    Https(::hyper::Uri),$/;"	e	enum:Intercept
HttpsStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^type HttpsStream = MaybeHttpsStream<HttpStream>;$/;"	t
HumanBytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/format.rs	/^impl fmt::Display for HumanBytes {$/;"	c
HumanBytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/format.rs	/^pub struct HumanBytes(pub u64);$/;"	s
HumanDuration	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/format.rs	/^impl fmt::Display for HumanDuration {$/;"	c
HumanDuration	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/format.rs	/^pub struct HumanDuration(pub Duration);$/;"	s
Hyper	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    Hyper(::hyper::Body),$/;"	e	enum:Inner
Hyper	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    Hyper(::hyper::Error),$/;"	e	enum:Kind
HyperClient	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^type HyperClient = ::hyper::Client<Connector>;$/;"	t
IP	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    IP(InstPtr),$/;"	e	enum:FollowEpsilon
Identity	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/tls.rs	/^impl Identity {$/;"	c
Identity	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/tls.rs	/^impl fmt::Debug for Identity {$/;"	c
Identity	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/tls.rs	/^pub struct Identity(native_tls::Identity);$/;"	s
Idle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^struct Idle<T> {$/;"	s
Idle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    Idle,$/;"	e	enum:KA
IdleInterval	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T: Poolable + 'static> Future for IdleInterval<T> {$/;"	c
IdleInterval	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^struct IdleInterval<T> {$/;"	s
IdlePopper	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<'a, T: Poolable + 'a> IdlePopper<'a, T> {$/;"	c
IdlePopper	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^struct IdlePopper<'a, T: 'a> {$/;"	s
InProgress	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    InProgress,$/;"	e	enum:Status
Incoming	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    type Incoming;$/;"	t	interface:Http1Transaction
Incoming	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    type Incoming = RequestLine;$/;"	t	implementation:Server
Incoming	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    type Incoming = StatusCode;$/;"	t	implementation:Client
Incomplete	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Incomplete,$/;"	e	enum:Kind
IncompleteBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^impl StdError for IncompleteBody {$/;"	c
IncompleteBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^impl fmt::Display for IncompleteBody {$/;"	c
IncompleteBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^struct IncompleteBody;$/;"	s
Init	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/lazy.rs	/^    Init(F),$/;"	e	enum:Inner
Init	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    Init,$/;"	e	enum:Reading
Init	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    Init,$/;"	e	enum:Writing
InitError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type InitError = R::Error;$/;"	t
InitError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type InitError: Into<Box<StdError + Send + Sync>>;$/;"	t	interface:NewService
Inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl.rs	/^struct Inner<F: ?Sized + Fail> {$/;"	s
Inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^            let inner: &'static mut Inner = mem::transmute(ptr);$/;"	v	method:ErrorImpl::from
Inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^struct Inner {$/;"	s
Inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^unsafe impl Send for Inner { }$/;"	c
Inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^unsafe impl Sync for Inner { }$/;"	c
Inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^            let inner: &'static mut Inner = mem::transmute(ptr);$/;"	v	method:Error::from
Inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^impl Inner {$/;"	c
Inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^struct Inner {$/;"	s
Inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^unsafe impl Send for Inner { }$/;"	c
Inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^unsafe impl Sync for Inner { }$/;"	c
Inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/lazy.rs	/^enum Inner<F, R> {$/;"	g
Inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^enum Inner {$/;"	g
Inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^enum Inner {$/;"	g
Inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^struct Inner {$/;"	s
InnerClientHandle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^impl Drop for InnerClientHandle {$/;"	c
InnerClientHandle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^struct InnerClientHandle {$/;"	s
InnerHeader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^struct InnerHeader {$/;"	s
InnerHeader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^struct InnerHeader {$/;"	s
InnerRaw	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^struct InnerRaw<F> {$/;"	s
InnerRaw	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^struct InnerRaw<F> {$/;"	s
Input	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^pub trait Input {$/;"	i
Input	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^impl<'i> Input<'i> {$/;"	c
Input	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^impl<'i> Iterator for Input<'i> {$/;"	c
Input	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^pub struct Input<'i> {$/;"	s
InputAt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^impl InputAt {$/;"	c
InputAt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^pub struct InputAt {$/;"	s
Insert	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Insert,$/;"	e	enum:Key
Inst	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^    Inst { ip: InstPtr, at: InputAt },$/;"	e	enum:Job
Inst	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^impl Inst {$/;"	c
Inst	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^pub enum Inst {$/;"	g
InstBytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^impl InstBytes {$/;"	c
InstBytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^pub struct InstBytes {$/;"	s
InstChar	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^pub struct InstChar {$/;"	s
InstEmptyLook	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^pub struct InstEmptyLook {$/;"	s
InstHole	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^enum InstHole {$/;"	g
InstHole	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^impl InstHole {$/;"	c
InstPtr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^type InstPtr = u32;$/;"	t
InstPtr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^pub type InstPtr = usize;$/;"	t
InstPtrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^impl <'a>Iterator for InstPtrs<'a> {$/;"	c
InstPtrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^struct InstPtrs<'a> {$/;"	s
InstRanges	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^impl InstRanges {$/;"	c
InstRanges	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^pub struct InstRanges {$/;"	s
InstSave	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^pub struct InstSave {$/;"	s
InstSplit	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^pub struct InstSplit {$/;"	s
Intercept	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^enum Intercept {$/;"	g
InternalBacktrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^impl InternalBacktrace {$/;"	c
InternalBacktrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^impl fmt::Debug for InternalBacktrace {$/;"	c
InternalBacktrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^pub(super) struct InternalBacktrace {$/;"	s
InternalFrom	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^pub(crate) struct InternalFrom<T>(pub T, pub Option<Url>);$/;"	s
IntoIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    type IntoIter = IntoIter;$/;"	t	implementation:Chunk
IntoIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^impl ExactSizeIterator for IntoIter {}$/;"	c
IntoIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^impl Iterator for IntoIter {$/;"	c
IntoIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^pub struct IntoIter {$/;"	s
IntoIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    type IntoIter = slice::Iter<'a, Inst>;$/;"	t	implementation:Program
IntoIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^    type IntoIter = slice::Iter<'a, usize>;$/;"	t	implementation:SparseSet
IntoIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    type IntoIter = <::hyper::Chunk as IntoIterator>::IntoIter;$/;"	t	implementation:Chunk
IntoIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    type IntoIter = Iter<'sel, 'doc>;$/;"	t	implementation:Selection
IntoIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    type IntoIter = IntoIter;$/;"	t	implementation:WalkDir
IntoIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl IntoIter {$/;"	c
IntoIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl Iterator for IntoIter {$/;"	c
IntoIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^pub struct IntoIter {$/;"	s
IntoRawMode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^pub trait IntoRawMode: Write + Sized {$/;"	i
IntoUrl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/into_url.rs	/^pub trait IntoUrl: PolyfillTryInto {}$/;"	i
InvalidUrl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^enum InvalidUrl {$/;"	g
InvalidUrl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^impl StdError for InvalidUrl {$/;"	c
InvalidUrl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^impl fmt::Display for InvalidUrl {$/;"	c
Io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Io,$/;"	e	enum:Kind
Io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^pub(crate) trait Io: AsyncRead + AsyncWrite + 'static {$/;"	i
Io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    Io(io::Error),$/;"	e	enum:Kind
Io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    Io { path: Option<PathBuf>, err: io::Error },$/;"	e	enum:ErrorInner
IpAddrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl IpAddrs {$/;"	c
IpAddrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl Iterator for IpAddrs {$/;"	c
IpAddrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^pub(super) struct IpAddrs {$/;"	s
Ipv4	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    Ipv4(Ipv4Addr),$/;"	e	enum:Host
Ipv4	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    Ipv4(Ipv4Addr),$/;"	e	enum:HostInternal
Ipv6	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    Ipv6(Ipv6Addr),$/;"	e	enum:Host
Ipv6	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    Ipv6(Ipv6Addr),$/;"	e	enum:HostInternal
IsMinusOne	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/mod.rs	/^trait IsMinusOne {$/;"	i
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    type Item = &'f Fail;$/;"	t	implementation:Causes
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    type Item = Chunk;$/;"	t	implementation:Body
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    type Item = u8;$/;"	t	implementation:Chunk
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    type Item = u8;$/;"	t	implementation:IntoIter
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    type Item = ();$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    type Item = (SendRequest<B>, Connection<T, B>);$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    type Item = Response<Body>;$/;"	t	implementation:ResponseFuture
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    type Item = SendRequest<B>;$/;"	t	implementation:WhenReady
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^        type Item = ();$/;"	t	implementation:sealed::GaiTask
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    type Item = GaiAddrs;$/;"	t	implementation:GaiFuture
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    type Item = GaiAddrs;$/;"	t	implementation:TokioThreadpoolGaiFuture
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    type Item = IpAddr;$/;"	t	implementation:GaiAddrs
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    type Item = IpAddrs;$/;"	t	implementation:GaiBlocking
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    type Item = SocketAddr;$/;"	t	implementation:IpAddrs
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^            type Item = u8;$/;"	t	implementation:tests::client_happy_eyeballs::ConnectingTcpFuture
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    type Item = (TcpStream, Connected);$/;"	t	implementation:HttpConnecting
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    type Item = (T, Callback<T, U>);$/;"	t	implementation:Receiver
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    type Item = Response<Body>;$/;"	t	implementation:ResponseFuture
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    type Item = ();$/;"	t	implementation:IdleInterval
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    type Item = Pooled<T>;$/;"	t	implementation:Checkout
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^        type Item = ();$/;"	t	implementation:tests::TestMe
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    type Item = ();$/;"	t	implementation:Draining
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    type Item = F::Item;$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/lazy.rs	/^    type Item = R::Item;$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    type Item = Dispatched;$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/client.rs	/^    type Item = Dispatched;$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^    type Item = ();$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    type Item = ();$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    type Item = Dispatched;$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^        type Item = ();$/;"	t	module:spawn_all
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^        type Item = ();$/;"	t	module:upgrades
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    type Item = ();$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    type Item = Connecting<I::Item, S::Future, E>;$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    type Item = Connection<I, S, E>;$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    type Item = ();$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/shutdown.rs	/^    type Item = ();$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    type Item = AddrStream;$/;"	t	implementation:AddrIncoming
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    type Item = Self;$/;"	t	implementation:ServiceFn
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    type Item = Self;$/;"	t	implementation:ServiceFnOk
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    type Item = Upgraded;$/;"	t	implementation:OnUpgrade
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    type Item = I::Item;$/;"	t	implementation:ProgressBarIter
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    type Item = usize;$/;"	t	implementation:InstPtrs
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    type Item = &'a [u8];$/;"	t	implementation:LiteralIter
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    type Item = &'a Inst;$/;"	t	implementation:Program
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    type Item = &'t [u8];$/;"	t	implementation:Split
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    type Item = &'t [u8];$/;"	t	implementation:SplitN
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    type Item = Captures<'t>;$/;"	t	implementation:CaptureMatches
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    type Item = Match<'t>;$/;"	t	implementation:Matches
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    type Item = Option<&'r str>;$/;"	t	implementation:CaptureNames
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    type Item = Option<Match<'t>>;$/;"	t	implementation:SubCaptureMatches
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    type Item = (usize, usize);$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    type Item = Locations;$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    type Item = Option<(usize, usize)>;$/;"	t	implementation:SubCapturesPosIter
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    type Item = &'t str;$/;"	t	implementation:Split
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    type Item = &'t str;$/;"	t	implementation:SplitN
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    type Item = Captures<'t>;$/;"	t	implementation:CaptureMatches
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    type Item = Match<'t>;$/;"	t	implementation:Matches
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    type Item = Option<&'r str>;$/;"	t	implementation:CaptureNames
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    type Item = Option<Match<'t>>;$/;"	t	implementation:SubCaptureMatches
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^    type Item = &'a usize;$/;"	t	implementation:SparseSet
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    type Item = Chunk;$/;"	t	implementation:Body
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    type Item = u8;$/;"	t	implementation:Chunk
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    type Item = Response;$/;"	t	implementation:Pending
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    type Item = Response;$/;"	t	implementation:PendingRequest
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    type Item = Chunk;$/;"	t	implementation:Decoder
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    type Item = Chunk;$/;"	t	implementation:Gzip
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    type Item = Inner;$/;"	t	implementation:Pending
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    type Item = T;$/;"	t	implementation:Json
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    type Item = T;$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^    type Item = TlsStream<S>;$/;"	t	implementation:ConnectAsync
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^    type Item = TlsStream<S>;$/;"	t	implementation:MidHandshake
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    type Item = <async_impl::Decoder as Stream>::Item;$/;"	t	implementation:WaitBody
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^    type Item = Result<S::Item, Waited<S::Error>>;$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^    type Item = Node<'a>;$/;"	t	implementation:Find
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    type Item = Node<'a>;$/;"	t	implementation:Children
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    type Item = Node<'a>;$/;"	t	implementation:Descendants
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    type Item = Node<'a>;$/;"	t	implementation:Find
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    type Item = Node<'doc>;$/;"	t	implementation:Iter
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    type Item = Node<'doc>;$/;"	t	implementation:Selection
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    type Item = Result<(Event, Vec<u8>), io::Error>;$/;"	t	implementation:EventsAndRaw
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    type Item = Result<Event, io::Error>;$/;"	t	implementation:Events
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    type Item = Result<Key, io::Error>;$/;"	t	implementation:Keys
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    type Item = &'a str;$/;"	t	implementation:ByteSerialize
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    type Item = (Cow<'a, str>, Cow<'a, str>);$/;"	t	implementation:Parse
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    type Item = (String, String);$/;"	t	implementation:ParseIntoOwned
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    type Item = SocketAddr;$/;"	t	implementation:SocketAddrs
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    type Item = char;$/;"	t	implementation:Input
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    type Item = Result<DirEntry>;$/;"	t
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    type Item = Result<DirEntry>;$/;"	t	implementation:DirList
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    type Item = Result<DirEntry>;$/;"	t	implementation:IntoIter
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    type Item = Result<DirEntry>;$/;"	t	implementation:WalkDir
Item	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    type Item = io::Result<WalkEvent>;$/;"	t	implementation:WalkEventIter
Iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^impl<'sel, 'doc> Iterator for Iter<'sel, 'doc> {$/;"	c
Iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^pub struct Iter<'sel, 'doc: 'sel> {$/;"	s
Iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    type Iter = SocketAddrs;$/;"	t	implementation:HostAndPort
Iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    type Iter = SocketAddrs;$/;"	t	implementation:Url
Job	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^enum Job {$/;"	g
Json	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^impl<T: DeserializeOwned> Future for Json<T> {$/;"	c
Json	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^impl<T> fmt::Debug for Json<T> {$/;"	c
Json	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^pub struct Json<T> {$/;"	s
Json	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    Json(::serde_json::Error),$/;"	e	enum:Kind
KA	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^enum KA {$/;"	g
KA	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^impl ::std::ops::BitAndAssign<bool> for KA {$/;"	c
KA	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^impl Default for KA {$/;"	c
KA	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^impl KA {$/;"	c
KeepAlive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    KeepAlive,$/;"	e	enum:Reading
KeepAlive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    KeepAlive,$/;"	e	enum:Writing
KeepCoreThreadAlive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^impl KeepCoreThreadAlive {$/;"	c
KeepCoreThreadAlive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^pub(crate) struct KeepCoreThreadAlive(Option<Arc<InnerClientHandle>>);$/;"	s
Key	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^pub(super) type Key = Arc<String>;$/;"	t
Key	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Key(Key),$/;"	e	enum:Event
Key	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^pub enum Key {$/;"	g
Keys	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^impl<R: Read> Iterator for Keys<R> {$/;"	c
Keys	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^pub struct Keys<R> {$/;"	s
Kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^enum Kind {$/;"	g
Kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^pub(crate) enum Kind {$/;"	g
Kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^enum Kind {$/;"	g
Kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^enum Kind {$/;"	g
Kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^enum Kind {$/;"	g
Kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^impl fmt::Debug for Kind {$/;"	c
Kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^impl From<::http::Error> for Kind {$/;"	c
Kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^impl From<::hyper::Error> for Kind {$/;"	c
Kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^impl From<::mime::FromStrError> for Kind {$/;"	c
Kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^impl From<::native_tls::Error> for Kind {$/;"	c
Kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^impl From<::serde_json::Error> for Kind {$/;"	c
Kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^impl From<::serde_urlencoded::ser::Error> for Kind {$/;"	c
Kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^impl From<::url::ParseError> for Kind {$/;"	c
Kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^impl From<io::Error> for Kind {$/;"	c
Kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^impl<T> From<::wait::Waited<T>> for Kind$/;"	c
Kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^pub(crate) enum Kind {$/;"	g
Known	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^    Known(u64),$/;"	e	enum:BodyLength
Lazy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    Lazy(R, String, Option<IpAddr>),$/;"	e	enum:State
Lazy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/lazy.rs	/^impl<F, R> Future for Lazy<F, R>$/;"	c
Lazy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/lazy.rs	/^impl<F, R> Started for Lazy<F, R>$/;"	c
Lazy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/lazy.rs	/^pub(crate) struct Lazy<F, R: IntoFuture> {$/;"	s
Left	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    Left,$/;"	e	enum:Alignment
Left	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^impl fmt::Display for Left {$/;"	c
Left	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^pub struct Left(pub u16);$/;"	s
Left	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Left,$/;"	e	enum:Key
Left	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Left,$/;"	e	enum:MouseButton
Length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    Length(u64),$/;"	e	enum:Kind
Length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    Length(u64),$/;"	e	enum:Kind
Limit	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    Limit(usize),$/;"	e	enum:Policy
Limited	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    Limited(Take<B>),$/;"	e	enum:BufKind
Listen	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Listen,$/;"	e	enum:Kind
Literal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    Literal(MatchLiteralType),$/;"	e	enum:MatchType
LiteralIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^impl<'a> Iterator for LiteralIter<'a> {$/;"	c
LiteralIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^pub enum LiteralIter<'a> {$/;"	g
LiteralSearcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^impl LiteralSearcher {$/;"	c
LiteralSearcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^pub struct LiteralSearcher {$/;"	s
Locations	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^pub type Locations = CaptureLocations;$/;"	t
Locations	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^impl Locations {$/;"	c
Locations	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^pub struct Locations(Vec<Slot>);$/;"	s
Locations	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^pub type Locations = CaptureLocations;$/;"	t
Loop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    Loop { ancestor: PathBuf, child: PathBuf },$/;"	e	enum:ErrorInner
LoopDetected	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    LoopDetected,$/;"	e	enum:Action
MakeError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type MakeError = Ret::Error;$/;"	t
MakeError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type MakeError: Into<Box<StdError + Send + Sync>>;$/;"	t	interface:MakeService
MakeError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type MakeError = N::InitError;$/;"	t
MakeService	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^pub trait MakeService<Ctx> {$/;"	i
MakeServiceFn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^impl<'c, F, Ctx, Ret, ReqBody, ResBody> MakeService<&'c Ctx> for MakeServiceFn<F>$/;"	c
MakeServiceFn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^impl<F> fmt::Debug for MakeServiceFn<F> {$/;"	c
MakeServiceFn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^pub struct MakeServiceFn<F> {$/;"	s
MakeServiceRef	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^pub trait MakeServiceRef<Ctx>: self::sealed::Sealed<Ctx> {$/;"	i
ManualUpgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    ManualUpgrade,$/;"	e	enum:Kind
Many	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    Many(Vec<Hole>),$/;"	e	enum:Hole
Mask	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^impl Mask {$/;"	c
Mask	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^struct Mask {$/;"	s
Mask	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^impl Mask {$/;"	c
Mask	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^struct Mask {$/;"	s
Masks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^impl Masks {$/;"	c
Masks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^struct Masks {$/;"	s
Masks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^impl Masks {$/;"	c
Masks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^struct Masks {$/;"	s
Match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    Match(T),$/;"	e	enum:Result
Match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/fallback.rs	/^pub struct Match {$/;"	s
Match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^pub struct Match {$/;"	s
Match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/fallback.rs	/^pub struct Match {$/;"	s
Match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^pub struct Match {$/;"	s
Match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    Match(usize),$/;"	e	enum:Inst
Match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl<'t> Match<'t> {$/;"	c
Match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^pub struct Match<'t> {$/;"	s
Match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<'t> Match<'t> {$/;"	c
Match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^pub struct Match<'t> {$/;"	s
MatchLiteralType	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^enum MatchLiteralType {$/;"	g
MatchNfaType	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^enum MatchNfaType {$/;"	g
MatchType	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^enum MatchType {$/;"	g
Matcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^enum Matcher {$/;"	g
Matcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^impl Matcher {$/;"	c
Matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl<'r, 't> Iterator for Matches<'r, 't> {$/;"	c
Matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^pub struct Matches<'r, 't>(re_trait::Matches<'t, ExecNoSync<'r>>);$/;"	s
Matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^impl<'t, R> Iterator for Matches<'t, R>$/;"	c
Matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^impl<'t, R> Matches<'t, R> where R: RegularExpression, R::Text: 't {$/;"	c
Matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^pub struct Matches<'t, R> where R: RegularExpression, R::Text: 't {$/;"	s
Matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<'r, 't> Iterator for Matches<'r, 't> {$/;"	c
Matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^pub struct Matches<'r, 't>(re_trait::Matches<'t, ExecNoSyncStr<'r>>);$/;"	s
MaybeInst	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^enum MaybeInst {$/;"	g
MaybeInst	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^impl MaybeInst {$/;"	c
MaybeResolved	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^struct MaybeResolved {$/;"	s
MaybeResolved	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^unsafe impl Send for MaybeResolved {}$/;"	c
MaybeResolved	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^unsafe impl Sync for MaybeResolved {}$/;"	c
MemRead	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^pub trait MemRead {$/;"	i
MessageHead	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^pub struct MessageHead<S> {$/;"	s
Method	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Method,$/;"	e	enum:Parse
MidHandshake	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^impl<S: Read + Write> Future for MidHandshake<S> {$/;"	c
MidHandshake	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^struct MidHandshake<S> {$/;"	s
Middle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Middle,$/;"	e	enum:MouseButton
Mime	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    Mime(::mime::FromStrError),$/;"	e	enum:Kind
MismatchedResponse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    MismatchedResponse,$/;"	e	enum:Kind
MissingAuthority	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    MissingAuthority,$/;"	e	enum:InvalidUrl
MissingScheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    MissingScheme,$/;"	e	enum:InvalidUrl
MockConnector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl Connect for MockConnector {$/;"	c
MockConnector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl Drop for MockConnector {$/;"	c
MockConnector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl MockConnector {$/;"	c
MockConnector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^pub struct MockConnector {$/;"	s
MockCursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl ::std::ops::Deref for MockCursor {$/;"	c
MockCursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl AsRef<[u8]> for MockCursor {$/;"	c
MockCursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl MockCursor {$/;"	c
MockCursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl Read for MockCursor {$/;"	c
MockCursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl Write for MockCursor {$/;"	c
MockCursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^impl<S: AsRef<[u8]>> PartialEq<S> for MockCursor {$/;"	c
MockCursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^pub struct MockCursor {$/;"	s
Mouse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Mouse(MouseEvent),$/;"	e	enum:Event
MouseButton	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^pub enum MouseButton {$/;"	g
MouseEvent	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^pub enum MouseEvent {$/;"	g
MouseTerminal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^impl<W: Write> Drop for MouseTerminal<W> {$/;"	c
MouseTerminal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^impl<W: Write> From<W> for MouseTerminal<W> {$/;"	c
MouseTerminal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^impl<W: Write> Write for MouseTerminal<W> {$/;"	c
MouseTerminal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^impl<W: Write> ops::Deref for MouseTerminal<W> {$/;"	c
MouseTerminal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^impl<W: Write> ops::DerefMut for MouseTerminal<W> {$/;"	c
MouseTerminal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^pub struct MouseTerminal<W: Write> {$/;"	s
MultiObject	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^struct MultiObject {$/;"	s
MultiProgress	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^impl MultiProgress {$/;"	c
MultiProgress	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^impl fmt::Debug for MultiProgress {$/;"	c
MultiProgress	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^pub struct MultiProgress {$/;"	s
MultiProgress	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^unsafe impl Sync for MultiProgress {}$/;"	c
MultiProgressState	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^struct MultiProgressState {$/;"	s
MyStruct	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^        impl Serialize for MyStruct {$/;"	c	function:tests::add_json_fail
MyStruct	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^        struct MyStruct;$/;"	s	function:tests::add_json_fail
N	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^impl<N, Ctx> MakeService<Ctx> for N$/;"	c
Name	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl Name {$/;"	c
Name	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl fmt::Debug for Name {$/;"	c
Name	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^pub struct Name {$/;"	s
Name	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^impl<'a> Predicate for Name<&'a str> {$/;"	c
Name	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^pub struct Name<T>(pub T);$/;"	s
Named	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^    Named(&'a str),$/;"	e	enum:Ref
Never	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/never.rs	/^impl Error for Never {$/;"	c
Never	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/never.rs	/^impl fmt::Display for Never {$/;"	c
Never	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/never.rs	/^pub enum Never {}$/;"	g
NewFn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    NewFn(&'a (Fn(SyntaxViolation) + 'a)),$/;"	e	enum:ViolationFn
NewService	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    NewService,$/;"	e	enum:Kind
NewService	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^pub trait NewService {$/;"	i
NewSvcExec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^pub trait NewSvcExec<I, N, S: Service, E, W: Watcher<I, S, E>>: Clone {$/;"	i
NewSvcTask	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    impl<I, N, S, B, E, W> Future for NewSvcTask<I, N, S, E, W>$/;"	c	module:spawn_all
NewSvcTask	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    impl<I, N, S: Service, E, W: Watcher<I, S, E>> NewSvcTask<I, N, S, E, W> {$/;"	c	module:spawn_all
NewSvcTask	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub struct NewSvcTask<I, N, S: Service, E, W: Watcher<I, S, E>> {$/;"	s	module:spawn_all
Nfa	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    Nfa(MatchNfaType),$/;"	e	enum:MatchType
NoExpand	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl<'t> Replacer for NoExpand<'t> {$/;"	c
NoExpand	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^pub struct NoExpand<'t>(pub &'t [u8]);$/;"	s
NoExpand	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<'t> Replacer for NoExpand<'t> {$/;"	c
NoExpand	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^pub struct NoExpand<'t>(pub &'t str);$/;"	s
NoMatch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    NoMatch(usize),$/;"	e	enum:Result
NoOp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    NoOp$/;"	e	enum:ViolationFn
NoRetry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    NoRetry(oneshot::Sender<Result<U, ::Error>>),$/;"	e	enum:Callback
NoUpgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    NoUpgrade,$/;"	e	enum:Kind
Node	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^impl<'a> Node<'a> {$/;"	c
Node	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^impl<'a> fmt::Debug for Node<'a> {$/;"	c
Node	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^impl<'a> serialize::Serialize for Node<'a> {$/;"	c
Node	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^pub struct Node<'a> {$/;"	s
NonEmptyAscii	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^        impl Arbitrary for NonEmptyAscii {$/;"	c	method:Tree::gen
NonEmptyAscii	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^        struct NonEmptyAscii(String);$/;"	s	method:Tree::gen
None	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    None,$/;"	e	enum:Alpn
None	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    None,$/;"	e	enum:Hole
None	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    None,$/;"	e	enum:Policy
None	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    None,$/;"	e	enum:HostInternal
NoopWatcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    impl<I, S, E> Watcher<I, S, E> for NoopWatcher$/;"	c	module:spawn_all
NoopWatcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub struct NoopWatcher;$/;"	s	module:spawn_all
Normal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    Normal(::Error),$/;"	e	enum:ClientError
Normal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    Normal(HttpStream),$/;"	e	enum:Conn
Normal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    Normal(HttpsStream),$/;"	e	enum:Conn
Not	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^impl<T: Predicate> Predicate for Not<T> {$/;"	c
Not	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^pub struct Not<T>(pub T);$/;"	s
NotEof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    NotEof(DelayEofUntil),$/;"	e	enum:DelayEof
NotEof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^pub struct NotEof;$/;"	s
NotHttp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    NotHttp,$/;"	e	enum:InvalidUrl
NotReady	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    NotReady,$/;"	e	enum:PeekedState
NotReady	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    NotReady,$/;"	e	enum:ReadState
NotSpecial	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    NotSpecial,$/;"	e	enum:SchemeType
NotWordBoundary	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    NotWordBoundary,$/;"	e	enum:EmptyLook
NotWordBoundaryAscii	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    NotWordBoundaryAscii,$/;"	e	enum:EmptyLook
Nothing	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    Nothing,$/;"	e	enum:MatchType
Null	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Null,$/;"	e	enum:Key
Number	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^    Number(usize),$/;"	e	enum:Ref
OldFn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    OldFn(&'a (Fn(&'static str) + 'a)),$/;"	e	enum:ViolationFn
OnUpgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^impl Future for OnUpgrade {$/;"	c
OnUpgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^impl OnUpgrade {$/;"	c
OnUpgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^impl fmt::Debug for OnUpgrade {$/;"	c
OnUpgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^pub struct OnUpgrade {$/;"	s
Once	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    Once(Option<Chunk>),$/;"	e	enum:Kind
One	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    One(InstPtr),$/;"	e	enum:Hole
One	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    One(SocketAddr),$/;"	e	enum:SocketAddrsState
Opaque	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/origin.rs	/^    Opaque(OpaqueOrigin),$/;"	e	enum:Origin
OpaqueOrigin	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/origin.rs	/^pub struct OpaqueOrigin(usize);$/;"	s
Opened	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    Opened { depth: usize, it: result::Result<ReadDir, Option<Error>> },$/;"	e	enum:DirList
Or	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^impl<A: Predicate, B: Predicate> Predicate for Or<A, B> {$/;"	c
Or	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^pub struct Or<A, B>(pub A, pub B);$/;"	s
Origin	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/origin.rs	/^impl HeapSizeOf for Origin {$/;"	c
Origin	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/origin.rs	/^impl Origin {$/;"	c
Origin	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/origin.rs	/^pub enum Origin {$/;"	g
Os	/home/doc/Code/Git/oracle/src/os.rs	/^impl Os {$/;"	c
Os	/home/doc/Code/Git/oracle/src/os.rs	/^pub struct Os {$/;"	s
Outgoing	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    type Outgoing: Default;$/;"	t	interface:Http1Transaction
Outgoing	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    type Outgoing = RequestLine;$/;"	t	implementation:Client
Outgoing	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    type Outgoing = StatusCode;$/;"	t	implementation:Server
Output	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    type Output = [u8];$/;"	t	implementation:Captures
Output	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    type Output = str;$/;"	t	implementation:Captures
Output	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    type Output = str;$/;"	t	implementation:Url
PageDown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    PageDown,$/;"	e	enum:Key
PageUp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    PageUp,$/;"	e	enum:Key
Params	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^        struct Params {$/;"	s	function:tests::add_query_struct
Params	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^        struct Params {$/;"	s	function:tests::add_query_struct
Parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Parse(Parse),$/;"	e	enum:Kind
Parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^impl From<http::method::InvalidMethod> for Parse {$/;"	c
Parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^impl From<http::status::InvalidStatusCode> for Parse {$/;"	c
Parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^impl From<http::uri::InvalidUri> for Parse {$/;"	c
Parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^impl From<http::uri::InvalidUriBytes> for Parse {$/;"	c
Parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^impl From<http::uri::InvalidUriParts> for Parse {$/;"	c
Parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^impl From<httparse::Error> for Parse {$/;"	c
Parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^pub(crate) enum Parse {$/;"	g
Parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^impl<'a> Iterator for Parse<'a> {$/;"	c
Parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^impl<'a> Parse<'a> {$/;"	c
Parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^pub struct Parse<'a> {$/;"	s
ParseContext	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^pub(crate) struct ParseContext<'a> {$/;"	s
ParseError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^impl From<::idna::uts46::Errors> for ParseError {$/;"	c
ParseError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^impl fmt::Display for ParseError {$/;"	c
ParseIntoOwned	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^impl<'a> Iterator for ParseIntoOwned<'a> {$/;"	c
ParseIntoOwned	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^pub struct ParseIntoOwned<'a> {$/;"	s
ParseOptions	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl<'a> Debug for ParseOptions<'a> {$/;"	c
ParseOptions	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl<'a> ParseOptions<'a> {$/;"	c
ParseOptions	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^pub struct ParseOptions<'a> {$/;"	s
ParseResult	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^pub(crate) type ParseResult<T> = Result<Option<ParsedMessage<T>>, ::error::Parse>;$/;"	t
ParseResult	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^pub type ParseResult<T> = Result<T, ParseError>;$/;"	t
Parsed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^struct Parsed {$/;"	s
ParsedMessage	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^pub(crate) struct ParsedMessage<T> {$/;"	s
Parser	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^impl<'a> Parser<'a> {$/;"	c
Parser	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^pub struct Parser<'a> {$/;"	s
Part	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^impl Part {$/;"	c
Part	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^impl fmt::Debug for Part {$/;"	c
Part	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^pub struct Part {$/;"	s
Parts	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^pub struct Parts<T> {$/;"	s
Parts	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^pub struct Parts<T, S>  {$/;"	s
Parts	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^pub struct Parts<T> {$/;"	s
Patch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^struct Patch {$/;"	s
PathSegment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    PathSegment,$/;"	e	enum:PercentEncoding
PathSegmentSetter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    PathSegmentSetter,$/;"	e	enum:Context
PathSegmentsMut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/path_segments.rs	/^impl<'a> Drop for PathSegmentsMut<'a> {$/;"	c
PathSegmentsMut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/path_segments.rs	/^impl<'a> PathSegmentsMut<'a> {$/;"	c
PathSegmentsMut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/path_segments.rs	/^pub struct PathSegmentsMut<'a> {$/;"	s
Pattern	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^pub trait Pattern {$/;"	i
Payload	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/payload.rs	/^pub trait Payload: Send + 'static {$/;"	i
Peeked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^impl<R: Read> Read for Peeked<R> {$/;"	c
Peeked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^impl<R> Peeked<R> {$/;"	c
Peeked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^struct Peeked<R> {$/;"	s
PeekedState	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^enum PeekedState {$/;"	g
Pending	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^impl Pending {$/;"	c
Pending	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^pub(crate) struct Pending {$/;"	s
Pending	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^impl Future for Pending {$/;"	c
Pending	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^impl Pending {$/;"	c
Pending	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^impl fmt::Debug for Pending {$/;"	c
Pending	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^pub struct Pending {$/;"	s
Pending	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    Pending(Pending)$/;"	e	enum:Inner
Pending	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^impl Future for Pending {$/;"	c
Pending	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^struct Pending {$/;"	s
PendingInner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^enum PendingInner {$/;"	g
PendingRequest	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^impl Future for PendingRequest {$/;"	c
PendingRequest	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^struct PendingRequest {$/;"	s
PercentEncoding	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^enum PercentEncoding {$/;"	g
PercentEncoding	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^impl PercentEncoding {$/;"	c
PikeVM	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    PikeVM,$/;"	e	enum:MatchNfaType
PipeToSendStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^impl<S> Future for PipeToSendStream<S>$/;"	c
PipeToSendStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^impl<S> PipeToSendStream<S>$/;"	c
PipeToSendStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^struct PipeToSendStream<S>$/;"	s
PlainText	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    PlainText(Body),$/;"	e	enum:Inner
Policy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^enum Policy {$/;"	g
Policy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^impl fmt::Debug for Policy {$/;"	c
PollBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    type PollBody = B;$/;"	t
PollBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    type PollBody = Bs;$/;"	t
PollBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    type PollBody;$/;"	t	interface:Dispatch
PollError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    type PollError = Never;$/;"	t
PollError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    type PollError = S::Error;$/;"	t
PollError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    type PollError;$/;"	t	interface:Dispatch
PollItem	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    type PollItem = MessageHead<StatusCode>;$/;"	t
PollItem	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    type PollItem = RequestHead;$/;"	t
PollItem	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    type PollItem;$/;"	t	interface:Dispatch
PolyfillTryInto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/into_url.rs	/^pub trait PolyfillTryInto {$/;"	i
Pool	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T: Poolable> Pool<T> {$/;"	c
Pool	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T> Clone for Pool<T> {$/;"	c
Pool	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T> Pool<T> {$/;"	c
Pool	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^pub(super) struct Pool<T> {$/;"	s
PoolClient	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^impl<B: Payload + 'static> PoolClient<B> {$/;"	c
PoolClient	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^impl<B> PoolClient<B> {$/;"	c
PoolClient	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^impl<B> Poolable for PoolClient<B>$/;"	c
PoolClient	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^struct PoolClient<B> {$/;"	s
PoolInner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T: Poolable> PoolInner<T> {$/;"	c
PoolInner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T> PoolInner<T> {$/;"	c
PoolInner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^struct PoolInner<T> {$/;"	s
PoolTx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^enum PoolTx<B> {$/;"	g
Poolable	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^pub(super) trait Poolable: Send + Sized + 'static {$/;"	i
Pooled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T: Poolable> Deref for Pooled<T> {$/;"	c
Pooled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T: Poolable> DerefMut for Pooled<T> {$/;"	c
Pooled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T: Poolable> Drop for Pooled<T> {$/;"	c
Pooled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T: Poolable> Pooled<T> {$/;"	c
Pooled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T: Poolable> fmt::Debug for Pooled<T> {$/;"	c
Pooled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^pub(super) struct Pooled<T: Poolable> {$/;"	s
Position	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^pub enum Position {$/;"	g
Predicate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^pub trait Predicate {$/;"	i
Press	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Press(MouseButton, u16, u16),$/;"	e	enum:MouseEvent
Program	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^impl Deref for Program {$/;"	c
Program	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^impl Program {$/;"	c
Program	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^impl fmt::Debug for Program {$/;"	c
Program	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^impl<'a> IntoIterator for &'a Program {$/;"	c
Program	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^pub struct Program {$/;"	s
ProgramCache	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^pub type ProgramCache = RefCell<ProgramCacheInner>;$/;"	t
ProgramCacheInner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^impl ProgramCacheInner {$/;"	c
ProgramCacheInner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^pub struct ProgramCacheInner {$/;"	s
ProgressBar	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^impl Drop for ProgressBar {$/;"	c
ProgressBar	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^impl ProgressBar {$/;"	c
ProgressBar	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^impl fmt::Debug for ProgressBar {$/;"	c
ProgressBar	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^pub struct ProgressBar {$/;"	s
ProgressBarIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^impl<'a, I: Iterator> Iterator for ProgressBarIter<'a, I> {$/;"	c
ProgressBarIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^pub struct ProgressBarIter<'a, I> {$/;"	s
ProgressBarRead	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^impl<'a, R: io::Read> io::Read for ProgressBarRead<'a, R> {$/;"	c
ProgressBarRead	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^pub struct ProgressBarRead<'a, R> {$/;"	s
ProgressDrawState	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^impl ProgressDrawState {$/;"	c
ProgressDrawState	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^struct ProgressDrawState {$/;"	s
ProgressDrawTarget	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^impl ProgressDrawTarget {$/;"	c
ProgressDrawTarget	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^pub struct ProgressDrawTarget {$/;"	s
ProgressDrawTargetKind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^enum ProgressDrawTargetKind {$/;"	g
ProgressState	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^impl ProgressState {$/;"	c
ProgressState	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^struct ProgressState {$/;"	s
ProgressStyle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^impl ProgressStyle {$/;"	c
ProgressStyle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^pub struct ProgressStyle {$/;"	s
Promise	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^pub type Promise<T> = oneshot::Receiver<Result<T, ::Error>>;$/;"	t
Proxied	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    Proxied(TlsStream<MaybeHttpsStream<HttpStream>>),$/;"	e	enum:Conn
Proxy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^impl Proxy {$/;"	c
Proxy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^pub struct Proxy {$/;"	s
Queue	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    Queue,$/;"	e	enum:WriteStrategy
Quit	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    Quit,$/;"	e	enum:Result
R	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^impl<R: Read + TermReadEventsAndRaw> TermRead for R {$/;"	c
R	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^impl<R: Read> TermReadEventsAndRaw for R {$/;"	c
Range	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl RangeArg for Range<u32> {$/;"	c
RangeArg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^trait RangeArg {$/;"	i
RangeFrom	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl RangeArg for RangeFrom<u32> {$/;"	c
RangeTo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl RangeArg for RangeTo<u32> {$/;"	c
Ranges	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    Ranges { ranges: Vec<(char, char)> },$/;"	e	enum:InstHole
Ranges	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    Ranges(InstRanges),$/;"	e	enum:Inst
Raw	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^pub struct Raw {$/;"	s
RawTerminal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^impl<W: Write> Drop for RawTerminal<W> {$/;"	c
RawTerminal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^impl<W: Write> Write for RawTerminal<W> {$/;"	c
RawTerminal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^impl<W: Write> ops::Deref for RawTerminal<W> {$/;"	c
RawTerminal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^impl<W: Write> ops::DerefMut for RawTerminal<W> {$/;"	c
RawTerminal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^pub struct RawTerminal<W: Write> {$/;"	s
ReadState	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^enum ReadState {$/;"	g
ReadStrategy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^enum ReadStrategy {$/;"	g
ReadStrategy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl Default for ReadStrategy {$/;"	c
ReadStrategy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl ReadStrategy {$/;"	c
ReadableChunks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^impl<S> Read for ReadableChunks<S>$/;"	c
ReadableChunks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^impl<S> ReadableChunks<S> $/;"	c
ReadableChunks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^impl<S> ReadableChunks<S> {$/;"	c
ReadableChunks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^impl<S> fmt::Debug for ReadableChunks<S> {$/;"	c
ReadableChunks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^pub struct ReadableChunks<S> {$/;"	s
Reader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    Reader(Box<Read + Send>),$/;"	e	enum:Reader
Reader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    Reader(Box<Read + Send>, Option<u64>),$/;"	e	enum:Kind
Reader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^impl Read for Reader {$/;"	c
Reader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^pub(crate) enum Reader {$/;"	g
Reader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^impl Read for Reader {$/;"	c
Reader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^impl Reader {$/;"	c
Reader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^impl fmt::Debug for Reader {$/;"	c
Reader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^pub(crate) struct Reader {$/;"	s
Reading	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^enum Reading {$/;"	g
Reading	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    Reading$/;"	e	enum:TunnelState
Ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/client.rs	/^    Ready(SendRequest<B>, ConnDropRef),$/;"	e	enum:State
Ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    Ready(Chunk),$/;"	e	enum:ReadState
Ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    Ready(usize)$/;"	e	enum:PeekedState
Receiver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^impl<T, U> Drop for Receiver<T, U> {$/;"	c
Receiver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^impl<T, U> Stream for Receiver<T, U> {$/;"	c
Receiver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^pub struct Receiver<T, U> {$/;"	s
RecvItem	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    type RecvItem = RequestHead;$/;"	t
RecvItem	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    type RecvItem = ResponseHead;$/;"	t
RecvItem	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    type RecvItem;$/;"	t	interface:Dispatch
RedirectAction	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^pub struct RedirectAction {$/;"	s
RedirectAttempt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^impl<'a> RedirectAttempt<'a> {$/;"	c
RedirectAttempt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^pub struct RedirectAttempt<'a> {$/;"	s
RedirectLoop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    RedirectLoop,$/;"	e	enum:Kind
RedirectPolicy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^impl Default for RedirectPolicy {$/;"	c
RedirectPolicy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^impl RedirectPolicy {$/;"	c
RedirectPolicy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^pub struct RedirectPolicy {$/;"	s
Ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^enum Ref<'a> {$/;"	g
Ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^impl From<usize> for Ref<'static> {$/;"	c
Ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^impl<'a> From<&'a str> for Ref<'a> {$/;"	c
Regex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pattern.rs	/^impl<'r, 't> Pattern<'t> for &'r Regex {$/;"	c
Regex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl From<Exec> for Regex {$/;"	c
Regex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl FromStr for Regex {$/;"	c
Regex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl Regex {$/;"	c
Regex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl fmt::Debug for Regex {$/;"	c
Regex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl fmt::Display for Regex {$/;"	c
Regex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^pub struct Regex(Exec);$/;"	s
Regex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl From<Exec> for Regex {$/;"	c
Regex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl FromStr for Regex {$/;"	c
Regex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl Regex {$/;"	c
Regex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl fmt::Debug for Regex {$/;"	c
Regex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl fmt::Display for Regex {$/;"	c
Regex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^pub struct Regex(Exec);$/;"	s
RegexOptions	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_builder.rs	/^impl Default for RegexOptions {$/;"	c
RegexOptions	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_builder.rs	/^pub struct RegexOptions {$/;"	s
RegexSearcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pattern.rs	/^pub struct RegexSearcher<'r, 't> {$/;"	s
RegexSearcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pattern.rs	/^unsafe impl<'r, 't> Searcher<'t> for RegexSearcher<'r, 't> {$/;"	c
RegularExpression	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^pub trait RegularExpression: Sized {$/;"	i
Release	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Release(u16, u16),$/;"	e	enum:MouseEvent
Remote	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    Remote(usize, Mutex<Sender<(usize, ProgressDrawState)>>),$/;"	e	enum:ProgressDrawTargetKind
Replacer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^pub trait Replacer {$/;"	i
Replacer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^pub trait Replacer {$/;"	i
ReplacerRef	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl<'a, R: Replacer + ?Sized + 'a> Replacer for ReplacerRef<'a, R> {$/;"	c
ReplacerRef	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^pub struct ReplacerRef<'a, R: ?Sized + 'a>(&'a mut R);$/;"	s
ReplacerRef	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<'a, R: Replacer + ?Sized + 'a> Replacer for ReplacerRef<'a, R> {$/;"	c
ReplacerRef	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^pub struct ReplacerRef<'a, R: ?Sized + 'a>(&'a mut R);$/;"	s
ReqBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type ReqBody = IB;$/;"	t
ReqBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type ReqBody = ReqBody;$/;"	t
ReqBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type ReqBody: Payload;$/;"	t	interface:MakeService
ReqBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type ReqBody: Payload;$/;"	t	interface:MakeServiceRef
ReqBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type ReqBody = N::ReqBody;$/;"	t
ReqBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type ReqBody = S::ReqBody;$/;"	t
ReqBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type ReqBody: Payload;$/;"	t	interface:NewService
ReqBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    type ReqBody = ReqBody;$/;"	t
ReqBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    type ReqBody: Payload;$/;"	t	interface:Service
Request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    Request(PendingRequest),$/;"	e	enum:PendingInner
Request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^impl Request {$/;"	c
Request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^impl fmt::Debug for Request {$/;"	c
Request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^pub struct Request {$/;"	s
Request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^impl Request {$/;"	c
Request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^impl fmt::Debug for Request {$/;"	c
Request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^pub struct Request {$/;"	s
RequestBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^impl RequestBuilder {$/;"	c
RequestBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^impl fmt::Debug for RequestBuilder {$/;"	c
RequestBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^pub struct RequestBuilder {$/;"	s
RequestBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^impl RequestBuilder {$/;"	c
RequestBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^pub struct RequestBuilder {$/;"	s
RequestHead	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^pub type RequestHead = MessageHead<RequestLine>;$/;"	t
RequestLine	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^pub struct RequestLine(pub Method, pub Uri);$/;"	s
ResBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type ResBody = OB;$/;"	t
ResBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type ResBody = ResBody;$/;"	t
ResBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type ResBody: Payload;$/;"	t	interface:MakeService
ResBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type ResBody: Payload;$/;"	t	interface:MakeServiceRef
ResBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type ResBody = N::ResBody;$/;"	t
ResBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type ResBody = S::ResBody;$/;"	t
ResBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type ResBody: Payload;$/;"	t	interface:NewService
ResBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    type ResBody = ResBody;$/;"	t
ResBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    type ResBody: Payload;$/;"	t	interface:Service
Reservation	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^pub(super) enum Reservation<T> {$/;"	g
Reset	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^impl Color for Reset {$/;"	c
Reset	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^pub struct Reset;$/;"	s
Resolve	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^pub trait Resolve {$/;"	i
Resolving	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    Resolving(R::Future, Option<IpAddr>),$/;"	e	enum:State
Response	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^impl Response {$/;"	c
Response	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^impl fmt::Debug for Response {$/;"	c
Response	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^impl<T: Into<Body>> From<http::Response<T>> for Response {$/;"	c
Response	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^pub struct Response {$/;"	s
Response	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^impl Read for Response {$/;"	c
Response	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^impl Response {$/;"	c
Response	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^impl fmt::Debug for Response {$/;"	c
Response	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^impl<T: Into<async_impl::body::Body>> From<http::Response<T>> for Response {$/;"	c
Response	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^pub struct Response {$/;"	s
ResponseBuilderExt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^pub trait ResponseBuilderExt {$/;"	i
ResponseFuture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl AssertSend for ResponseFuture {}$/;"	c
ResponseFuture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl Future for ResponseFuture {$/;"	c
ResponseFuture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl fmt::Debug for ResponseFuture {$/;"	c
ResponseFuture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^pub struct ResponseFuture {$/;"	s
ResponseFuture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^impl Future for ResponseFuture {$/;"	c
ResponseFuture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^impl ResponseFuture {$/;"	c
ResponseFuture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^impl fmt::Debug for ResponseFuture {$/;"	c
ResponseFuture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^pub struct ResponseFuture {$/;"	s
ResponseHead	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^pub type ResponseHead = MessageHead<StatusCode>;$/;"	t
ResponseUrl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^struct ResponseUrl(Url);$/;"	s
Result	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/result_ext.rs	/^impl<T, E> ResultExt<T, E> for Result<T, E>$/;"	c
Result	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^pub type Result<T> = ::std::result::Result<T, Error>;$/;"	t
Result	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^type Result = result::Result<Patch, Error>;$/;"	t
Result	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^impl<T> Result<T> {$/;"	c
Result	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^pub enum Result<T> {$/;"	g
Result	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^pub type Result<T> = ::std::result::Result<T, Error>;$/;"	t
Result	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^pub type Result<T> = ::std::result::Result<T, Error>;$/;"	t
ResultExt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/result_ext.rs	/^pub trait ResultExt<T, E> {$/;"	i
Retry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    Retry(oneshot::Sender<Result<U, (::Error, Option<T>)>>),$/;"	e	enum:Callback
RetryPromise	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^pub type RetryPromise<T, U> = oneshot::Receiver<Result<U, (::Error, Option<T>)>>;$/;"	t
Reusable	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    Reusable(Bytes),$/;"	e	enum:Inner
Rewind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^impl<T> AsyncRead for Rewind<T>$/;"	c
Rewind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^impl<T> AsyncWrite for Rewind<T>$/;"	c
Rewind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^impl<T> Read for Rewind<T>$/;"	c
Rewind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^impl<T> Rewind<T> {$/;"	c
Rewind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^impl<T> Write for Rewind<T>$/;"	c
Rewind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^pub(crate) struct Rewind<T> {$/;"	s
Rgb	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^impl Color for Rgb {$/;"	c
Rgb	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^pub struct Rgb(pub u8, pub u8, pub u8);$/;"	s
Right	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    Right,$/;"	e	enum:Alignment
Right	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^impl fmt::Display for Right {$/;"	c
Right	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^pub struct Right(pub u16);$/;"	s
Right	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Right,$/;"	e	enum:Key
Right	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Right,$/;"	e	enum:MouseButton
Running	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/shutdown.rs	/^    Running {$/;"	e	enum:State
SSSE3VectorBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^impl SSSE3VectorBuilder {$/;"	c
SSSE3VectorBuilder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^pub struct SSSE3VectorBuilder(());$/;"	s
Save	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    Save { slot: usize },$/;"	e	enum:InstHole
Save	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    Save(InstSave),$/;"	e	enum:Inst
SaveRestore	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^    SaveRestore { slot: usize, old_pos: Option<usize> },$/;"	e	enum:Job
SchemeType	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^impl SchemeType {$/;"	c
SchemeType	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^pub enum SchemeType {$/;"	g
Sealed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    pub trait Sealed<T> {}$/;"	i	module:sealed
Sealed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^    pub trait Sealed {}$/;"	i	module:sealed
Searcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pattern.rs	/^    type Searcher = RegexSearcher<'r, 't>;$/;"	t	implementation:Regex
Selection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^impl<'a> Selection<'a> {$/;"	c
Selection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^impl<'sel, 'doc> IntoIterator for &'sel Selection<'doc> {$/;"	c
Selection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^pub struct Selection<'a> {$/;"	s
Send	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^impl Io + Send {$/;"	c
SendBuf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^impl<B: Buf> Buf for SendBuf<B> {$/;"	c
SendBuf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^struct SendBuf<B>(Option<B>);$/;"	s
SendRequest	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl<B: Send> AssertSendSync for SendRequest<B> {}$/;"	c
SendRequest	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl<B> SendRequest<B>$/;"	c
SendRequest	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl<B> fmt::Debug for SendRequest<B> {$/;"	c
SendRequest	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^pub struct SendRequest<B> {$/;"	s
Sender	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^impl Sender {$/;"	c
Sender	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^pub struct Sender {$/;"	s
Sender	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^impl<T, U> Sender<T, U> {$/;"	c
Sender	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^pub struct Sender<T, U> {$/;"	s
Sender	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^impl Sender {$/;"	c
Sender	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^pub(crate) struct Sender {$/;"	s
Serializer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^impl<T: Target> Serializer<T> {$/;"	c
Serializer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^pub struct Serializer<T: Target> {$/;"	s
Serve	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^impl<I, S, B, E> Stream for Serve<I, S, E>$/;"	c
Serve	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^impl<I, S, E> Serve<I, S, E> {$/;"	c
Serve	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^pub struct Serve<I, S, E = Exec> {$/;"	s
Server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^impl<S, Bs> Dispatch for Server<S>$/;"	c
Server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^impl<S> Server<S> where S: Service {$/;"	c
Server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^pub struct Server<S: Service> {$/;"	s
Server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^impl Http1Transaction for Server {$/;"	c
Server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^impl Server {$/;"	c
Server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^pub(crate) enum Server {}$/;"	g
Server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^impl<T, S, B, E> Future for Server<T, S, B, E>$/;"	c
Server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^impl<T, S, B, E> Server<T, S, B, E>$/;"	c
Server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^pub(crate) struct Server<T, S, B, E>$/;"	s
Server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^impl Server<AddrIncoming, ()> {$/;"	c
Server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^impl<I, S, B, E> Future for Server<I, S, E>$/;"	c
Server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^impl<I, S, E, B> Server<I, S, E>$/;"	c
Server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^impl<I: fmt::Debug, S: fmt::Debug> fmt::Debug for Server<I, S> {$/;"	c
Server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^impl<I> Server<I, ()> {$/;"	c
Server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^impl<S> Server<AddrIncoming, S> {$/;"	c
Server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^pub struct Server<I, S, E = Exec> {$/;"	s
ServerError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    ServerError(StatusCode),$/;"	e	enum:Kind
ServerTransaction	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^pub(crate) type ServerTransaction = role::Server;$/;"	t
Service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Service,$/;"	e	enum:Kind
Service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    Service(F),$/;"	e	enum:H2StreamState
Service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type Service = Ret::Item;$/;"	t
Service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type Service = S;$/;"	t
Service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type Service: Service<$/;"	t	interface:MakeService
Service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type Service: Service<$/;"	t	interface:MakeServiceRef
Service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type Service = N::Service;$/;"	t
Service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type Service = S;$/;"	t
Service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    type Service: Service<$/;"	t	interface:NewService
Service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^pub trait Service {$/;"	i
ServiceFn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^impl<F, R> IntoFuture for ServiceFn<F, R> {$/;"	c
ServiceFn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^impl<F, R> fmt::Debug for ServiceFn<F, R> {$/;"	c
ServiceFn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^impl<F, ReqBody, Ret, ResBody> Service for ServiceFn<F, ReqBody>$/;"	c
ServiceFn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^pub struct ServiceFn<F, R> {$/;"	s
ServiceFnOk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^impl<F, R> IntoFuture for ServiceFnOk<F, R> {$/;"	c
ServiceFnOk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^impl<F, R> fmt::Debug for ServiceFnOk<F, R> {$/;"	c
ServiceFnOk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^impl<F, ReqBody, ResBody> Service for ServiceFnOk<F, ReqBody>$/;"	c
ServiceFnOk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^pub struct ServiceFnOk<F, R> {$/;"	s
Serving	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    Serving(Serving<T, B>),$/;"	e	enum:State
Serving	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^impl<T, B> Serving<T, B>$/;"	c
Serving	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^struct Serving<T, B>$/;"	s
Setter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    Setter,$/;"	e	enum:Context
Shared	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    Shared(T, T),$/;"	e	enum:Reservation
Shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Shutdown,$/;"	e	enum:Kind
Shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^    Shutdown,$/;"	e	enum:Dispatched
Signal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^impl Signal {$/;"	c
Signal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^pub struct Signal {$/;"	s
SilentDebug	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^impl<T> fmt::Debug for SilentDebug<T> {$/;"	c
SilentDebug	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^struct SilentDebug<T>(T);$/;"	s
Single	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    Single(&'a [u8]),$/;"	e	enum:LiteralIter
SingleByteSet	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^impl SingleByteSet {$/;"	c
SingleByteSet	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^struct SingleByteSet {$/;"	s
Size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    Size,$/;"	e	enum:ChunkedState
SizeLf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    SizeLf,$/;"	e	enum:ChunkedState
SizeLws	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    SizeLws,$/;"	e	enum:ChunkedState
Slot	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^pub type Slot = Option<usize>;$/;"	t
SocketAddrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^impl Iterator for SocketAddrs {$/;"	c
SocketAddrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^pub struct SocketAddrs {$/;"	s
SocketAddrsState	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^enum SocketAddrsState {$/;"	g
SparseSet	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^impl Deref for SparseSet {$/;"	c
SparseSet	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^impl SparseSet {$/;"	c
SparseSet	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^impl<'a> IntoIterator for &'a SparseSet {$/;"	c
SparseSet	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^pub struct SparseSet {$/;"	s
Spawn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/rt.rs	/^    pub struct Spawn {$/;"	s	module:inner
SpawnAll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^impl<I, S, B, E> SpawnAll<I, S, E>$/;"	c
SpawnAll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^impl<I, S, E> SpawnAll<I, S, E> {$/;"	c
SpawnAll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^impl<S, E> SpawnAll<AddrIncoming, S, E> {$/;"	c
SpawnAll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^pub(super) struct SpawnAll<I, S, E> {$/;"	s
SpecialNotFile	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    SpecialNotFile,$/;"	e	enum:SchemeType
Split	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    Split,$/;"	e	enum:MaybeInst
Split	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    Split(InstSplit),$/;"	e	enum:Inst
Split	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl<'r, 't> Iterator for Split<'r, 't> {$/;"	c
Split	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^pub struct Split<'r, 't> {$/;"	s
Split	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<'r, 't> Iterator for Split<'r, 't> {$/;"	c
Split	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^pub struct Split<'r, 't> {$/;"	s
Split1	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    Split1(InstPtr),$/;"	e	enum:MaybeInst
Split2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    Split2(InstPtr),$/;"	e	enum:MaybeInst
SplitN	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl<'r, 't> Iterator for SplitN<'r, 't> {$/;"	c
SplitN	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^pub struct SplitN<'r, 't> {$/;"	s
SplitN	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<'r, 't> Iterator for SplitN<'r, 't> {$/;"	c
SplitN	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^pub struct SplitN<'r, 't> {$/;"	s
StartLine	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    StartLine,$/;"	e	enum:EmptyLook
StartText	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    StartText,$/;"	e	enum:EmptyLook
Started	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/lazy.rs	/^pub(crate) trait Started: Future {$/;"	i
State	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^enum State<R: Resolve> {$/;"	g
State	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^enum State<F> {$/;"	g
State	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^impl State {$/;"	c
State	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^impl fmt::Debug for State {$/;"	c
State	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^struct State {$/;"	s
State	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/client.rs	/^enum State<T, B> where B: IntoBuf {$/;"	g
State	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^enum State<T, B>$/;"	g
State	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    enum State<I, N, S: Service, E, W: Watcher<I, S, E>> {$/;"	g	module:spawn_all
State	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/shutdown.rs	/^enum State<I, S, F, E> {$/;"	g
State	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^impl State {$/;"	c
State	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^impl fmt::Debug for State {$/;"	c
State	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^struct State {$/;"	s
StateFlags	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^impl StateFlags {$/;"	c
StateFlags	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^impl fmt::Debug for StateFlags {$/;"	c
StateFlags	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^struct StateFlags(u8);$/;"	s
StateMap	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^impl StateMap {$/;"	c
StateMap	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^struct StateMap {$/;"	s
StatePtr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^type StatePtr = u32;$/;"	t
StaticBuf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/buf.rs	/^impl Buf for StaticBuf {$/;"	c
StaticBuf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/buf.rs	/^pub(crate) struct StaticBuf(pub(crate) &'static [u8]);$/;"	s
Status	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Status,$/;"	e	enum:Parse
Status	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^enum Status {$/;"	g
Stop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    Stop,$/;"	e	enum:Action
StreamState	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^enum StreamState {$/;"	g
String	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/into_url.rs	/^impl<'a> PolyfillTryInto for &'a String {$/;"	c
String	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^impl Target for String {$/;"	c
String	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^impl<'a> Target for &'a mut String {$/;"	c
SubCaptureMatches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl<'c, 't> Iterator for SubCaptureMatches<'c, 't> {$/;"	c
SubCaptureMatches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^pub struct SubCaptureMatches<'c, 't: 'c> {$/;"	s
SubCaptureMatches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<'c, 't> Iterator for SubCaptureMatches<'c, 't> {$/;"	c
SubCaptureMatches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^pub struct SubCaptureMatches<'c, 't: 'c> {$/;"	s
SubCapturesPosIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^impl<'c> Iterator for SubCapturesPosIter<'c> {$/;"	c
SubCapturesPosIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^pub struct SubCapturesPosIter<'c> {$/;"	s
SuffixCache	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^impl SuffixCache {$/;"	c
SuffixCache	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^struct SuffixCache {$/;"	s
SuffixCacheEntry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^struct SuffixCacheEntry {$/;"	s
SuffixCacheKey	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^struct SuffixCacheKey {$/;"	s
Symlink	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    Symlink {$/;"	e	enum:Tree
SyncFailure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/sync_failure.rs	/^impl<E: Error + Send + 'static> Fail for SyncFailure<E> {}$/;"	c
SyncFailure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/sync_failure.rs	/^impl<E: Error + Send + 'static> SyncFailure<E> {$/;"	c
SyncFailure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/sync_failure.rs	/^impl<T> Debug for SyncFailure<T>$/;"	c
SyncFailure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/sync_failure.rs	/^impl<T> Display for SyncFailure<T>$/;"	c
SyncFailure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/sync_failure.rs	/^pub struct SyncFailure<T> {$/;"	s
Syntax	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/error.rs	/^    Syntax(String),$/;"	e	enum:Error
SyntaxViolation	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^impl fmt::Display for SyntaxViolation {$/;"	c
T	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/as_fail.rs	/^impl<T> AsFail for T$/;"	c
T	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^impl<T, Ctx, E, ME, S, F, IB, OB> MakeServiceRef<Ctx> for T$/;"	c
T	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^impl<T, Ctx, E, ME, S, F, IB, OB> self::sealed::Sealed<Ctx> for T$/;"	c
T	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^impl<T: AsyncRead + AsyncWrite + 'static> Io for T {}$/;"	c
T	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^impl<'a, T: Input> Input for &'a T {$/;"	c
T	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/into_url.rs	/^impl<T: PolyfillTryInto> IntoUrl for T {}$/;"	c
Target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    type Target = [u8];$/;"	t	implementation:Chunk
Target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    type Target = T;$/;"	t	implementation:Pooled
Target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    type Target = [u8];$/;"	t	implementation:AsyncIo
Target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    type Target = [u8];$/;"	t	implementation:MockCursor
Target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    type Target = [u8];$/;"	t	implementation:ByteInput
Target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    type Target = [u8];$/;"	t	implementation:CharInput
Target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    type Target = [Inst];$/;"	t	implementation:Program
Target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^    type Target = [usize];$/;"	t	implementation:SparseSet
Target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    type Target = [u8];$/;"	t	implementation:Chunk
Target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    type Target = W;$/;"	t	implementation:MouseTerminal
Target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^    type Target = W;$/;"	t	implementation:RawTerminal
Target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^    type Target = W;$/;"	t	implementation:AlternateScreen
Target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^pub trait Target {$/;"	i
Teddy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/fallback.rs	/^impl Teddy {$/;"	c
Teddy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/fallback.rs	/^pub struct Teddy(());$/;"	s
Teddy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^impl Teddy {$/;"	c
Teddy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^pub struct Teddy {$/;"	s
Teddy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/fallback.rs	/^impl Teddy {$/;"	c
Teddy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/fallback.rs	/^pub struct Teddy(());$/;"	s
Teddy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^impl Teddy {$/;"	c
Teddy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^pub struct Teddy {$/;"	s
TeddyAVX2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    TeddyAVX2(&'a [Vec<u8>]),$/;"	e	enum:LiteralIter
TeddyAVX2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    TeddyAVX2(TeddyAVX2),$/;"	e	enum:Matcher
TeddySSSE3	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    TeddySSSE3(&'a [Vec<u8>]),$/;"	e	enum:LiteralIter
TeddySSSE3	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    TeddySSSE3(TeddySSSE3),$/;"	e	enum:Matcher
TempDir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^impl Drop for TempDir {$/;"	c
TempDir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^impl TempDir {$/;"	c
TempDir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^struct TempDir(PathBuf);$/;"	s
TemplateVar	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^impl<'a> TemplateVar<'a> {$/;"	c
TemplateVar	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^pub struct TemplateVar<'a> {$/;"	s
Term	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    Term(Term, Option<ProgressDrawState>, Option<Duration>),$/;"	e	enum:ProgressDrawTargetKind
TermRead	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^pub trait TermRead {$/;"	i
TermReadEventsAndRaw	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^pub trait TermReadEventsAndRaw {$/;"	i
TermSize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/size.rs	/^struct TermSize {$/;"	s
TestMe	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    impl Future for TestMe {$/;"	c	module:tests
TestMe	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    struct TestMe {$/;"	s	module:tests
Text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    type Text = [u8];$/;"	t	implementation:ExecNoSync
Text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    type Text = str;$/;"	t	implementation:ExecNoSyncStr
Text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    type Text: ?Sized;$/;"	t	interface:RegularExpression
Text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    Text(StrTendril),$/;"	e	enum:Data
Text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^impl Predicate for Text {$/;"	c
Text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^pub struct Text;$/;"	s
ThreadNotify	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^impl Notify for ThreadNotify {$/;"	c
ThreadNotify	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^struct ThreadNotify {$/;"	s
ThreadSender	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^type ThreadSender = mpsc::UnboundedSender<(async_impl::Request, oneshot::Sender<::Result<async_i/;"	t
Threads	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^impl Threads {$/;"	c
Threads	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^struct Threads {$/;"	s
TimedOut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^    TimedOut,$/;"	e	enum:Waited
Timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^impl Default for Timeout {$/;"	c
Timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^struct Timeout(Option<Duration>);$/;"	s
Tls	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    Tls(::native_tls::Error),$/;"	e	enum:Kind
TlsConnector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^impl TlsConnectorExt for TlsConnector {$/;"	c
TlsConnector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^impl sealed::Sealed for TlsConnector {}$/;"	c
TlsConnectorExt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^pub trait TlsConnectorExt: sealed::Sealed {$/;"	i
TlsStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^impl<S: AsyncRead + AsyncWrite> AsyncRead for TlsStream<S> {$/;"	c
TlsStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^impl<S: AsyncRead + AsyncWrite> AsyncWrite for TlsStream<S> {$/;"	c
TlsStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^impl<S: Read + Write> Read for TlsStream<S> {$/;"	c
TlsStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^impl<S: Read + Write> Write for TlsStream<S> {$/;"	c
TlsStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^pub struct TlsStream<S> {$/;"	s
ToAlternateScreen	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^impl fmt::Display for ToAlternateScreen {$/;"	c
ToAlternateScreen	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^pub struct ToAlternateScreen;$/;"	s
ToHttp2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    ToHttp2(E),$/;"	e	enum:Fallback
ToMainScreen	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^impl fmt::Display for ToMainScreen {$/;"	c
ToMainScreen	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^pub struct ToMainScreen;$/;"	s
TokioSpawnError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^                    impl StdError for TokioSpawnError {$/;"	c	method:Exec::execute
TokioSpawnError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^                    impl fmt::Debug for TokioSpawnError {$/;"	c	method:Exec::execute
TokioSpawnError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^                    impl fmt::Display for TokioSpawnError {$/;"	c	method:Exec::execute
TokioSpawnError	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^                    struct TokioSpawnError;$/;"	s	method:Exec::execute
TokioThreadpoolGaiFuture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl Future for TokioThreadpoolGaiFuture {$/;"	c
TokioThreadpoolGaiFuture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^pub struct TokioThreadpoolGaiFuture {$/;"	s
TokioThreadpoolGaiResolver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl Resolve for TokioThreadpoolGaiResolver {$/;"	c
TokioThreadpoolGaiResolver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^impl TokioThreadpoolGaiResolver {$/;"	c
TokioThreadpoolGaiResolver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^pub struct TokioThreadpoolGaiResolver(());$/;"	s
TooLarge	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    TooLarge,$/;"	e	enum:Parse
TooManyRedirects	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    TooManyRedirects,$/;"	e	enum:Kind
TooManyRedirects	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    TooManyRedirects,$/;"	e	enum:Action
TraitObject	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^struct TraitObject {$/;"	s
TraitObject	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^struct TraitObject {$/;"	s
Transitions	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^impl Transitions {$/;"	c
Transitions	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^impl fmt::Debug for Transitions {$/;"	c
Transitions	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^struct Transitions {$/;"	s
TransitionsRow	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^impl<'a> fmt::Debug for TransitionsRow<'a> {$/;"	c
TransitionsRow	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^struct TransitionsRow<'a>(&'a [StatePtr]);$/;"	s
Transport	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    type Transport = TcpStream;$/;"	t
Transport	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    type Transport: AsyncRead + AsyncWrite + Send + 'static;$/;"	t	interface:Connect
Transport	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    type Transport = Duplex;$/;"	t	implementation:MockConnector
Transport	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    type Transport = Conn;$/;"	t	implementation:Connector
Tree	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^enum Tree {$/;"	g
Tree	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^impl Arbitrary for Tree {$/;"	c
Tree	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^impl Tree {$/;"	c
Tunnel	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^impl<T> Future for Tunnel<T>$/;"	c
Tunnel	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^struct Tunnel<T> {$/;"	s
TunnelState	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^enum TunnelState {$/;"	g
Tuple	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/origin.rs	/^    Tuple(String, Host<String>, u16)$/;"	e	enum:Origin
Unanchored	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    Unanchored,$/;"	e	enum:MatchLiteralType
UnboundedSender	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^impl<T, U> Clone for UnboundedSender<T, U> {$/;"	c
UnboundedSender	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^impl<T, U> UnboundedSender<T, U> {$/;"	c
UnboundedSender	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^pub struct UnboundedSender<T, U> {$/;"	s
Uncompiled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    Uncompiled(InstHole),$/;"	e	enum:MaybeInst
Uniq	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    impl<T: Send + 'static> Poolable for Uniq<T> {$/;"	c	module:tests
Uniq	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    struct Uniq<T>(T);$/;"	s	module:tests
Unique	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    Unique(T),$/;"	e	enum:Reservation
Unknown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^    Unknown,$/;"	e	enum:BodyLength
Unsupported	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Unsupported(Vec<u8>),$/;"	e	enum:Event
UnsupportedRequestMethod	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    UnsupportedRequestMethod,$/;"	e	enum:Kind
UnsupportedStatusCode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    UnsupportedStatusCode,$/;"	e	enum:Kind
UnsupportedVersion	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    UnsupportedVersion,$/;"	e	enum:Kind
Up	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^impl fmt::Display for Up {$/;"	c
Up	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^pub struct Up(pub u16);$/;"	s
Up	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    Up,$/;"	e	enum:Key
Up	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/scroll.rs	/^impl fmt::Display for Up {$/;"	c
Up	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/scroll.rs	/^pub struct Up(pub u16);$/;"	s
Upgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^    Upgrade(::upgrade::Pending),$/;"	e	enum:Dispatched
UpgradeExpected	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^impl StdError for UpgradeExpected {$/;"	c
UpgradeExpected	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^impl fmt::Display for UpgradeExpected {$/;"	c
UpgradeExpected	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^struct UpgradeExpected(());$/;"	s
UpgradeableConnection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    impl<I, B, S, E> Future for UpgradeableConnection<I, S, E>$/;"	c	module:upgrades
UpgradeableConnection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    impl<I, B, S, E> UpgradeableConnection<I, S, E>$/;"	c	module:upgrades
UpgradeableConnection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub struct UpgradeableConnection<T, S, E>$/;"	s	module:upgrades
Upgraded	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^impl AsyncRead for Upgraded {$/;"	c
Upgraded	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^impl AsyncWrite for Upgraded {$/;"	c
Upgraded	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^impl Read for Upgraded {$/;"	c
Upgraded	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^impl Upgraded {$/;"	c
Upgraded	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^impl Write for Upgraded {$/;"	c
Upgraded	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^impl fmt::Debug for Upgraded {$/;"	c
Upgraded	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^pub struct Upgraded {$/;"	s
Uri	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Uri,$/;"	e	enum:Parse
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    Url(::url::ParseError),$/;"	e	enum:Kind
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/into_url.rs	/^impl PolyfillTryInto for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    impl Dst for Url {$/;"	c	module:tests
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl AsRef<str> for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl Eq for Url {}$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl HeapSizeOf for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl Ord for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl PartialEq for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl PartialOrd for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl ToSocketAddrs for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl fmt::Debug for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl fmt::Display for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl hash::Hash for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl rustc_serialize::Decodable for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl rustc_serialize::Encodable for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl serde::Deserialize for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl serde::Serialize for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl str::FromStr for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^pub struct Url {$/;"	s
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^impl Index<Range<Position>> for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^impl Index<RangeFrom<Position>> for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^impl Index<RangeFull> for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^impl Index<RangeTo<Position>> for Url {$/;"	c
Url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^impl Url {$/;"	c
UrlBadScheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    UrlBadScheme,$/;"	e	enum:Kind
UrlEncoded	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    UrlEncoded(::serde_urlencoded::ser::Error),$/;"	e	enum:Kind
UrlParser	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    UrlParser,$/;"	e	enum:Context
UrlQuery	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^impl<'a> Target for ::UrlQuery<'a> {$/;"	c
UrlQuery	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^impl<'a> Drop for UrlQuery<'a> {$/;"	c
UrlQuery	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^pub struct UrlQuery<'a> {$/;"	s
VTable	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    type VTable;$/;"	t
VTable	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    type VTable;$/;"	t
Ver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^enum Ver {$/;"	g
Version	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    Version,$/;"	e	enum:Parse
VersionH2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    VersionH2,$/;"	e	enum:Parse
ViolationFn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^impl<'a> ViolationFn<'a> {$/;"	c
ViolationFn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^impl<'a> fmt::Debug for ViolationFn<'a> {$/;"	c
ViolationFn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^pub enum ViolationFn<'a> {$/;"	g
W	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^impl<W: Write> DetectColors for W {$/;"	c
W	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^impl<W: Write> DetectCursorPos for W {$/;"	c
W	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^impl<W: Write> IntoRawMode for W {$/;"	c
WaitBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^impl Stream for WaitBody {$/;"	c
WaitBody	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^struct WaitBody {$/;"	s
WaitStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^impl<S> Iterator for WaitStream<S>$/;"	c
WaitStream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^pub(crate) struct WaitStream<S> {$/;"	s
Waited	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^impl<E> From<E> for Waited<E> {$/;"	c
Waited	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^pub(crate) enum Waited<E> {$/;"	g
WalkDir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl IntoIterator for WalkDir {$/;"	c
WalkDir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl WalkDir {$/;"	c
WalkDir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^pub struct WalkDir {$/;"	s
WalkDirOptions	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^impl fmt::Debug for WalkDirOptions {$/;"	c
WalkDirOptions	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^struct WalkDirOptions {$/;"	s
WalkEvent	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^enum WalkEvent {$/;"	g
WalkEventIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^impl From<WalkDir> for WalkEventIter {$/;"	c
WalkEventIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^impl Iterator for WalkEventIter {$/;"	c
WalkEventIter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^struct WalkEventIter {$/;"	s
Watch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    Watch(F),$/;"	e	enum:State
Watch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^impl Watch {$/;"	c
Watch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^pub struct Watch {$/;"	s
Watcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub trait Watcher<I, S: Service, E>: Clone {$/;"	i	module:spawn_all
Watching	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^impl<F, FN> Future for Watching<F, FN>$/;"	c
Watching	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^pub struct Watching<F, FN> {$/;"	s
WeakOpt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^impl<T> WeakOpt<T> {$/;"	c
WeakOpt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^struct WeakOpt<T>(Option<Weak<T>>);$/;"	s
WheelDown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    WheelDown,$/;"	e	enum:MouseButton
WheelUp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    WheelUp,$/;"	e	enum:MouseButton
WhenReady	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^impl<B> Future for WhenReady<B> {$/;"	c
WhenReady	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^pub(super) struct WhenReady<B> {$/;"	s
WordBoundary	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    WordBoundary,$/;"	e	enum:EmptyLook
WordBoundaryAscii	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    WordBoundaryAscii,$/;"	e	enum:EmptyLook
Wrapped	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    Wrapped(Box<Stream<Item = Chunk, Error = Box<::std::error::Error + Send + Sync>> + Send>),$/;"	e	enum:Kind
WriteBuf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl<B: Buf> Buf for WriteBuf<B> {$/;"	c
WriteBuf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl<B: Buf> fmt::Debug for WriteBuf<B> {$/;"	c
WriteBuf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl<B> WriteBuf<B> {$/;"	c
WriteBuf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl<B> WriteBuf<B>$/;"	c
WriteBuf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^pub(super) struct WriteBuf<B> {$/;"	s
WriteBufAuto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl<'a, B: Buf + 'a> Drop for WriteBufAuto<'a, B> {$/;"	c
WriteBufAuto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl<'a, B: Buf> Buf for WriteBufAuto<'a, B> {$/;"	c
WriteBufAuto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^impl<'a, B: Buf> WriteBufAuto<'a, B> {$/;"	c
WriteBufAuto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^struct WriteBufAuto<'a, B: Buf + 'a> {$/;"	s
WriteStrategy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^enum WriteStrategy {$/;"	g
Writing	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^enum Writing {$/;"	g
Writing	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^impl fmt::Debug for Writing {$/;"	c
Writing	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    Writing,$/;"	e	enum:TunnelState
__DontNameMe	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type __DontNameMe = self::sealed::CantName;$/;"	t
__DontNameMe	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    type __DontNameMe: self::sealed::CantImpl;$/;"	t	interface:MakeServiceRef
__IsNotComplete	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^    __IsNotComplete,$/;"	e	enum:Key
__Nonexhaustive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/error.rs	/^    __Nonexhaustive,$/;"	e	enum:Error
__hyper_downcast	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    fn __hyper_downcast<T: Io>(self: Box<Self>) -> Result<Box<T>, Box<Self>> {$/;"	P	implementation:Send
__hyper_full_data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn __hyper_full_data(&mut self, _: FullDataArg) -> FullDataRet<Self::Data> {$/;"	P	implementation:Body
__hyper_full_data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/payload.rs	/^    fn __hyper_full_data(&mut self, FullDataArg) -> FullDataRet<Self::Data> {$/;"	P	interface:Payload
__hyper_full_data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/payload.rs	/^    fn __hyper_full_data(&mut self, arg: FullDataArg) -> FullDataRet<Self::Data> {$/;"	P	implementation:Box
__hyper_is	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    fn __hyper_is<T: Io>(&self) -> bool {$/;"	P	implementation:Send
__hyper_type_id	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    fn __hyper_type_id(&self) -> TypeId {$/;"	P	interface:Io
__private_get_type_id__	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    fn __private_get_type_id__(&self) -> TypeId {$/;"	P	interface:Fail
_assert_impls	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^fn _assert_impls() {$/;"	f
_assert_send	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/mod.rs	/^    fn _assert_send<T: Send>() {}$/;"	f	function:_assert_send_sync
_assert_send_sync	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/mod.rs	/^fn _assert_send_sync() {$/;"	f
_assert_sync	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/mod.rs	/^    fn _assert_sync<T: Sync>() {}$/;"	f	function:_assert_send_sync
_find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn _find(&self, haystack: &[u8]) -> Option<usize> {$/;"	P	implementation:SingleByteSet
_inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    _inner: (),$/;"	m	struct:Parts
_inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    _inner: (),$/;"	m	struct:Parts
_inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    _inner: (),$/;"	m	struct:Parts
_marker	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    _marker: PhantomData<B>,$/;"	m	struct:Handshake
_marker	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    _marker: PhantomData<T>$/;"	m	struct:Conn
_marker	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    _marker: PhantomData<T>,$/;"	m	struct:Json
_req	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    _req: PhantomData<fn(R)>,$/;"	m	struct:ServiceFn
_req	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    _req: PhantomData<fn(R)>,$/;"	m	struct:ServiceFnOk
_thread_handle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    _thread_handle: KeepCoreThreadAlive,$/;"	m	struct:Response
_x	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/size.rs	/^    _x: c_ushort,$/;"	m	struct:TermSize
_y	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/size.rs	/^    _y: c_ushort,$/;"	m	struct:TermSize
abort	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    pub fn abort(self) {$/;"	P	implementation:Sender
abort_tx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    abort_tx: oneshot::Sender<()>,$/;"	m	struct:Sender
absolute_form	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^fn absolute_form(uri: &mut Uri) {$/;"	f
ac	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    ac: FullAcAutomaton<Vec<u8>>,$/;"	m	struct:Teddy
ac	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    ac: FullAcAutomaton<Vec<u8>>,$/;"	m	struct:Teddy
active_reader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    active_reader: Option<Box<Read + Send>>,$/;"	m	struct:Reader
add	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn add(&self, bar: ProgressBar) -> ProgressBar {$/;"	P	implementation:MultiProgress
add	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn add(&mut self) -> Option<StatePtr> {$/;"	P	implementation:Transitions
add	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    fn add(&mut self, bucket: u8, byte: u8) {$/;"	P	implementation:Mask
add	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    fn add(&mut self, bucket: u8, pat: &[u8]) {$/;"	P	implementation:Masks
add	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    fn add(&mut self, bucket: u8, byte: u8) {$/;"	P	implementation:Mask
add	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    fn add(&mut self, bucket: u8, pat: &[u8]) {$/;"	P	implementation:Masks
add	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    fn add($/;"	P	implementation:Fsm
add_body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn add_body() {$/;"	f	module:tests
add_chunked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/headers.rs	/^pub fn add_chunked(mut entry: OccupiedEntry<HeaderValue>) {$/;"	f
add_form	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn add_form() {$/;"	f	module:tests
add_header	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn add_header() {$/;"	f	module:tests
add_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn add_headers() {$/;"	f	module:tests
add_json	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn add_json() {$/;"	f	module:tests
add_json_fail	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn add_json_fail() {$/;"	f	module:tests
add_query_append	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    fn add_query_append() {$/;"	f	module:tests
add_query_append	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn add_query_append() {$/;"	f	module:tests
add_query_append_same	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    fn add_query_append_same() {$/;"	f	module:tests
add_query_append_same	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn add_query_append_same() {$/;"	f	module:tests
add_query_map	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    fn add_query_map() {$/;"	f	module:tests
add_query_map	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn add_query_map() {$/;"	f	module:tests
add_query_struct	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    fn add_query_struct() {$/;"	f	module:tests
add_query_struct	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn add_query_struct() {$/;"	f	module:tests
add_root_certificate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn add_root_certificate(mut self, cert: Certificate) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
add_root_certificate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn add_root_certificate(self, cert: Certificate) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
add_state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn add_state(&mut self, state: State) -> Option<StatePtr> {$/;"	P	implementation:Fsm
add_step	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    fn add_step($/;"	P	implementation:Fsm
add_waiter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn add_waiter(&mut self) {$/;"	P	implementation:Checkout
addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    addr: SocketAddr,$/;"	m	struct:AddrIncoming
addr_stream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^mod addr_stream {$/;"	n
addrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    addrs: dns::IpAddrs,$/;"	m	struct:ConnectingTcpRemote
advance	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn advance(&mut self, cnt: usize) {$/;"	P	implementation:Chunk
advance	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/buf.rs	/^    fn advance(&mut self, cnt: usize) {$/;"	P	implementation:StaticBuf
advance	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn advance(&mut self, cnt: usize) {$/;"	P	implementation:ChunkSize
advance	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn advance(&mut self, cnt: usize) {$/;"	f
advance	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn advance(&mut self, cnt: usize) {$/;"	P	implementation:Cursor
advance	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn advance(&mut self, cnt: usize) {$/;"	P	implementation:WriteBuf
advance	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn advance(&mut self, cnt: usize) {$/;"	P	implementation:WriteBufAuto
advance	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn advance(&mut self, mut cnt: usize) {$/;"	P	implementation:BufDeque
advance	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^    fn advance(&mut self, cnt: usize) {$/;"	P	implementation:SendBuf
advance	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    fn advance(&mut self, n: usize) {$/;"	P	implementation:Chunk
after_double_slash	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn after_double_slash(mut self, input: Input, scheme_type: SchemeType, scheme_end: u32)$/;"	P	implementation:Parser
after_first_slash	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/path_segments.rs	/^    after_first_slash: usize,$/;"	m	struct:PathSegmentsMut
after_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/path_segments.rs	/^    after_path: String,$/;"	m	struct:PathSegmentsMut
align	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    pub align: Alignment,$/;"	m	struct:TemplateVar
alignr_14	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    pub fn alignr_14(self, other: u8x32) -> u8x32 {$/;"	P	implementation:u8x32
alignr_14	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    pub fn alignr_14(self, other: u8x16) -> u8x16 {$/;"	P	implementation:u8x16
alignr_15	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    pub fn alignr_15(self, other: u8x32) -> u8x32 {$/;"	P	implementation:u8x32
alignr_15	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    pub fn alignr_15(self, other: u8x16) -> u8x16 {$/;"	P	implementation:u8x16
all	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    pub fn all<U: IntoUrl>(url: U) -> ::Result<Proxy> {$/;"	P	implementation:Proxy
all_ascii	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    all_ascii: bool,$/;"	m	struct:SingleByteSet
all_async_cases	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn all_async_cases(content: &str, expected: &str, decoder: Decoder) {$/;"	f	module:tests
allow_half_close	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    allow_half_close: bool,$/;"	m	struct:State
alpn_h2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    pub(super) fn alpn_h2(self, pool: &Pool<T>) -> Option<Self> {$/;"	P	implementation:Connecting
alt_style	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    pub alt_style: Option<Style>,$/;"	m	struct:TemplateVar
always_enabled_if_failure_is_set_to_yes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^    fn always_enabled_if_failure_is_set_to_yes() {$/;"	f	module:tests
and	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    pub fn and(self, other: u8x32) -> u8x32 {$/;"	P	implementation:u8x32
and	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    pub fn and(self, other: u8x16) -> u8x16 {$/;"	P	implementation:u8x16
and	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn and<T: Predicate>(self, other: T) -> And<Self, T>$/;"	P	interface:Predicate
append	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^        fn append(document: &mut Document,$/;"	f	method:Document::from
append_charset	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    pub fn append_charset(&mut self) -> &mut Self {$/;"	P	implementation:Serializer
append_encoded	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^fn append_encoded(s: &str, string: &mut String, encoding: EncodingOverride,$/;"	f
append_pair	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    pub fn append_pair(&mut self, name: &str, value: &str) -> &mut Self {$/;"	P	implementation:Serializer
append_pair	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^fn append_pair(string: &mut String, start_position: usize, encoding: EncodingOverride,$/;"	f
append_separator_if_needed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^fn append_separator_if_needed(string: &mut String, start_position: usize) {$/;"	f
apply_draw_state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    fn apply_draw_state(&mut self, draw_state: ProgressDrawState) -> io::Result<()> {$/;"	P	implementation:ProgressDrawTarget
approximate_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn approximate_size(&self) -> usize {$/;"	P	implementation:Fsm
approximate_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn approximate_size(&self) -> usize {$/;"	P	implementation:BoyerMooreSearch
approximate_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn approximate_size(&self) -> usize {$/;"	P	implementation:FreqyPacked
approximate_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn approximate_size(&self) -> usize {$/;"	P	implementation:SingleByteSet
approximate_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn approximate_size(&self) -> usize {$/;"	P	implementation:LiteralSearcher
approximate_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/fallback.rs	/^    pub fn approximate_size(&self) -> usize { 0 }$/;"	P	implementation:Teddy
approximate_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    pub fn approximate_size(&self) -> usize {$/;"	P	implementation:Teddy
approximate_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/fallback.rs	/^    pub fn approximate_size(&self) -> usize { 0 }$/;"	P	implementation:Teddy
approximate_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    pub fn approximate_size(&self) -> usize {$/;"	P	implementation:Teddy
approximate_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub fn approximate_size(&self) -> usize {$/;"	P	implementation:Program
arbitrary	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^            fn arbitrary<G: Gen>(g: &mut G) -> NonEmptyAscii {$/;"	P	implementation:Tree::gen::NonEmptyAscii
arbitrary	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Tree {$/;"	P	implementation:Tree
art	/home/doc/Code/Git/oracle/src/work.rs	/^pub fn art(os: &Os, version: &str, fs: &str, test: bool) {$/;"	f	function:neofetch
as_backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^    pub(super) fn as_backtrace(&self) -> Option<&Backtrace> {$/;"	P	implementation:InternalBacktrace
as_byte	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn as_byte(&self) -> Option<u8> {$/;"	P	implementation:Byte
as_bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn as_bytes(&self) -> &[u8] { (**self).as_bytes() }$/;"	P	implementation:T
as_bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:ByteInput
as_bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:CharInput
as_bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn as_bytes(&self) -> &[u8];$/;"	P	interface:Input
as_bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn as_bytes(&self) -> &'t [u8] {$/;"	P	implementation:Match
as_comment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn as_comment(&self) -> Option<&'a str> {$/;"	P	implementation:Node
as_fail	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/as_fail.rs	/^    fn as_fail(&self) -> &Fail {$/;"	P	implementation:Fail
as_fail	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/as_fail.rs	/^    fn as_fail(&self) -> &Fail {$/;"	f
as_fail	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/as_fail.rs	/^    fn as_fail(&self) -> &Fail;$/;"	P	interface:AsFail
as_fail	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    pub fn as_fail(&self) -> &Fail {$/;"	P	implementation:Error
as_fail	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^mod as_fail;$/;"	n
as_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn as_mut(&mut self) -> &mut T {$/;"	P	implementation:Pooled
as_mut_string	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    fn as_mut_string(&mut self) -> &mut String { &mut **self }$/;"	P	implementation:String
as_mut_string	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    fn as_mut_string(&mut self) -> &mut String { self }$/;"	P	implementation:String
as_mut_string	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    fn as_mut_string(&mut self) -> &mut String {$/;"	P	implementation:UrlQuery
as_mut_string	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    fn as_mut_string(&mut self) -> &mut String;$/;"	P	interface:Target
as_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    fn as_ref(&self) -> &Fail {$/;"	P	implementation:Error
as_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	P	implementation:Chunk
as_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn as_ref(&self) -> &T {$/;"	P	implementation:Pooled
as_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	P	implementation:MockCursor
as_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	P	implementation:Chunk
as_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:Url
as_slots	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    pub(crate) fn as_slots(&mut self) -> &mut [Slot] {$/;"	P	implementation:Locations
as_str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Name
as_str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Regex
as_str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn as_str(&self) -> &'t str {$/;"	P	implementation:Match
as_str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Regex
as_str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Url
as_text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn as_text(&self) -> Option<&'a str> {$/;"	P	implementation:Node
ascii_alpha	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^pub fn ascii_alpha(ch: char) -> bool {$/;"	f
ascii_serialization	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/origin.rs	/^    pub fn ascii_serialization(&self) -> String {$/;"	P	implementation:Origin
assert	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^        macro_rules! assert {$/;"	M	method:Url::check_invariants
assert_clone	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^    fn assert_clone<T: Clone>() {}$/;"	f	function:_assert_impls
assert_eq	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^        macro_rules! assert_eq {$/;"	M	method:Url::check_invariants
assert_error_is_just_data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    fn assert_error_is_just_data() {$/;"	f	module:test
assert_error_is_just_data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    fn assert_error_is_just_data() {$/;"	f	module:test
assert_is_one_word	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    fn assert_is_one_word() {$/;"	f	module:test
assert_is_one_word	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    fn assert_is_one_word() {$/;"	f	module:test
assert_just_data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    fn assert_just_data<T: Send + Sync + 'static>() { }$/;"	f	module:test
assert_just_data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^        fn assert_just_data<T: Send + Sync + 'static>() { }$/;"	f	function:test::assert_error_is_just_data
assert_send	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^    fn assert_send<T: Send>() {}$/;"	f	function:_assert_impls
assert_sync	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^    fn assert_sync<T: Sync>() {}$/;"	f	function:_assert_impls
async	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^pub mod async {$/;"	n
async	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/lib.rs	/^mod async;$/;"	n
async_full_rewind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    fn async_full_rewind() {$/;"	f	module:tests
async_impl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^mod async_impl;$/;"	n
async_partial_rewind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    fn async_partial_rewind() {$/;"	f	module:tests
async_stdin	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/async.rs	/^pub fn async_stdin() -> AsyncReader {$/;"	f
at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    at: usize,$/;"	m	struct:Fsm
at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn at(&self, i: usize) -> InputAt { (**self).at(i) }$/;"	P	implementation:T
at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn at(&self, i: usize) -> InputAt {$/;"	P	implementation:ByteInput
at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn at(&self, i: usize) -> InputAt {$/;"	P	implementation:CharInput
at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn at(&self, i: usize) -> InputAt;$/;"	P	interface:Input
attr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn attr(&self, name: &str) -> Option<&'a str> {$/;"	P	implementation:Node
attr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/redox/mod.rs	/^pub mod attr;$/;"	n
attr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/mod.rs	/^pub mod attr;$/;"	n
audio_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^pub fn audio_dir() -> Option<PathBuf> {$/;"	f
audio_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^pub fn audio_dir()      -> Option<PathBuf> { run_xdg_user_dir_command("MUSIC") }$/;"	f
audio_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/mac.rs	/^pub fn audio_dir()      -> Option<PathBuf> { home_dir().map(|h| h.join("Music")) }$/;"	f
audio_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^pub fn audio_dir()      -> Option<PathBuf> { home_dir().map(|h| h.join("Music")) }$/;"	f
audio_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^pub fn audio_dir()      -> Option<PathBuf> { known_folder(&knownfolders::FOLDERID_Music) }$/;"	f
authority_form	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^fn authority_form(uri: &mut Uri) {$/;"	f
auto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn auto(&mut self) -> WriteBufAuto<B> {$/;"	f
automatic	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn automatic(mut self) -> Self {$/;"	P	implementation:ExecBuilder
available	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/fallback.rs	/^    pub fn available() -> bool { false }$/;"	P	implementation:Teddy
available	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    pub fn available() -> bool {$/;"	P	implementation:Teddy
available	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/fallback.rs	/^    pub fn available() -> bool { false }$/;"	P	implementation:Teddy
available	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    pub fn available() -> bool {$/;"	P	implementation:Teddy
available_colors	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^    fn available_colors(&mut self) -> io::Result<u16> {$/;"	P	implementation:W
available_colors	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^    fn available_colors(&mut self) -> io::Result<u16>;$/;"	P	interface:DetectColors
avg_time_per_step	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn avg_time_per_step(&self) -> Duration {$/;"	P	implementation:ProgressState
avx2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/mod.rs	/^pub mod avx2;$/;"	n
backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^    backtrace: Option<MaybeResolved>,$/;"	m	struct:InternalBacktrace
backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^    backtrace: UnsafeCell<Backtrace>,$/;"	m	struct:MaybeResolved
backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl.rs	/^    backtrace: Backtrace,$/;"	m	struct:Inner
backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl.rs	/^    pub(crate) fn backtrace(&self) -> &Backtrace {$/;"	P	implementation:ErrorImpl
backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    backtrace: Backtrace,$/;"	m	struct:Inner
backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    backtrace: Backtrace,$/;"	m	struct:InnerHeader
backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    pub(crate) fn backtrace(&self) -> &Backtrace {$/;"	P	implementation:ErrorImpl
backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    pub fn backtrace(&self) -> &Backtrace {$/;"	P	implementation:Error
backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    fn backtrace(&self) -> Option<&Backtrace> {$/;"	P	implementation:Box
backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    fn backtrace(&self) -> Option<&Backtrace> {$/;"	P	interface:Fail
backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^mod backtrace;$/;"	n
backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    backtrace: Backtrace,$/;"	m	struct:Inner
backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    backtrace: Backtrace,$/;"	m	struct:InnerHeader
backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    pub fn backtrace(&self) -> &Backtrace {$/;"	P	implementation:Error
backtrack	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^    fn backtrack(&mut self, start: InputAt) -> bool {$/;"	P	implementation:Bounded
backtrack	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub backtrack: backtrack::Cache,$/;"	m	struct:ProgramCacheInner
backtrack	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod backtrack;$/;"	n
bail	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/macros.rs	/^macro_rules! bail {$/;"	M
bar	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    bar: &'a ProgressBar,$/;"	m	struct:ProgressBarIter
bar	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    bar: &'a ProgressBar,$/;"	m	struct:ProgressBarRead
base	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    base: usize,$/;"	m	struct:InstPtrs
base_url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    base_url: Option<&'a Url>,$/;"	m	struct:ParseOptions
base_url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn base_url(mut self, new: Option<&'a Url>) -> Self {$/;"	P	implementation:ParseOptions
base_url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub base_url: Option<&'a Url>,$/;"	m	struct:Parser
basename	/home/doc/Code/Git/oracle/src/work.rs	/^pub fn basename(path: &'_ str) -> Cow<'_, str> {$/;"	f	function:neofetch
basic_auth	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn basic_auth<U, P>(self, username: U, password: Option<P>) -> RequestBuilder$/;"	P	implementation:RequestBuilder
basic_auth	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn basic_auth<U, P>(self, username: U, password: Option<P>) -> RequestBuilder$/;"	P	implementation:RequestBuilder
basic_delete_request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn basic_delete_request() {$/;"	f	module:tests
basic_get_request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn basic_get_request() {$/;"	f	module:tests
basic_head_request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn basic_head_request() {$/;"	f	module:tests
basic_patch_request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn basic_patch_request() {$/;"	f	module:tests
basic_post_request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn basic_post_request() {$/;"	f	module:tests
basic_put_request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn basic_put_request() {$/;"	f	module:tests
bearer_auth	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn bearer_auth<T>(self, token: T) -> RequestBuilder$/;"	P	implementation:RequestBuilder
bench_chunk_static_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn bench_chunk_static_buf(b: &mut Bencher) {$/;"	f	module:tests
bench_parse_incoming	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn bench_parse_incoming(b: &mut Bencher) {$/;"	f	module:tests
bench_parse_short	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn bench_parse_short(b: &mut Bencher) {$/;"	f	module:tests
bench_read_head_short	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn bench_read_head_short(b: &mut ::test::Bencher) {$/;"	f	module:tests
bench_server_encode_headers_preset	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn bench_server_encode_headers_preset(b: &mut Bencher) {$/;"	f	module:tests
bench_server_encode_no_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn bench_server_encode_no_headers(b: &mut Bencher) {$/;"	f	module:tests
bench_write_buf_flatten_buffer_chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn bench_write_buf_flatten_buffer_chunk(b: &mut Bencher) {$/;"	f	module:tests
beta_dl_size	/home/doc/Code/Git/oracle/src/download_distros.rs	/^pub fn beta_dl_size(url: &str, version: &str) -> String {$/;"	f
beta_to_iso	/home/doc/Code/Git/oracle/src/download_distros.rs	/^pub fn beta_to_iso(url: &str, version: &str) -> String {$/;"	f
bind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn bind(addr: &SocketAddr) -> Builder<AddrIncoming> {$/;"	P	implementation:Server
bind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    pub fn bind(addr: &SocketAddr) -> ::Result<Self> {$/;"	P	implementation:AddrIncoming
bit_set	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    bit_set: BitSet,$/;"	m	struct:Selection
bit_shift_right_4	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    pub fn bit_shift_right_4(self) -> u8x32 {$/;"	P	implementation:u8x32
bit_shift_right_4	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    pub fn bit_shift_right_4(self) -> u8x16 {$/;"	P	implementation:u8x16
bitand_assign	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn bitand_assign(&mut self, enabled: bool) {$/;"	P	implementation:KA
block_in	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub fn block_in(&mut self, bytes: usize) {$/;"	P	implementation:AsyncIo
blocked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    blocked: bool,$/;"	m	struct:AsyncIo
blocked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub fn blocked(&self) -> bool {$/;"	P	implementation:AsyncIo
bm_backstop_boundary	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn bm_backstop_boundary() {$/;"	f	module:tests
bm_backstop_underflow_bug	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn bm_backstop_underflow_bug() {$/;"	f	module:tests
bm_find_no_subs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn bm_find_no_subs() {$/;"	f	module:tests
bm_find_subs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn bm_find_subs() {$/;"	f	module:tests
bm_memchr_fallback_indexing_bug	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn bm_memchr_fallback_indexing_bug() {$/;"	f	module:tests
bm_naive_off_by_one_bug	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn bm_naive_off_by_one_bug() {$/;"	f	module:tests
bm_skip_reset_bug	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn bm_skip_reset_bug() {$/;"	f	module:tests
bm_win_gnu_indexing_bug	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn bm_win_gnu_indexing_bug() {$/;"	f	module:tests
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/mod.rs	/^mod body;$/;"	n
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/lib.rs	/^pub mod body;$/;"	n
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    body: Option<BodyLength>,$/;"	m	struct:Encode
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    body: Option<Option<Bytes>>,$/;"	m	struct:PendingRequest
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    body: ReadableChunks<Body>,$/;"	m	struct:Pending
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/mod.rs	/^pub mod body;$/;"	n
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    body: Option<Body>,$/;"	m	struct:Request
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn body(&self) -> Option<&Body> {$/;"	P	implementation:Request
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn body<T: Into<Body>>(mut self, body: T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    body: Decoder,$/;"	m	struct:Response
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    pub fn body(&self) -> &Decoder {$/;"	P	implementation:Response
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    body: (Box<Read + Send>, Option<u64>),$/;"	m	struct:Sender
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^mod body;$/;"	n
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    body: Option<Body>,$/;"	m	struct:Request
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn body(&self) -> Option<&Body> {$/;"	P	implementation:Request
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn body<T: Into<Body>>(mut self, body: T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    body: async_impl::ReadableChunks<WaitBody>,$/;"	m	struct:Response
body_empty_chunks_ignored	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn body_empty_chunks_ignored() {$/;"	f	module:tests
body_length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^mod body_length {$/;"	n
body_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn body_mut(&mut self) -> &mut Option<Body> {$/;"	P	implementation:Request
body_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    pub fn body_mut(&mut self) -> &mut Decoder {$/;"	P	implementation:Response
body_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn body_mut(&mut self) -> &mut Option<Body> {$/;"	P	implementation:Request
body_rx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    body_rx: Option<Bs>,$/;"	m	struct:Dispatcher
body_tx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    body_tx: Option<::body::Sender>,$/;"	m	struct:Dispatcher
body_tx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^    body_tx: SendStream<SendBuf<S::Data>>,$/;"	m	struct:PipeToSendStream
boundary	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    boundary: String,$/;"	m	struct:Form
boundary	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub fn boundary(&self) -> &str {$/;"	P	implementation:Form
bounded_backtracking	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn bounded_backtracking(mut self) -> Self {$/;"	P	implementation:ExecBuilder
box_std	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^mod box_std;$/;"	n
buckets	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    buckets: Vec<Vec<usize>>,$/;"	m	struct:Teddy
buckets	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    buckets: Vec<Vec<usize>>,$/;"	m	struct:Teddy
buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/mod.rs	/^mod buf;$/;"	n
buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    buf: Vec<f64>,$/;"	m	struct:Estimate
buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    buf: BytesMut,$/;"	m	struct:Gzip
buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    buf: io::Cursor<Vec<u8>>,$/;"	m	struct:Tunnel
buf_cap	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    buf_cap: usize,$/;"	m	struct:Estimate
buffer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/date.rs	/^    fn buffer(&self) -> &[u8] {$/;"	P	implementation:CachedDate
buffer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub fn buffer<BB: Buf + Into<B>>(&mut self, buf: BB) {$/;"	f
buffer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub(super) fn buffer<BB: Buf + Into<B>>(&mut self, mut buf: BB) {$/;"	f
buffered_once	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    buffered_once: bool,$/;"	m	struct:Sender
bufs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    bufs: VecDeque<T>,$/;"	m	struct:BufDeque
build	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pub fn build<C, B>(&self, connector: C) -> Client<C, B>$/;"	P	implementation:Builder
build	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn build(self) -> Result<Exec, Error> {$/;"	P	implementation:ExecBuilder
build	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn build(self) -> ::Result<Client> {$/;"	P	implementation:ClientBuilder
build	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn build(self) -> ::Result<Request> {$/;"	P	implementation:RequestBuilder
build	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn build(self) -> ::Result<Client> {$/;"	P	implementation:ClientBuilder
build	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn build(self) -> ::Result<Request> {$/;"	P	implementation:RequestBuilder
build_http	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pub fn build_http<B>(&self) -> Client<HttpConnector, B>$/;"	P	implementation:Builder
builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    builder: Builder,$/;"	m	struct:Handshake
builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pub fn builder() -> Builder {$/;"	P	implementation:Client
builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn builder(incoming: I) -> Builder<I> {$/;"	P	implementation:Server
builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn builder() -> ClientBuilder {$/;"	P	implementation:Client
builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn builder() -> ClientBuilder {$/;"	P	implementation:Client
busy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn busy(&mut self) {$/;"	P	implementation:KA
busy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn busy(&mut self) {$/;"	P	implementation:State
by_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn by_ref<'r>(&'r mut self) -> ReplacerRef<'r, Self> {$/;"	P	interface:Replacer
by_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn by_ref<'r>(&'r mut self) -> ReplacerRef<'r, Self> {$/;"	P	interface:Replacer
byte	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^macro_rules! byte ($/;"	M
byte	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn byte(b: u8) -> Self { Byte(b as u16) }$/;"	P	implementation:Byte
byte	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    byte: Option<u8>,$/;"	m	struct:InputAt
byte	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    pub fn byte(&self) -> Option<u8> {$/;"	P	implementation:InputAt
byte_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn byte_at(&self, i: u32) -> u8 {$/;"	P	implementation:Url
byte_class	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn byte_class(&self, b: Byte) -> usize {$/;"	P	implementation:Fsm
byte_classes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    byte_classes: ByteClassSet,$/;"	m	struct:Compiler
byte_classes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn byte_classes(&self) -> Vec<u8> {$/;"	P	implementation:ByteClassSet
byte_classes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn byte_classes() {$/;"	f	module:tests
byte_classes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub byte_classes: Vec<u8>,$/;"	m	struct:Program
byte_serialize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^pub fn byte_serialize(input: &[u8]) -> ByteSerialize {$/;"	f
byte_serialized_unchanged	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^fn byte_serialized_unchanged(byte: u8) -> bool {$/;"	f
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    bytes: Bytes,$/;"	m	struct:Chunk
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn bytes(&self) -> &[u8] {$/;"	P	implementation:Chunk
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/buf.rs	/^    fn bytes(&self) -> &[u8] {$/;"	P	implementation:StaticBuf
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/date.rs	/^    bytes: [u8; DATE_VALUE_LENGTH],$/;"	m	struct:CachedDate
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    bytes: [u8; CHUNK_SIZE_MAX_BYTES + 2],$/;"	m	struct:ChunkSize
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn bytes(&self) -> &[u8] {$/;"	P	implementation:ChunkSize
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn bytes(&self) -> &[u8] {$/;"	f
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    bytes: T,$/;"	m	struct:Cursor
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn bytes(&self) -> &[u8] {$/;"	P	implementation:BufDeque
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn bytes(&self) -> &[u8] {$/;"	P	implementation:Cursor
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn bytes(&self) -> &[u8] {$/;"	P	implementation:WriteBuf
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn bytes(&self) -> &[u8] {$/;"	P	implementation:WriteBufAuto
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^    fn bytes(&self) -> &[u8] {$/;"	P	implementation:SendBuf
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    pub fn bytes(mut self, yes: bool) -> Self {$/;"	P	implementation:Compiler
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    bytes: bool,$/;"	m	struct:ExecBuilder
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    bytes: bool,$/;"	m	struct:Parsed
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn bytes(mut self, yes: bool) -> Self {$/;"	P	implementation:ExecBuilder
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^pub mod bytes {$/;"	n
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    fn bytes(&self) -> &[u8] {$/;"	P	implementation:Chunk
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub fn bytes<T>(value: T) -> Part$/;"	P	implementation:Part
bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    bytes: &'a [u8],$/;"	m	struct:ByteSerialize
bytes_called	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    bytes_called: Cell<bool>,$/;"	m	struct:WriteBufAuto
bytes_until_block	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    bytes_until_block: usize,$/;"	m	struct:AsyncIo
bytes_vec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/buf.rs	/^    fn bytes_vec<'t>(&'t self, dst: &mut [&'t IoVec]) -> usize {$/;"	P	implementation:StaticBuf
bytes_vec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn bytes_vec<'t>(&'t self, dst: &mut [&'t IoVec]) -> usize {$/;"	f
bytes_vec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn bytes_vec<'t>(&'t self, dst: &mut [&'t IoVec]) -> usize {$/;"	P	implementation:BufDeque
bytes_vec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn bytes_vec<'t>(&'t self, dst: &mut [&'t IoVec]) -> usize {$/;"	P	implementation:WriteBuf
bytes_vec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn bytes_vec<'t>(&'t self, dst: &mut [&'t IoVec]) -> usize {$/;"	P	implementation:WriteBufAuto
bytes_vec_called	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    bytes_vec_called: Cell<bool>,$/;"	m	struct:WriteBufAuto
c	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn c<T: Poolable>(key: Key) -> Connecting<T> {$/;"	f	module:tests
c	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    c: &'a mut Compiler,$/;"	m	struct:CompileClass
c	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c(&mut self, expr: &Hir) -> Result {$/;"	P	implementation:Compiler
c	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^    macro_rules! c {$/;"	M	module:tests
c	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    c: Char,$/;"	m	struct:InputAt
c	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub c: char,$/;"	m	struct:InstChar
c0_control_or_space	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^fn c0_control_or_space(ch: char) -> bool {$/;"	f
c_alternate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_alternate(&mut self, exprs: &[Hir]) -> Result {$/;"	P	implementation:Compiler
c_byte	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_byte(&mut self, b: u8) -> Result {$/;"	P	implementation:Compiler
c_capture	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_capture(&mut self, first_slot: usize, expr: &Hir) -> Result {$/;"	P	implementation:Compiler
c_char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_char(&mut self, c: char) -> Result {$/;"	P	implementation:Compiler
c_class	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_class(&mut self, ranges: &[hir::ClassUnicodeRange]) -> Result {$/;"	P	implementation:Compiler
c_class_bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_class_bytes(&mut self, ranges: &[hir::ClassBytesRange]) -> Result {$/;"	P	implementation:Compiler
c_concat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_concat<'a, I>(&mut self, exprs: I) -> Result$/;"	P	implementation:Compiler
c_dotstar	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_dotstar(&mut self) -> Result {$/;"	P	implementation:Compiler
c_empty_look	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_empty_look(&mut self, look: EmptyLook) -> Result {$/;"	P	implementation:Compiler
c_repeat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_repeat(&mut self, rep: &hir::Repetition) -> Result {$/;"	P	implementation:Compiler
c_repeat_one_or_more	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_repeat_one_or_more(&mut self, expr: &Hir, greedy: bool) -> Result {$/;"	P	implementation:Compiler
c_repeat_range	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_repeat_range($/;"	P	implementation:Compiler
c_repeat_range_min_or_more	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_repeat_range_min_or_more($/;"	P	implementation:Compiler
c_repeat_zero_or_more	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_repeat_zero_or_more(&mut self, expr: &Hir, greedy: bool) -> Result {$/;"	P	implementation:Compiler
c_repeat_zero_or_one	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_repeat_zero_or_one(&mut self, expr: &Hir, greedy: bool) -> Result {$/;"	P	implementation:Compiler
c_utf8_seq	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_utf8_seq(&mut self, seq: &Utf8Sequence) -> Result {$/;"	P	implementation:CompileClass
c_utf8_seq_	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn c_utf8_seq_<'r, I>(&mut self, seq: I) -> Result$/;"	P	implementation:CompileClass
cache	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    cache: &'a mut CacheInner,$/;"	m	struct:Fsm
cache	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    cache: &'c ProgramCache,$/;"	m	struct:ExecNoSync
cache	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    cache: CachedThreadLocal<ProgramCache>,$/;"	m	struct:Exec
cache_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^pub fn cache_dir() -> Option<PathBuf> {$/;"	f
cache_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^pub fn cache_dir()      -> Option<PathBuf> { env::var_os("XDG_CACHE_HOME") .and_then(is_absolute/;"	f
cache_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/mac.rs	/^pub fn cache_dir()      -> Option<PathBuf> { home_dir().map(|h| h.join("Library\/Caches")) }$/;"	f
cache_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^pub fn cache_dir()      -> Option<PathBuf> { env::var_os("XDG_CACHE_HOME") .and_then(is_absolute/;"	f
cache_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^pub fn cache_dir()      -> Option<PathBuf> { data_local_dir() }$/;"	f
cached_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    cached_headers: Option<HeaderMap>,$/;"	m	struct:State
cached_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    cached_headers: &'a mut Option<HeaderMap>,$/;"	m	struct:ParseContext
cached_state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn cached_state($/;"	P	implementation:Fsm
cached_state_key	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn cached_state_key($/;"	P	implementation:Fsm
call	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    fn call(&mut self, req: Request<Self::ReqBody>) -> Self::Future {$/;"	f
call	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    fn call(&mut self, req: Request<Self::ReqBody>) -> Self::Future;$/;"	P	interface:Service
call	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn call(self, v: SyntaxViolation) {$/;"	P	implementation:ViolationFn
call_if	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn call_if<F>(self, v: SyntaxViolation, test: F)$/;"	P	implementation:ViolationFn
callback	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    callback: Option<::client::dispatch::Callback<Request<B>, Response<Body>>>,$/;"	m	struct:Client
can_buffer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn can_buffer(&self) -> bool {$/;"	f
can_buffer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub fn can_buffer(&self) -> bool {$/;"	f
can_buffer_body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn can_buffer_body(&self) -> bool {$/;"	f
can_chunked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn can_chunked(method: &Option<Method>, status: StatusCode) -> bool {$/;"	P	implementation:Server
can_exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^pub fn can_exec(insts: &Program) -> bool {$/;"	f
can_have_body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn can_have_body(method: &Option<Method>, status: StatusCode) -> bool {$/;"	P	implementation:Server
can_read_body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn can_read_body(&self) -> bool {$/;"	f
can_read_head	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn can_read_head(&self) -> bool {$/;"	f
can_send	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    fn can_send(&mut self) -> bool {$/;"	P	implementation:Sender
can_share	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn can_share(&self) -> bool {$/;"	f
can_share	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^        fn can_share(&self) -> bool {$/;"	P	implementation:tests::CanClose
can_share	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^        fn can_share(&self) -> bool {$/;"	P	implementation:tests::Uniq
can_share	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn can_share(&self) -> bool;$/;"	P	interface:Poolable
can_write_body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn can_write_body(&self) -> bool {$/;"	f
can_write_head	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn can_write_head(&self) -> bool {$/;"	f
cannot_be_a_base	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn cannot_be_a_base(&self) -> bool {$/;"	P	implementation:Url
canon	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^fn canon(unix: &str) -> String {$/;"	f
canonical	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    fn canonical(&self) -> Tree {$/;"	P	implementation:Tree
cap	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^    cap: Ref<'a>,$/;"	m	struct:CaptureRef
capacity	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^    pub fn capacity(&self) -> usize {$/;"	P	implementation:SparseSet
caps	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    caps: Vec<Slot>,$/;"	m	struct:Threads
caps	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    fn caps(&mut self, pc: usize) -> &mut [Option<usize>] {$/;"	P	implementation:Threads
caps	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    caps: &'c Captures<'t>,$/;"	m	struct:SubCaptureMatches
caps	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    caps: &'c Captures<'t>,$/;"	m	struct:SubCaptureMatches
capture_locations	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn capture_locations(&self) -> CaptureLocations {$/;"	P	implementation:Regex
capture_locations	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn capture_locations(&self) -> CaptureLocations {$/;"	P	implementation:Regex
capture_name_idx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    capture_name_idx: HashMap<String, usize>,$/;"	m	struct:Compiler
capture_name_idx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn capture_name_idx(&self) -> &Arc<HashMap<String, usize>> {$/;"	P	implementation:Exec
capture_name_idx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn capture_name_idx(&self) -> &Arc<HashMap<String, usize>> {$/;"	P	implementation:ExecNoSync
capture_name_idx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn capture_name_idx(&self) -> &Arc<HashMap<String, usize>> {$/;"	P	implementation:ExecNoSyncStr
capture_name_idx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub capture_name_idx: Arc<HashMap<String, usize>>,$/;"	m	struct:Program
capture_names	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn capture_names(&self) -> &[Option<String>] {$/;"	P	implementation:Exec
capture_names	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn capture_names(&self) -> CaptureNames {$/;"	P	implementation:Regex
capture_names	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn capture_names(&self) -> CaptureNames {$/;"	P	implementation:Regex
captures	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub captures: Vec<Option<String>>,$/;"	m	struct:Program
captures	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn captures<'t>(&self, text: &'t [u8]) -> Option<Captures<'t>> {$/;"	P	implementation:Regex
captures	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn captures<'t>(&self, text: &'t str) -> Option<Captures<'t>> {$/;"	P	implementation:Regex
captures_iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn captures_iter<'r, 't>($/;"	P	implementation:Regex
captures_iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    fn captures_iter($/;"	P	interface:RegularExpression
captures_iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn captures_iter<'r, 't>($/;"	P	implementation:Regex
captures_len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn captures_len(&self) -> usize {$/;"	P	implementation:Regex
captures_len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn captures_len(&self) -> usize {$/;"	P	implementation:Regex
captures_nfa	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn captures_nfa($/;"	P	implementation:ExecNoSync
captures_nfa_type	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn captures_nfa_type($/;"	P	implementation:ExecNoSync
captures_nfa_with_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn captures_nfa_with_match($/;"	P	implementation:ExecNoSync
captures_read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn captures_read<'t>($/;"	P	implementation:Regex
captures_read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn captures_read<'t>($/;"	P	implementation:Regex
captures_read_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn captures_read_at($/;"	P	implementation:ExecNoSync
captures_read_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn captures_read_at($/;"	P	implementation:ExecNoSyncStr
captures_read_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn captures_read_at<'t>($/;"	P	implementation:Regex
captures_read_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    fn captures_read_at($/;"	P	interface:RegularExpression
captures_read_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn captures_read_at<'t>($/;"	P	implementation:Regex
case_insensitive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_builder.rs	/^    pub case_insensitive: bool,$/;"	m	struct:RegexOptions
cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    pub fn cause(&self) -> &Fail {$/;"	P	implementation:Error
cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    fn cause(&self) -> Option<&Fail> {$/;"	P	implementation:Box
cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    fn cause(&self) -> Option<&Fail> {$/;"	P	interface:Fail
cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    pub fn cause(&self) -> &Fail {$/;"	P	implementation:Error
cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    cause: Option<Cause>,$/;"	m	struct:ErrorImpl
cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    fn cause(&self) -> Option<&StdError> {$/;"	P	implementation:Error
cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/error.rs	/^    fn cause(&self) -> Option<&::std::error::Error> {$/;"	P	implementation:Error
cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^            fn cause(&self) -> Option<&StdError> {$/;"	P	implementation:tests::test_cause_chain::Chain
cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn cause(&self) -> Option<&StdError> {$/;"	P	implementation:Error
cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn cause(&self) -> Option<&error::Error> {$/;"	P	implementation:Error
cause2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub fn cause2(&self) -> Option<&(StdError + 'static + Sync + Send)> {$/;"	P	implementation:Error
causes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    pub fn causes(&self) -> Causes {$/;"	P	implementation:Error
causes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    fn causes(&self) -> Causes$/;"	P	interface:Fail
causes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    pub fn causes(&self) -> Causes {$/;"	P	implementation:Fail
causes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    pub fn causes(&self) -> Causes {$/;"	P	implementation:Error
cert	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/tls.rs	/^    pub(crate) fn cert(self) -> native_tls::Certificate {$/;"	P	implementation:Certificate
certs_verification	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    certs_verification: bool,$/;"	m	struct:Config
cfmakeraw	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/attr.rs	/^        pub fn cfmakeraw(termptr: *mut Termios);$/;"	f	function:raw_terminal_attr
channel	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    pub fn channel() -> (Sender, Body) {$/;"	P	implementation:Body
channel	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^pub fn channel<T, U>() -> (Sender<T, U>, Receiver<T, U>) {$/;"	f
channel	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^pub fn channel() -> (Signal, Watch) {$/;"	f
channel	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub(crate) fn channel() -> (Duplex, DuplexHandle) {$/;"	P	implementation:Duplex
char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    pub fn char(&self) -> Char {$/;"	P	implementation:InputAt
char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^impl PartialEq<Char> for char {$/;"	c
char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^impl PartialOrd<Char> for char {$/;"	c
char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^impl Pattern for char {$/;"	c
char_len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    char_len: usize,$/;"	m	struct:FreqyPacked
char_len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn char_len(&self) -> usize {$/;"	P	implementation:FreqyPacked
char_len_lossy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^fn char_len_lossy(bytes: &[u8]) -> usize {$/;"	f
chars	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    chars: str::Chars<'i>,$/;"	m	struct:Input
check	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/date.rs	/^    fn check(&mut self) {$/;"	P	implementation:CachedDate
check	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    pub(crate) fn check($/;"	P	implementation:RedirectPolicy
check_invariants	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn check_invariants(&self) -> Result<(), String> {$/;"	P	implementation:Url
check_loop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn check_loop<P: AsRef<Path>>(&self, child: P) -> Result<()> {$/;"	P	implementation:IntoIter
check_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn check_match(&self, haystack: &[u8], window_end: usize) -> bool {$/;"	P	implementation:BoyerMooreSearch
check_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn check_size(&self) -> result::Result<(), Error> {$/;"	P	implementation:Compiler
check_url_code_point	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn check_url_code_point(&self, c: char, input: &Input) {$/;"	P	implementation:Parser
checked_new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^        pub(crate) fn checked_new(len: u64) -> Result<Self, ::error::Parse> {$/;"	P	implementation:body_length::DecodedLength
checkout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    pub fn checkout(&self, key: Key) -> Checkout<T> {$/;"	P	implementation:Pool
checkout_win_allows_connect_future_to_be_pooled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/tests.rs	/^fn checkout_win_allows_connect_future_to_be_pooled() {$/;"	f
child	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn child<T: Predicate>(self, other: T) -> Child<Self, T>$/;"	P	interface:Predicate
children	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn children(&self) -> Children<'a> {$/;"	P	implementation:Node
children	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    pub fn children(&self) -> Selection<'a> {$/;"	P	implementation:Selection
children_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    fn children_mut(&mut self) -> &mut Vec<Tree> {$/;"	P	implementation:Tree
choose_match_type	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn choose_match_type(&self, hint: Option<MatchType>) -> MatchType {$/;"	P	implementation:ExecReadOnly
chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/mod.rs	/^mod chunk;$/;"	n
chunked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    pub fn chunked() -> Decoder {$/;"	P	implementation:Decoder
chunked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn chunked() {$/;"	f	module:tests
chunked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    pub fn chunked() -> Encoder {$/;"	P	implementation:Encoder
clean_waiters	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn clean_waiters(&mut self, key: &Key) {$/;"	P	implementation:PoolInner
clear	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^    fn clear(&mut self) {$/;"	P	implementation:Bounded
clear	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn clear(&mut self) {$/;"	P	implementation:SuffixCache
clear	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn clear(&mut self) {$/;"	P	implementation:StateMap
clear	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn clear(&mut self) {$/;"	P	implementation:Transitions
clear	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^    pub fn clear(&mut self) {$/;"	P	implementation:SparseSet
clear	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/lib.rs	/^pub mod clear;$/;"	n
clear	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    pub fn clear(&mut self) -> &mut Self {$/;"	P	implementation:Serializer
clear	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/path_segments.rs	/^    pub fn clear(&mut self) -> &mut Self {$/;"	P	implementation:PathSegmentsMut
clear_cache	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn clear_cache(&mut self) -> bool {$/;"	P	implementation:Fsm
clear_cache_and_save	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn clear_cache_and_save($/;"	P	implementation:Fsm
clear_expired	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn clear_expired(&mut self) {$/;"	P	implementation:PoolInner
clear_term	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn clear_term(&self, term: &Term) -> io::Result<()> {$/;"	P	implementation:ProgressDrawState
client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/lib.rs	/^pub mod client;$/;"	n
client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^mod client;$/;"	n
client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    client: Arc<ClientRef>,$/;"	m	struct:PendingRequest
client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/mod.rs	/^pub mod client;$/;"	n
client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    client: Client,$/;"	m	struct:RequestBuilder
client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^mod client;$/;"	n
client	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    client: Client,$/;"	m	struct:RequestBuilder
client_config	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    client_config: Config,$/;"	m	struct:Builder
client_error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^pub(crate) fn client_error(url: Url, status: StatusCode) -> Error {$/;"	f
client_happy_eyeballs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    fn client_happy_eyeballs() {$/;"	f	module:tests
client_read_bytes_before_writing_request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn client_read_bytes_before_writing_request() {$/;"	f	module:tests
clist	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    clist: Threads,$/;"	m	struct:Cache
clone	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Http2SendRequest
clone	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    fn clone(&self) -> Extra {$/;"	P	implementation:Extra
clone	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:ExtraChain
clone	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    pub(super) fn clone(&self) -> Connected {$/;"	P	implementation:Connected
clone	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:UnboundedSender
clone	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn clone(&self) -> Client<C, B> {$/;"	P	implementation:Client
clone	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn clone(&self) -> Pool<T> {$/;"	P	implementation:Pool
clone	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn clone(&self) -> Exec {$/;"	P	implementation:Exec
clone	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn clone(&self) -> DirEntry {$/;"	P	implementation:DirEntry
clone_box	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    fn clone_box(&self) -> Box<ExtraInner> {$/;"	f
clone_box	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    fn clone_box(&self) -> Box<ExtraInner>;$/;"	P	interface:ExtraInner
close	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn close(&mut self) {$/;"	P	implementation:AsyncIo
close	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn close(&mut self) {$/;"	P	implementation:State
close	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn close(&mut self) {$/;"	f
close	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn close(&mut self) {$/;"	P	implementation:DirList
close_delimited	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    pub fn close_delimited() -> Encoder {$/;"	P	implementation:Encoder
close_read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn close_read(&mut self) {$/;"	P	implementation:State
close_read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn close_read(&mut self) {$/;"	f
close_write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn close_write(&mut self) {$/;"	P	implementation:State
close_write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn close_write(&mut self) {$/;"	f
closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^        closed: bool,$/;"	m	struct:tests::CanClose
cmp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn cmp(&self, other: &Self) -> cmp::Ordering {$/;"	P	implementation:Url
col	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/size.rs	/^    col: c_ushort,$/;"	m	struct:TermSize
color	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/lib.rs	/^pub mod color;$/;"	n
common	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/lib.rs	/^mod common;$/;"	n
compat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    pub fn compat(self) -> Compat<Error> {$/;"	P	implementation:Error
compat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    fn compat(self) -> Compat<Self>$/;"	P	interface:Fail
compat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^mod compat;$/;"	n
compat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/result_ext.rs	/^    fn compat(self) -> Result<T, Compat<E>> {$/;"	f
compat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/result_ext.rs	/^    fn compat(self) -> Result<T, Compat<E>>;$/;"	P	interface:ResultExt
compat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    pub fn compat(self) -> Compat<Error> {$/;"	P	implementation:Error
compile	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn compile(mut self) -> Result {$/;"	P	implementation:CompileClass
compile	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    pub fn compile($/;"	P	implementation:Compiler
compile	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod compile;$/;"	n
compile_finish	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn compile_finish(mut self) -> result::Result<Program, Error> {$/;"	P	implementation:Compiler
compile_many	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn compile_many($/;"	P	implementation:Compiler
compile_md2_shift	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn compile_md2_shift(pattern: &[u8]) -> usize {$/;"	P	implementation:BoyerMooreSearch
compile_one	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn compile_one(mut self, expr: &Hir) -> result::Result<Program, Error> {$/;"	P	implementation:Compiler
compile_skip_table	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn compile_skip_table(pattern: &[u8]) -> Vec<usize> {$/;"	P	implementation:BoyerMooreSearch
compiled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    compiled: Program,$/;"	m	struct:Compiler
compiled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    compiled: StateMap,$/;"	m	struct:CacheInner
complete	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    complete: bool,$/;"	m	struct:LiteralSearcher
complete	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    complete: bool,$/;"	m	struct:SingleByteSet
complete	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn complete(&self) -> bool {$/;"	P	implementation:LiteralSearcher
compute_length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub(crate) fn compute_length(&mut self) -> Option<u64> {$/;"	P	implementation:Form
concat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    concat: Concat2<Decoder>,$/;"	m	struct:Json
config	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    config: Config,$/;"	m	struct:Client
config	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    config: Config,$/;"	m	struct:ClientBuilder
config_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^pub fn config_dir() -> Option<PathBuf> {$/;"	f
config_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^pub fn config_dir()     -> Option<PathBuf> { env::var_os("XDG_CONFIG_HOME").and_then(is_absolute/;"	f
config_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/mac.rs	/^pub fn config_dir()     -> Option<PathBuf> { home_dir().map(|h| h.join("Library\/Preferences")) /;"	f
config_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^pub fn config_dir()     -> Option<PathBuf> { env::var_os("XDG_CONFIG_HOME").and_then(is_absolute/;"	f
config_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^pub fn config_dir()     -> Option<PathBuf> { data_dir() }$/;"	f
conn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^pub mod conn;$/;"	n
conn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    conn: Conn<I, Bs::Data, T>,$/;"	m	struct:Dispatcher
conn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^mod conn;$/;"	n
conn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    conn: Connection<T, SendBuf<B::Data>>,$/;"	m	struct:Serving
conn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^pub mod conn;$/;"	n
conn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    conn: Option<T>,$/;"	m	struct:Tunnel
conn_builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    conn_builder: conn::Builder,$/;"	m	struct:Builder
conn_builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    conn_builder: conn::Builder,$/;"	m	struct:Client
conn_info	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    conn_info: Connected,$/;"	m	struct:PoolClient
conn_reset_after_write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/tests.rs	/^fn conn_reset_after_write() {$/;"	f
connect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    fn connect(&self, dst: Destination) -> Self::Future {$/;"	f
connect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^fn connect(addr: &SocketAddr, local_addr: &Option<IpAddr>, handle: &Option<Handle>, reuse_addres/;"	f
connect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    fn connect(&self, dst: Destination) -> Self::Future;$/;"	P	interface:Connect
connect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^pub mod connect;$/;"	n
connect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn connect(&self, dst: Destination) -> Self::Future {$/;"	P	implementation:MockConnector
connect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    fn connect(&self, dst: Destination) -> Self::Future {$/;"	P	implementation:Connector
connect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^mod connect;$/;"	n
connect_async	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^    fn connect_async<S>(&self, domain: &str, stream: S) -> ConnectAsync<S>$/;"	P	implementation:TlsConnector
connect_async	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^    fn connect_async<S>(&self, domain: &str, stream: S) -> ConnectAsync<S>$/;"	P	interface:TlsConnectorExt
connect_async	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^mod connect_async;$/;"	n
connect_to	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn connect_to(&self, uri: Uri, pool_key: PoolKey)$/;"	f
connected	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn connected(&mut self, key: &Key) {$/;"	P	implementation:PoolInner
connecting	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    connecting: HashSet<Key>,$/;"	m	struct:PoolInner
connecting	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    pub(super) fn connecting(&self, key: &Key, ver: Ver) -> Option<Connecting<T>> {$/;"	P	implementation:Pool
connection_close	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/headers.rs	/^pub fn connection_close(value: &HeaderValue) -> bool {$/;"	f
connection_for	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn connection_for(&self, uri: Uri, pool_key: PoolKey)$/;"	f
connection_has	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/headers.rs	/^fn connection_has(value: &HeaderValue, needle: &str) -> bool {$/;"	f
connection_keep_alive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/headers.rs	/^pub fn connection_keep_alive(value: &HeaderValue) -> bool {$/;"	f
connector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    connector: Arc<C>,$/;"	m	struct:Client
consume_leading_lines	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub fn consume_leading_lines(&mut self) {$/;"	f
contains	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^    pub fn contains(&self, value: usize) -> bool {$/;"	P	implementation:SparseSet
contains	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fn contains(&self, ch: u8) -> bool {$/;"	P	implementation:AttrCharEncodeSet
content_length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn content_length(&self) -> Option<u64> {$/;"	P	implementation:Body
content_length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/payload.rs	/^    fn content_length(&self) -> Option<u64> {$/;"	P	implementation:Box
content_length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/payload.rs	/^    fn content_length(&self) -> Option<u64> {$/;"	P	interface:Payload
content_length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    pub(crate) fn content_length(&self) -> Option<u64> {$/;"	P	implementation:Body
content_length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    pub(crate) fn content_length(&self) -> Option<u64> {$/;"	P	implementation:Decoder
content_length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    content_length: Option<u64>,$/;"	m	struct:Response
content_length_parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/headers.rs	/^pub fn content_length_parse(value: &HeaderValue) -> Option<u64> {$/;"	f
content_length_parse_all	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/headers.rs	/^pub fn content_length_parse_all(headers: &HeaderMap) -> Option<u64> {$/;"	f
content_length_parse_all_values	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/headers.rs	/^pub fn content_length_parse_all_values(values: ValueIter<HeaderValue>) -> Option<u64> {$/;"	f
contents_first	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    contents_first: bool,$/;"	m	struct:WalkDirOptions
contents_first	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn contents_first(mut self, yes: bool) -> Self {$/;"	P	implementation:WalkDir
context	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    pub fn context<D: Display + Send + Sync + 'static>(self, context: D) -> Context<D> {$/;"	P	implementation:Error
context	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    fn context<D>(self, context: D) -> Context<D>$/;"	P	interface:Fail
context	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^mod context;$/;"	n
context	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/result_ext.rs	/^    fn context<D>(self, context: D) -> Result<T, Context<D>>$/;"	P	interface:ResultExt
context	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/result_ext.rs	/^    fn context<D>(self, context: D) -> Result<T, Context<D>>$/;"	f
context	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    pub fn context<D: Display + Send + Sync + 'static>(self, context: D) -> Context<D> {$/;"	P	implementation:Error
context	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub context: Context,$/;"	m	struct:Parser
continue_past_first_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn continue_past_first_match(&self) -> bool {$/;"	P	implementation:Fsm
copy_to	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    pub fn copy_to<W: ?Sized>(&mut self, w: &mut W) -> ::Result<u64>$/;"	P	implementation:Response
count_matching	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn count_matching<F: Fn(char) -> bool>(&self, f: F) -> (u32, Self) {$/;"	P	implementation:Input
create_in	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    fn create_in<P: AsRef<Path>>(&self, parent: P) -> io::Result<()> {$/;"	P	implementation:Tree
csi	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/macros.rs	/^macro_rules! csi {$/;"	M
current	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    current: Option<ConnectFuture>,$/;"	m	struct:ConnectingTcpRemote
current	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    current: Node<'a>,$/;"	m	struct:Descendants
current_tick_char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn current_tick_char(&self) -> char {$/;"	P	implementation:ProgressState
cursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/lib.rs	/^pub mod cursor;$/;"	n
cursor_pos	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^    fn cursor_pos(&mut self) -> io::Result<(u16, u16)> {$/;"	P	implementation:W
cursor_pos	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^    fn cursor_pos(&mut self) -> io::Result<(u16, u16)>;$/;"	P	interface:DetectCursorPos
custom	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    pub fn custom<F>(fun: F) -> Proxy$/;"	P	implementation:Proxy
custom	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    pub fn custom<T>(policy: T) -> RedirectPolicy$/;"	P	implementation:RedirectPolicy
custom_encoding	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    custom_encoding: Option<SilentDebug<Box<FnMut(&str) -> Cow<[u8]>>>>,$/;"	m	struct:Serializer
custom_encoding_override	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    pub fn custom_encoding_override<F>(&mut self, encode: F) -> &mut Self$/;"	P	implementation:Serializer
cvt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/redox/mod.rs	/^fn cvt(result: Result<usize, syscall::Error>) -> io::Result<usize> {$/;"	f
cvt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/mod.rs	/^fn cvt<T: IsMinusOne>(t: T) -> io::Result<T> {$/;"	f
danger_accept_invalid_certs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn danger_accept_invalid_certs(mut self, accept_invalid_certs: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
danger_accept_invalid_certs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn danger_accept_invalid_certs(self, accept_invalid_certs: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
danger_accept_invalid_hostnames	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn danger_accept_invalid_hostnames(mut self, accept_invalid_hostname: bool) -> ClientBui/;"	P	implementation:ClientBuilder
danger_accept_invalid_hostnames	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn danger_accept_invalid_hostnames(self, accept_invalid_hostname: bool) -> ClientBuilder/;"	P	implementation:ClientBuilder
danger_full_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    pub(super) fn danger_full_buf<B>(self, msg: B, dst: &mut WriteBuf<EncodedBuf<B::Buf>>)$/;"	P	implementation:Encoder
danger_len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^        pub(crate) fn danger_len(self) -> u64 {$/;"	P	implementation:body_length::DecodedLength
data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    data: *const FailData,$/;"	m	struct:TraitObject
data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    data: *const FailData,$/;"	m	struct:TraitObject
data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    data: &'a [u8],$/;"	m	struct:InstPtrs
data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    data: Arc<[u8]>,$/;"	m	struct:State
data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub data: Data,$/;"	m	struct:Raw
data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn data(&self) -> &'a Data {$/;"	P	implementation:Node
data_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^pub fn data_dir() -> Option<PathBuf> {$/;"	f
data_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^pub fn data_dir()       -> Option<PathBuf> { env::var_os("XDG_DATA_HOME")  .and_then(is_absolute/;"	f
data_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/mac.rs	/^pub fn data_dir()       -> Option<PathBuf> { home_dir().map(|h| h.join("Library\/Application Sup/;"	f
data_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^pub fn data_dir()       -> Option<PathBuf> { env::var_os("XDG_DATA_HOME")  .and_then(is_absolute/;"	f
data_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^pub fn data_dir()       -> Option<PathBuf> { known_folder(&knownfolders::FOLDERID_RoamingAppData/;"	f
data_done	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^    data_done: bool,$/;"	m	struct:PipeToSendStream
data_local_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^pub fn data_local_dir() -> Option<PathBuf> {$/;"	f
data_local_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^pub fn data_local_dir() -> Option<PathBuf> { data_dir().clone() }$/;"	f
data_local_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/mac.rs	/^pub fn data_local_dir() -> Option<PathBuf> { data_dir() }$/;"	f
data_local_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^pub fn data_local_dir() -> Option<PathBuf> { data_dir().clone() }$/;"	f
data_local_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^pub fn data_local_dir() -> Option<PathBuf> { known_folder(&knownfolders::FOLDERID_LocalAppData) /;"	f
date	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^pub(super) mod date;$/;"	n
dd	/home/doc/Code/Git/oracle/src/work.rs	/^pub fn dd(s: String) -> std::process::ExitStatus {$/;"	f	function:neofetch
decode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    pub fn decode<R: MemRead>(&mut self, body: &mut R) -> Poll<Bytes, io::Error> {$/;"	P	implementation:Decoder
decode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    decode: DecodedLength,$/;"	m	struct:ParsedMessage
decode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^mod decode;$/;"	n
decode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^    pub fn decode<'a>(&self, input: Cow<'a, [u8]>) -> Cow<'a, str> {$/;"	P	implementation:EncodingOverride
decode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^fn decode(input: &[u8], encoding: EncodingOverride) -> Cow<str> {$/;"	f
decode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn decode<D: rustc_serialize::Decoder>(decoder: &mut D) -> Result<Url, D::Error> {$/;"	P	implementation:Url
decode_last_utf8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^pub fn decode_last_utf8(src: &[u8]) -> Option<(char, usize)> {$/;"	f
decode_utf8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^pub fn decode_utf8(src: &[u8]) -> Option<(char, usize)> {$/;"	f
decode_utf8_lossy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^pub fn decode_utf8_lossy(input: Cow<[u8]>) -> Cow<str> {$/;"	f
decoder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn decoder(inc: &MessageHead<StatusCode>, method: &mut Option<Method>) -> Result<Option<(Dec/;"	P	implementation:Client
decoder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/mod.rs	/^pub mod decoder;$/;"	n
dedup	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    fn dedup(&self) -> Tree {$/;"	P	implementation:Tree
default	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn default() -> Body {$/;"	P	implementation:Body
default	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn default() -> Chunk {$/;"	P	implementation:Chunk
default	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn default() -> Client<HttpConnector, Body> {$/;"	P	implementation:Client
default	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:Builder
default	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn default() -> KA {$/;"	P	implementation:KA
default	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn default() -> ReadStrategy {$/;"	P	implementation:ReadStrategy
default	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_builder.rs	/^    fn default() -> Self {$/;"	P	implementation:RegexOptions
default	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    fn default() -> Timeout {$/;"	P	implementation:Timeout
default	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    fn default() -> RedirectPolicy {$/;"	P	implementation:RedirectPolicy
default	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^    fn default() -> Goto {$/;"	P	implementation:Goto
default_bar	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn default_bar() -> ProgressStyle {$/;"	P	implementation:ProgressStyle
default_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn default_headers(mut self, headers: HeaderMap) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
default_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn default_headers(self, headers: header::HeaderMap) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
default_port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^pub fn default_port(scheme: &str) -> Option<u16> {$/;"	f
default_spinner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn default_spinner() -> ProgressStyle {$/;"	P	implementation:ProgressStyle
deferred_dirs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    deferred_dirs: Vec<DirEntry>,$/;"	m	struct:IntoIter
define_builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_builder.rs	/^macro_rules! define_builder {$/;"	M
define_encode_set	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^macro_rules! define_encode_set {$/;"	M
define_set	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_set.rs	/^macro_rules! define_set {$/;"	M
define_set_builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_builder.rs	/^macro_rules! define_set_builder {$/;"	M
delay	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    delay: Delay,$/;"	m	struct:ConnectingTcpFallback
delayed_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    delayed_eof: Option<DelayEof>,$/;"	m	struct:Extra
delayed_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    pub(crate) fn delayed_eof(&mut self, fut: DelayEofUntil) {$/;"	P	implementation:Body
delete	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn delete<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
delete	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn delete<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
dense	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    dense: Vec<SuffixCacheEntry>,$/;"	m	struct:SuffixCache
dense	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    dense: Vec<u8>,$/;"	m	struct:SingleByteSet
dense	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^    dense: Vec<usize>,$/;"	m	struct:SparseSet
depth	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    depth: usize,$/;"	m	struct:DirEntry
depth	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    depth: usize,$/;"	m	struct:Error
depth	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    depth: usize,$/;"	m	struct:IntoIter
depth	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn depth(&self) -> usize {$/;"	P	implementation:DirEntry
depth	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn depth(&self) -> usize {$/;"	P	implementation:Error
depth	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    depth: usize,$/;"	m	struct:WalkEventIter
deref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:Chunk
deref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:Pooled
deref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn deref(&self) -> &[u8] {$/;"	P	implementation:AsyncIo
deref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn deref(&self) -> &[u8] {$/;"	P	implementation:MockCursor
deref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn deref(&self) -> &[u8] {$/;"	P	implementation:ByteInput
deref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn deref(&self) -> &[u8] {$/;"	P	implementation:CharInput
deref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:Program
deref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:SparseSet
deref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:Chunk
deref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn deref(&self) -> &W {$/;"	P	implementation:MouseTerminal
deref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^    fn deref(&self) -> &W {$/;"	P	implementation:RawTerminal
deref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^    fn deref(&self) -> &W {$/;"	P	implementation:AlternateScreen
deref_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	P	implementation:Pooled
deref_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn deref_mut(&mut self) -> &mut W {$/;"	P	implementation:MouseTerminal
deref_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^    fn deref_mut(&mut self) -> &mut W {$/;"	P	implementation:RawTerminal
deref_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^    fn deref_mut(&mut self) -> &mut W {$/;"	P	implementation:AlternateScreen
derive_color	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^macro_rules! derive_color {$/;"	M
derive_csi_sequence	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/macros.rs	/^macro_rules! derive_csi_sequence {$/;"	M
descendant	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn descendant<T: Predicate>(self, other: T) -> Descendant<Self, T>$/;"	P	interface:Predicate
descendants	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    descendants: Descendants<'a>,$/;"	m	struct:Find
descendants	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn descendants(&self) -> Descendants<'a> {$/;"	P	implementation:Node
description	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:InvalidUrl
description	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^                        fn description(&self) -> &str {$/;"	P	implementation:Exec::execute::TokioSpawnError
description	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/never.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Never
description	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:IncompleteBody
description	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:UpgradeExpected
description	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/error.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^            fn description(&self) -> &str {$/;"	P	implementation:tests::test_cause_chain::Chain
description	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
deserialize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    fn deserialize<D>(deserializer: &mut D) -> Result<Self, D::Error> where D: ::serde::Deserial/;"	P	implementation:Host
deserialize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    fn deserialize<D>(deserializer: &mut D) -> Result<Self, D::Error> where D: ::serde::Deserial/;"	P	implementation:HostInternal
deserialize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn deserialize<D>(deserializer: &mut D) -> Result<Url, D::Error> where D: serde::Deserialize/;"	P	implementation:Url
deserialize_internal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn deserialize_internal<D>(deserializer: &mut D) -> Result<Self, D::Error> where D: serd/;"	P	implementation:Url
desktop_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^pub fn desktop_dir() -> Option<PathBuf> {$/;"	f
desktop_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^pub fn desktop_dir()    -> Option<PathBuf> { run_xdg_user_dir_command("DESKTOP") }$/;"	f
desktop_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/mac.rs	/^pub fn desktop_dir()    -> Option<PathBuf> { home_dir().map(|h| h.join("Desktop")) }$/;"	f
desktop_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^pub fn desktop_dir()    -> Option<PathBuf> { home_dir().map(|h| h.join("Desktop")) }$/;"	f
desktop_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^pub fn desktop_dir()    -> Option<PathBuf> { known_folder(&knownfolders::FOLDERID_Desktop) }$/;"	f
detect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    pub(crate) fn detect(headers: &mut HeaderMap, body: Body, check_gzip: bool) -> Decoder {$/;"	P	implementation:Decoder
detect_color	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^fn detect_color(stdout: &mut Write, stdin: &mut Read, color: u16) -> io::Result<bool> {$/;"	f
device_num	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^fn device_num<P: AsRef<Path>>(_: P)-> std::io::Result<u64> {$/;"	f
device_num	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^fn device_num<P: AsRef<Path>>(path: P) -> std::io::Result<u64> {$/;"	f
device_num	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^fn device_num<P: AsRef<Path>>(path: P)-> std::io::Result<u64> {$/;"	f
dfa	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    pub fn dfa(mut self, yes: bool) -> Self {$/;"	P	implementation:Compiler
dfa	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    dfa: Program,$/;"	m	struct:ExecReadOnly
dfa	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub dfa: dfa::Cache,$/;"	m	struct:ProgramCacheInner
dfa	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod dfa;$/;"	n
dfa_reverse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    dfa_reverse: Program,$/;"	m	struct:ExecReadOnly
dfa_reverse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub dfa_reverse: dfa::Cache,$/;"	m	struct:ProgramCacheInner
dfa_size_limit	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub dfa_size_limit: usize,$/;"	m	struct:Program
dfa_size_limit	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_builder.rs	/^    pub dfa_size_limit: usize,$/;"	m	struct:RegexOptions
dir_setup	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^fn dir_setup(t: &Tree) -> (TempDir, Tree) {$/;"	f
dir_setup_with	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^fn dir_setup_with<F>(t: &Tree, f: F) -> (TempDir, Tree)$/;"	f
disable	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn disable(&mut self) {$/;"	P	implementation:KA
disable_keep_alive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn disable_keep_alive(&mut self) {$/;"	P	implementation:State
disable_keep_alive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn disable_keep_alive(&mut self) {$/;"	f
disable_keep_alive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    pub fn disable_keep_alive(&mut self) {$/;"	f
disable_steady_tick	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn disable_steady_tick(&self) {$/;"	P	implementation:ProgressBar
dispatch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    dispatch: dispatch::Sender<Request<B>, Response<Body>>,$/;"	m	struct:SendRequest
dispatch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    dispatch: dispatch::UnboundedSender<Request<B>, Response<Body>>,$/;"	m	struct:Http2SendRequest
dispatch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^pub(crate) mod dispatch;$/;"	n
dispatch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    dispatch: D,$/;"	m	struct:Dispatcher
dispatch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^pub(crate) mod dispatch;$/;"	n
distro	/home/doc/Code/Git/oracle/src/main.rs	/^mod distro;$/;"	n
dns	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^#[cfg(feature = "runtime")] pub mod dns;$/;"	n
dns_threads	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    dns_threads: usize,$/;"	m	struct:Config
dns_threads	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn dns_threads(mut self, threads: usize) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
document	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^    document: &'a Document,$/;"	m	struct:Find
document	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/lib.rs	/^pub mod document;$/;"	n
document	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    document: &'a Document,$/;"	m	struct:Children
document	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    document: &'a Document,$/;"	m	struct:Find
document	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    document: &'a Document,$/;"	m	struct:Node
document	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    document: &'a Document,$/;"	m	struct:Selection
document_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^pub fn document_dir() -> Option<PathBuf> {$/;"	f
document_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^pub fn document_dir()   -> Option<PathBuf> { run_xdg_user_dir_command("DOCUMENTS") }$/;"	f
document_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/mac.rs	/^pub fn document_dir()   -> Option<PathBuf> { home_dir().map(|h| h.join("Documents")) }$/;"	f
document_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^pub fn document_dir()   -> Option<PathBuf> { home_dir().map(|h| h.join("Documents")) }$/;"	f
document_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^pub fn document_dir()   -> Option<PathBuf> { known_folder(&knownfolders::FOLDERID_Documents) }$/;"	f
domain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn domain(&self) -> Option<&str> {$/;"	P	implementation:Url
domain_to_ascii	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn domain_to_ascii(domain: &str) -> String {$/;"	f
domain_to_unicode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn domain_to_unicode(domain: &str) -> String {$/;"	f
done	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    done: bool,$/;"	m	struct:MultiObject
done	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    done: bool,$/;"	m	struct:Descendants
dot_matches_new_line	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_builder.rs	/^    pub dot_matches_new_line: bool,$/;"	m	struct:RegexOptions
downcast	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl.rs	/^    pub(crate) fn downcast<T: Fail>(self) -> Result<T, ErrorImpl> {$/;"	P	implementation:ErrorImpl
downcast	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    pub(crate) fn downcast<T: Fail>(self) -> Result<T, ErrorImpl> {$/;"	P	implementation:ErrorImpl
downcast	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    pub fn downcast<T: Fail>(self) -> Result<T, Error> {$/;"	P	implementation:Error
downcast	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    pub fn downcast<T: Fail>(self) -> Result<T, Error> {$/;"	P	implementation:Error
downcast	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    pub fn downcast<T: AsyncRead + AsyncWrite + 'static>(self) -> Result<Parts<T>, Self> {$/;"	P	implementation:Upgraded
downcast_can_be_used	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    fn downcast_can_be_used() {$/;"	f	module:test
downcast_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    pub fn downcast_mut<T: Fail>(&mut self) -> Option<&mut T> {$/;"	P	implementation:Error
downcast_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    pub fn downcast_mut<T: Fail>(&mut self) -> Option<&mut T> {$/;"	P	implementation:Fail
downcast_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    pub fn downcast_mut<T: Fail>(&mut self) -> Option<&mut T> {$/;"	P	implementation:Error
downcast_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    pub fn downcast_ref<T: Fail>(&self) -> Option<&T> {$/;"	P	implementation:Error
downcast_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    pub fn downcast_ref<T: Fail>(&self) -> Option<&T> {$/;"	P	implementation:Fail
downcast_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    pub fn downcast_ref<T: Fail>(&self) -> Option<&T> {$/;"	P	implementation:Error
downgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn downgrade(arc: &Arc<T>) -> Self {$/;"	P	implementation:WeakOpt
download	/home/doc/Code/Git/oracle/src/main.rs	/^mod download;$/;"	n
download_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^pub fn download_dir() -> Option<PathBuf> {$/;"	f
download_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^pub fn download_dir()   -> Option<PathBuf> { run_xdg_user_dir_command("DOWNLOAD") }$/;"	f
download_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/mac.rs	/^pub fn download_dir()   -> Option<PathBuf> { home_dir().map(|h| h.join("Downloads")) }$/;"	f
download_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^pub fn download_dir()   -> Option<PathBuf> { home_dir().map(|h| h.join("Downloads")) }$/;"	f
download_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^pub fn download_dir()   -> Option<PathBuf> { known_folder(&knownfolders::FOLDERID_Downloads) }$/;"	f
download_distros	/home/doc/Code/Git/oracle/src/main.rs	/^mod download_distros;$/;"	n
download_menu	/home/doc/Code/Git/oracle/src/main.rs	/^mod download_menu;$/;"	n
download_size	/home/doc/Code/Git/oracle/src/download.rs	/^pub fn download_size(iso: &str) -> Result<(u64), ExitFailure> {$/;"	f
drain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    pub fn drain(self) -> Draining {$/;"	P	implementation:Signal
drain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/mod.rs	/^pub(crate) mod drain;$/;"	n
drained_rx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    drained_rx: mpsc::Receiver<Never>,$/;"	m	struct:Draining
drained_rx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    drained_rx: mpsc::Receiver<Never>,$/;"	m	struct:Signal
drained_tx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    drained_tx: mpsc::Sender<Never>,$/;"	m	struct:Watch
draining	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^        draining: bool,$/;"	m	struct:tests::TestMe
draw	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    fn draw(&self) -> io::Result<()> {$/;"	P	implementation:ProgressBar
draw_delta	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    draw_delta: u64,$/;"	m	struct:ProgressState
draw_next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    draw_next: u64,$/;"	m	struct:ProgressState
draw_state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    draw_state: Option<ProgressDrawState>,$/;"	m	struct:MultiObject
draw_state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^fn draw_state(state: &Arc<RwLock<ProgressState>>) -> io::Result<()> {$/;"	f
draw_target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    draw_target: ProgressDrawTarget,$/;"	m	struct:MultiProgressState
draw_target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    draw_target: ProgressDrawTarget,$/;"	m	struct:ProgressState
draw_to_term	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn draw_to_term(&self, term: &Term) -> io::Result<()> {$/;"	P	implementation:ProgressDrawState
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Error
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Envelope
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Receiver
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Checkout
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Connecting
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Pooled
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn drop(&mut self) {$/;"	P	implementation:DuplexHandle
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn drop(&mut self) {$/;"	P	implementation:MockConnector
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn drop(&mut self) {$/;"	P	implementation:WriteBufAuto
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ProgressBar
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    fn drop(&mut self) {$/;"	P	implementation:InnerClientHandle
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn drop(&mut self) {$/;"	P	implementation:MouseTerminal
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RawTerminal
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^    fn drop(&mut self) {$/;"	P	implementation:AlternateScreen
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn drop(&mut self) {$/;"	P	implementation:UrlQuery
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/path_segments.rs	/^    fn drop(&mut self) {$/;"	P	implementation:PathSegmentsMut
drop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    fn drop(&mut self) {$/;"	P	implementation:TempDir
drop_receiver_sends_cancel_errors	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    fn drop_receiver_sends_cancel_errors() {$/;"	f	module:tests
duplicate_for_key	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    pub fn duplicate_for_key<'b>(&self, key: &'b str) -> TemplateVar<'b> {$/;"	P	implementation:TemplateVar
duration_to_secs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^pub fn duration_to_secs(d: Duration) -> f64 {$/;"	f
empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    pub fn empty() -> Body {$/;"	P	implementation:Body
empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn empty() -> FreqyPacked {$/;"	P	implementation:FreqyPacked
empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn empty() -> Self {$/;"	P	implementation:LiteralSearcher
empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    pub(crate) fn empty() -> Body {$/;"	P	implementation:Body
empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    pub fn empty() -> Decoder {$/;"	P	implementation:Decoder
empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub(crate) fn empty() -> KeepCoreThreadAlive {$/;"	P	implementation:KeepCoreThreadAlive
enable_steady_tick	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn enable_steady_tick(&self, ms: u64) {$/;"	P	implementation:ProgressBar
encode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    pub fn encode<B>(&mut self, msg: B) -> EncodedBuf<B::Buf>$/;"	P	implementation:Encoder
encode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    fn encode(enc: Encode<Self::Outgoing>, dst: &mut Vec<u8>) -> ::Result<Encoder>;$/;"	P	interface:Http1Transaction
encode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^mod encode;$/;"	n
encode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn encode(msg: Encode<Self::Outgoing>, dst: &mut Vec<u8>) -> ::Result<Encoder> {$/;"	P	implementation:Client
encode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn encode(mut msg: Encode<Self::Outgoing>, mut dst: &mut Vec<u8>) -> ::Result<Encoder> {$/;"	P	implementation:Server
encode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^    pub fn encode<'a>(&self, input: Cow<'a, str>) -> Cow<'a, [u8]> {$/;"	P	implementation:EncodingOverride
encode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn encode<S: rustc_serialize::Encoder>(&self, encoder: &mut S) -> Result<(), S::Error> {$/;"	P	implementation:Url
encode_and_end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    pub(super) fn encode_and_end<B>(&self, msg: B, dst: &mut WriteBuf<EncodedBuf<B::Buf>>) -> bo/;"	P	implementation:Encoder
encode_head	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn encode_head(&mut self, mut head: MessageHead<T::Outgoing>, body: Option<BodyLength>) -> O/;"	f
encode_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fn encode_headers(&self, name: &str, field: &Part) -> Vec<u8> {$/;"	P	implementation:PercentEncoding
encode_utf8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^pub fn encode_utf8(input: Cow<str>) -> Cow<[u8]> {$/;"	f
encoding	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^    encoding: Option<EncodingRef>$/;"	m	struct:EncodingOverride
encoding	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    encoding: EncodingOverride,$/;"	m	struct:Parse
encoding	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    encoding: EncodingOverride,$/;"	m	struct:Serializer
encoding	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^mod encoding;$/;"	n
encoding_override	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    pub fn encoding_override(&mut self, new: Option<::encoding::EncodingRef>) -> &mut Self {$/;"	P	implementation:Serializer
encoding_override	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    encoding_override: encoding::EncodingOverride,$/;"	m	struct:ParseOptions
encoding_override	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn encoding_override(mut self, new: Option<encoding::EncodingRef>) -> Self {$/;"	P	implementation:ParseOptions
end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    pub fn end<B>(&self) -> Result<Option<EncodedBuf<B>>, NotEof> {$/;"	P	implementation:Encoder
end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    end: u8,$/;"	m	struct:SuffixCacheKey
end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    end: bool,$/;"	m	struct:EmptyFlags
end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^    end: usize,$/;"	m	struct:CaptureRef
end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/fallback.rs	/^    pub end: usize,$/;"	m	struct:Match
end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    pub end: usize,$/;"	m	struct:Match
end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/fallback.rs	/^    pub end: usize,$/;"	m	struct:Match
end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    pub end: usize,$/;"	m	struct:Match
end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub end: u8,$/;"	m	struct:InstBytes
end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    end: usize,$/;"	m	struct:Match
end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn end(&self) -> usize {$/;"	P	implementation:Match
end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    end: usize,$/;"	m	struct:Match
end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn end(&self) -> usize {$/;"	P	implementation:Match
end_body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn end_body(&mut self) {$/;"	f
end_line	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    end_line: bool,$/;"	m	struct:EmptyFlags
enforce_http	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    enforce_http: bool,$/;"	m	struct:HttpConnector
enforce_http	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    pub fn enforce_http(&mut self, is_enforced: bool) {$/;"	P	implementation:HttpConnector
enforce_version	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn enforce_version(&mut self, head: &mut MessageHead<T::Outgoing>) {$/;"	f
ensure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/macros.rs	/^macro_rules! ensure {$/;"	M
entry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    entry: InstPtr,$/;"	m	struct:Patch
eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    pub fn eof() -> Decoder {$/;"	P	implementation:Decoder
eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn eof() {$/;"	f	module:tests
eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn eof() -> Self { Byte(256) }$/;"	P	implementation:Byte
eq	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn eq(&self, other: &S) -> bool {$/;"	P	implementation:AsyncIo
eq	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn eq(&self, other: &S) -> bool {$/;"	P	implementation:MockCursor
eq	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn eq(&self, other: &Char) -> bool { *self as u32 == other.0 }$/;"	P	implementation:char
eq	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn eq(&self, other: &char) -> bool { self.0 == *other as u32 }$/;"	P	implementation:Char
eq	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:Url
err_msg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error_message.rs	/^pub fn err_msg<D: Display + Debug + Sync + Send + 'static>(msg: D) -> Error {$/;"	f
error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/lib.rs	/^pub mod error;$/;"	n
error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    error: Option<io::Error>,$/;"	m	struct:AsyncIo
error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub fn error(&mut self, err: io::Error) {$/;"	P	implementation:AsyncIo
error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    error: Option<::Error>,$/;"	m	struct:State
error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod error;$/;"	n
error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^mod error;$/;"	n
error_for_status	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    pub fn error_for_status(self) -> ::Result<Self> {$/;"	P	implementation:Response
error_for_status	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    pub fn error_for_status(self) -> ::Result<Self> {$/;"	P	implementation:Response
error_impl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^mod error_impl;$/;"	n
escape	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^pub fn escape(text: &str) -> String {$/;"	f
escape_byte	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^        fn escape_byte(byte: u8) -> String {$/;"	f	method:CapturesDebug::fmt
escape_bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^        fn escape_bytes(bytes: &[u8]) -> String {$/;"	f	method:CapturesDebug::fmt
est	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    est: Estimate,$/;"	m	struct:ProgressState
eta	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn eta(&self) -> Duration {$/;"	P	implementation:ProgressState
event	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/lib.rs	/^pub mod event;$/;"	n
events	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn events(self) -> Events<Self> where Self: Sized;$/;"	P	interface:TermRead
events	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn events(self) -> Events<Self> {$/;"	P	implementation:R
events_and_raw	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn events_and_raw(self) -> EventsAndRaw<Self> where Self: Sized;$/;"	P	interface:TermReadEventsAndRaw
events_and_raw	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn events_and_raw(self) -> EventsAndRaw<Self> {$/;"	P	implementation:R
exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    exec: Exec,$/;"	m	struct:PoolInner
exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/mod.rs	/^pub(crate) mod exec;$/;"	n
exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    exec: E,$/;"	m	struct:Server
exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    exec: E,$/;"	m	struct:Http
exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^    pub fn exec($/;"	P	implementation:Bounded
exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod exec;$/;"	n
exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    pub fn exec($/;"	P	implementation:Fsm
exec_	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^    fn exec_(&mut self, mut at: InputAt) -> bool {$/;"	P	implementation:Bounded
exec_	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    fn exec_($/;"	P	implementation:Fsm
exec_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn exec_at($/;"	P	implementation:Fsm
exec_at_reverse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn exec_at_reverse($/;"	P	implementation:Fsm
exec_backtrack	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn exec_backtrack($/;"	P	implementation:ExecNoSync
exec_byte	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn exec_byte($/;"	P	implementation:Fsm
exec_dfa_reverse_suffix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn exec_dfa_reverse_suffix($/;"	P	implementation:ExecNoSync
exec_nfa	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn exec_nfa($/;"	P	implementation:ExecNoSync
exec_pikevm	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn exec_pikevm($/;"	P	implementation:ExecNoSync
executable_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^pub fn executable_dir() -> Option<PathBuf> {$/;"	f
executable_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^pub fn executable_dir() -> Option<PathBuf> {$/;"	f
executable_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/mac.rs	/^pub fn executable_dir() -> Option<PathBuf> { None }$/;"	f
executable_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^pub fn executable_dir() -> Option<PathBuf> {$/;"	f
executable_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^pub fn executable_dir() -> Option<PathBuf> { None }$/;"	f
execute	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    fn execute(&self, future: oneshot::Execute<GaiBlocking>) -> Result<(), ExecuteError<oneshot:/;"	P	implementation:GaiExecutor
execute	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^    pub(crate) fn execute<F>(&self, fut: F) -> ::Result<()>$/;"	P	implementation:Exec
execute	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn execute(&self, request: Request) -> Pending {$/;"	P	implementation:Client
execute	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn execute(&self, request: Request) -> ::Result<Response> {$/;"	P	implementation:Client
execute_h2stream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^    fn execute_h2stream(&self, fut: H2Stream<F, B>) -> ::Result<()> {$/;"	f
execute_h2stream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^    fn execute_h2stream(&self, fut: H2Stream<F, B>) -> ::Result<()>;$/;"	P	interface:H2Exec
execute_new_svc	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^    fn execute_new_svc(&self, fut: NewSvcTask<I, N, S, E, W>) -> ::Result<()> {$/;"	f
execute_new_svc	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^    fn execute_new_svc(&self, fut: NewSvcTask<I, N, S, E, W>) -> ::Result<()>;$/;"	P	interface:NewSvcExec
execute_request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    fn execute_request(&self, req: Request) -> Pending {$/;"	P	implementation:Client
execute_request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    fn execute_request(&self, req: Request) -> ::Result<Response> {$/;"	P	implementation:ClientHandle
executor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub fn executor<E>(&mut self, exec: E) -> &mut Builder$/;"	P	implementation:Builder
executor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    executor: GaiExecutor,$/;"	m	struct:GaiResolver
executor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pub fn executor<E>(&mut self, exec: E) -> &mut Self$/;"	P	implementation:Builder
executor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/client.rs	/^    executor: Exec,$/;"	m	struct:Client
executor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn executor<E>(&mut self, exec: E) -> &mut Self$/;"	P	implementation:Http
executor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn executor<E2>(self, executor: E2) -> Builder<I, E2> {$/;"	P	implementation:Builder
expand	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod expand;$/;"	n
expand	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn expand(&self, replacement: &[u8], dst: &mut Vec<u8>) {$/;"	P	implementation:Captures
expand	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn expand(&self, replacement: &str, dst: &mut String) {$/;"	P	implementation:Captures
expand_bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^pub fn expand_bytes($/;"	f
expand_str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^pub fn expand_str($/;"	f
expand_template	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^pub fn expand_template<'a, F: Fn(&TemplateVar) -> String>(s: &'a str, f: F) -> Cow<'a, str> {$/;"	f
expect_continue	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    expect_continue: bool,$/;"	m	struct:ParsedMessage
expires	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn expires(&self, instant: Instant) -> bool {$/;"	P	implementation:Expiration
exprs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    exprs: Vec<Hir>,$/;"	m	struct:Parsed
extend	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn extend<T>(&mut self, iter: T) where T: IntoIterator<Item=u8> {$/;"	P	implementation:Chunk
extend	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/date.rs	/^pub fn extend(dst: &mut Vec<u8>) {$/;"	f
extend	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^fn extend(dst: &mut Vec<u8>, data: &[u8]) {$/;"	f
extend	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    fn extend<T>(&mut self, iter: T)$/;"	P	implementation:Chunk
extend	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/path_segments.rs	/^    pub fn extend<I>(&mut self, segments: I) -> &mut Self$/;"	P	implementation:PathSegmentsMut
extend_pairs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    pub fn extend_pairs<I, K, V>(&mut self, iter: I) -> &mut Self$/;"	P	implementation:Serializer
extensions	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    extensions: http::Extensions,$/;"	m	struct:Response
extra	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    extra: Option<Box<Extra>>,$/;"	m	struct:Body
extra	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    pub fn extra<T: Clone + Send + Sync + 'static>(mut self, extra: T) -> Connected {$/;"	P	implementation:Connected
extra_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn extra_mut(&mut self) -> &mut Extra {$/;"	P	implementation:Body
extract	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    pub fn extract(self, i: usize) -> u8 {$/;"	P	implementation:u8x32
extract	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    pub fn extract(self, i: usize) -> u8 {$/;"	P	implementation:u8x16
f	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    f: F,$/;"	m	struct:MakeServiceFn
f	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    f: F,$/;"	m	struct:ServiceFn
f	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    f: F,$/;"	m	struct:ServiceFnOk
fail	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    fail: Option<&'f Fail>,$/;"	m	struct:Causes
failure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl.rs	/^    pub(crate) fn failure(&self) -> &Fail {$/;"	P	implementation:ErrorImpl
failure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    failure: F,$/;"	m	struct:InnerRaw
failure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    failure: FailData,$/;"	m	struct:Inner
failure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    pub(crate) fn failure(&self) -> &Fail {$/;"	P	implementation:ErrorImpl
failure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    failure: F,$/;"	m	struct:InnerRaw
failure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    failure: FailData,$/;"	m	struct:Inner
failure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    fn failure(&self) -> &Fail {$/;"	P	implementation:Inner
failure_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl.rs	/^    pub(crate) fn failure_mut(&mut self) -> &mut Fail {$/;"	P	implementation:ErrorImpl
failure_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    pub(crate) fn failure_mut(&mut self) -> &mut Fail {$/;"	P	implementation:ErrorImpl
failure_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    fn failure_mut(&mut self) -> &mut Fail {$/;"	P	implementation:Inner
fallback	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/unix.rs	/^    unsafe fn fallback() -> Option<OsString> { None }$/;"	f	function:home_dir
fallback	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/unix.rs	/^    unsafe fn fallback() -> Option<OsString> {$/;"	f	function:home_dir
fallback	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    fallback: Option<ConnectingTcpFallback>,$/;"	m	struct:ConnectingTcp
fallback	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    fallback: Fallback<E>,$/;"	m	struct:Connection
fields	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fields: Vec<(Cow<'static, str>, Part)>,$/;"	m	struct:Form
file	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub fn file<T, U>(self, name: T, path: U) -> io::Result<Form>$/;"	P	implementation:Form
file	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub fn file<T: AsRef<Path>>(path: T) -> io::Result<Part> {$/;"	P	implementation:Part
file_name	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    file_name: Option<Cow<'static, str>>,$/;"	m	struct:Part
file_name	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub fn file_name<T: Into<Cow<'static, str>>>(mut self, filename: T) -> Part {$/;"	P	implementation:Part
file_name	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn file_name(&self) -> &OsStr {$/;"	P	implementation:DirEntry
file_type	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn file_type(&self) -> fs::FileType {$/;"	P	implementation:DirEntry
file_url_segments_to_pathbuf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^fn file_url_segments_to_pathbuf(host: Option<&str>, segments: str::Split<char>) -> Result<PathBu/;"	f
file_url_segments_to_pathbuf_windows	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^fn file_url_segments_to_pathbuf_windows(host: Option<&str>, mut segments: str::Split<char>) -> R/;"	f
fill	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn fill(&mut self, goto: InstPtr) {$/;"	P	implementation:MaybeInst
fill	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn fill(&mut self, hole: Hole, goto: InstPtr) {$/;"	P	implementation:Compiler
fill	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn fill(&self, goto: InstPtr) -> Inst {$/;"	P	implementation:InstHole
fill_split	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn fill_split($/;"	P	implementation:Compiler
fill_split	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn fill_split(&mut self, goto1: InstPtr, goto2: InstPtr) {$/;"	P	implementation:MaybeInst
fill_to_next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn fill_to_next(&mut self, hole: Hole) {$/;"	P	implementation:Compiler
filter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    pub fn filter<P: Predicate>(&self, p: P) -> Selection<'a> {$/;"	P	implementation:Selection
filter_entry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn filter_entry(self, predicate: P) -> FilterEntry<Self, P> {$/;"	f
filter_entry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn filter_entry<P>(self, predicate: P) -> FilterEntry<Self, P>$/;"	P	implementation:IntoIter
find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^    macro_rules! find {$/;"	M	module:tests
find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn find(&self, haystack: &[u8]) -> Option<usize> {$/;"	P	implementation:BoyerMooreSearch
find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn find(&self, text: &[u8]) -> Option<usize> {$/;"	P	implementation:SingleByteSet
find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn find(&self, haystack: &[u8]) -> Option<(usize, usize)> {$/;"	P	implementation:LiteralSearcher
find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn find(&self, haystack: &[u8]) -> Option<usize> {$/;"	P	implementation:FreqyPacked
find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/fallback.rs	/^    pub fn find(&self, _haystack: &[u8]) -> Option<Match> { None }$/;"	P	implementation:Teddy
find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    pub fn find(&self, haystack: &[u8]) -> Option<Match> {$/;"	P	implementation:Teddy
find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/fallback.rs	/^    pub fn find(&self, _haystack: &[u8]) -> Option<Match> { None }$/;"	P	implementation:Teddy
find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    pub fn find(&self, haystack: &[u8]) -> Option<Match> {$/;"	P	implementation:Teddy
find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn find<'t>(&self, text: &'t [u8]) -> Option<Match<'t>> {$/;"	P	implementation:Regex
find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn find<'t>(&self, text: &'t str) -> Option<Match<'t>> {$/;"	P	implementation:Regex
find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^    pub fn find<P: Predicate>(&self, predicate: P) -> Find<P> {$/;"	P	implementation:Document
find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn find<P: Predicate>(&self, predicate: P) -> Find<'a, P> {$/;"	P	implementation:Node
find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    pub fn find<P: Predicate>(&self, p: P) -> Selection<'a> {$/;"	P	implementation:Selection
find1	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    fn find1(&self, haystack: &[u8]) -> Option<Match> {$/;"	P	implementation:Teddy
find1	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    fn find1(&self, haystack: &[u8]) -> Option<Match> {$/;"	P	implementation:Teddy
find2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    fn find2(&self, haystack: &[u8]) -> Option<Match> {$/;"	P	implementation:Teddy
find2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    fn find2(&self, haystack: &[u8]) -> Option<Match> {$/;"	P	implementation:Teddy
find3	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    fn find3(&self, haystack: &[u8]) -> Option<Match> {$/;"	P	implementation:Teddy
find3	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    fn find3(&self, haystack: &[u8]) -> Option<Match> {$/;"	P	implementation:Teddy
find_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn find_at(&self, text: &[u8], start: usize) -> Option<(usize, usize)> {$/;"	P	implementation:ExecNoSync
find_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn find_at(&self, text: &str, start: usize) -> Option<(usize, usize)> {$/;"	P	implementation:ExecNoSyncStr
find_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn find_at<'t>($/;"	P	implementation:Regex
find_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    fn find_at($/;"	P	interface:RegularExpression
find_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn find_at<'t>($/;"	P	implementation:Regex
find_cap_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^fn find_cap_ref<T: ?Sized + AsRef<[u8]>>($/;"	f
find_dfa_anchored_reverse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn find_dfa_anchored_reverse($/;"	P	implementation:ExecNoSync
find_dfa_forward	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn find_dfa_forward($/;"	P	implementation:ExecNoSync
find_dfa_reverse_suffix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn find_dfa_reverse_suffix($/;"	P	implementation:ExecNoSync
find_distro_name	/home/doc/Code/Git/oracle/src/work.rs	/^pub fn find_distro_name(s: &str) -> String {$/;"	f	function:neofetch
find_distros	/home/doc/Code/Git/oracle/src/work.rs	/^pub fn find_distros() -> String {$/;"	f	function:neofetch
find_end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn find_end(&self, haystack: &[u8]) -> Option<(usize, usize)> {$/;"	P	implementation:LiteralSearcher
find_impl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    unsafe fn find_impl(&self, haystack: &[u8]) -> Option<Match> {$/;"	P	implementation:Teddy
find_impl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    unsafe fn find_impl(&self, haystack: &[u8]) -> Option<Match> {$/;"	P	implementation:Teddy
find_iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn find_iter<'r, 't>(&'r self, text: &'t [u8]) -> Matches<'r, 't> {$/;"	P	implementation:Regex
find_iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    fn find_iter ($/;"	P	interface:RegularExpression
find_iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn find_iter<'r, 't>(&'r self, text: &'t str) -> Matches<'r, 't> {$/;"	P	implementation:Regex
find_literals	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn find_literals($/;"	P	implementation:ExecNoSync
find_nfa	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn find_nfa($/;"	P	implementation:ExecNoSync
find_root_cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    pub fn find_root_cause(&self) -> &Fail {$/;"	P	implementation:Error
find_root_cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    pub fn find_root_cause(&self) -> &Fail {$/;"	P	implementation:Fail
find_root_cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^fn find_root_cause(mut fail: &Fail) -> &Fail {$/;"	f
find_start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn find_start(&self, haystack: &[u8]) -> Option<(usize, usize)> {$/;"	P	implementation:LiteralSearcher
find_version	/home/doc/Code/Git/oracle/src/work.rs	/^pub fn find_version(s: &str) -> String {$/;"	f	function:neofetch
finder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    finder: Matches<'r, 't>,$/;"	m	struct:Split
finder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    finder: Matches<'r, 't>,$/;"	m	struct:Split
finish	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn finish(&self) {$/;"	P	implementation:ProgressBar
finish	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    fn finish(mut self) -> &'a mut ::Url {$/;"	P	implementation:UrlQuery
finish	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    fn finish(self) -> Self { self }$/;"	P	implementation:String
finish	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    fn finish(self) -> Self::Finished;$/;"	P	interface:Target
finish	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    pub fn finish(&mut self) -> T::Finished {$/;"	P	implementation:Serializer
finish_and_clear	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn finish_and_clear(&self) {$/;"	P	implementation:ProgressBar
finish_sequence	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    macro_rules! finish_sequence($/;"	M
finish_with_message	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn finish_with_message(&self, msg: &str) {$/;"	P	implementation:ProgressBar
finished	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^        finished: bool,$/;"	m	struct:tests::TestMe
finished	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub finished: bool,$/;"	m	struct:ProgressDrawState
first	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    pub fn first(&self) -> Option<Node<'a>> {$/;"	P	implementation:Selection
first_child	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub first_child: Option<usize>,$/;"	m	struct:Raw
first_child	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn first_child(&self) -> Option<Node<'a>> {$/;"	P	implementation:Node
fix_keep_alive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn fix_keep_alive(&mut self, head: &mut MessageHead<T::Outgoing>) {$/;"	f
flags	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn flags(&self) -> StateFlags {$/;"	P	implementation:State
flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:AsyncIo
flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Duplex
flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:MockCursor
flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn flush(&mut self) -> Poll<(), io::Error> {$/;"	f
flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub fn flush(&mut self) -> Poll<(), io::Error> {$/;"	f
flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^        fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:addr_stream::AddrStream
flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Upgraded
flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Conn
flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:TlsStream
flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:MouseTerminal
flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:RawTerminal
flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:AlternateScreen
flush_count	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    flush_count: u64,$/;"	m	struct:CacheInner
flush_flattened	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn flush_flattened(&mut self) -> Poll<(), io::Error> {$/;"	f
flush_pipeline	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    flush_pipeline: bool,$/;"	m	struct:Buffered
flushed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    flushed: bool,$/;"	m	struct:AsyncIo
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/exitfailure-0.5.1/src/lib.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {$/;"	P	implementation:ExitDisplay
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/exitfailure-0.5.1/src/lib.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {$/;"	P	implementation:ExitFailure
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:InternalBacktrace
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/box_std.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BoxStd
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/compat.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Compat
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error_message.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ErrorMessage
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/sync_failure.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Body
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Chunk
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Handshake
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Http2SendRequest
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ResponseFuture
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SendRequest
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:sealed::GaiTask
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:GaiAddrs
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:GaiFuture
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:GaiResolver
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Name
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:HttpConnecting
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:HttpConnector
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:InvalidUrl
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Extra
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Builder
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Client
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ResponseFuture
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Pooled
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^                        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Exec::execute::TokioSpawnError
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/exec.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Exec
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/never.rs	/^    fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Never
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Conn
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:State
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Writing
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Decoder
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IncompleteBody
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ChunkSize
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Cursor
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:WriteBuf
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:body_length::DecodedLength
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Server
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:AddrIncoming
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:MakeServiceFn
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ServiceFn
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ServiceFnOk
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OnUpgrade
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:UpgradeExpected
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Upgraded
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/format.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BinaryBytes
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/format.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:DecimalBytes
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/format.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:FormattedDuration
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/format.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:HumanBytes
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/format.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:HumanDuration
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:MultiProgress
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ProgressBar
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:State
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StateFlags
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Transitions
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:TransitionsRow
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Char
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Program
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Captures
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CapturesDebug
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Regex
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Captures
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CapturesDebug
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Regex
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:u8x32
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:u8x16
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Body
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Chunk
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Client
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ClientBuilder
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Pending
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Decoder
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ReadableChunks
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Request
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RequestBuilder
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Json
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Response
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:DebugLength
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Kind
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Client
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ClientBuilder
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^            fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:tests::test_cause_chain::Chain
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Form
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Part
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Reader
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Custom
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Policy
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Request
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Response
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/tls.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Certificate
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/tls.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Identity
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^            fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:Node::fmt::Attrs
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^            fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:Node::fmt::Children
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:Node
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Bg
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Fg
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Down
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Goto
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Left
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Right
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/cursor.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Up
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ToAlternateScreen
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ToMainScreen
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/scroll.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Down
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/scroll.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Up
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^    fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	P	implementation:EncodingOverride
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SilentDebug
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	P	implementation:Host
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	P	implementation:HostAndPort
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	P	implementation:ParseOptions
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Url
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	P	implementation:ViolationFn
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn fmt(&self, fmt: &mut Formatter) -> fmt::Result {$/;"	P	implementation:ParseError
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn fmt(&self, fmt: &mut Formatter) -> fmt::Result {$/;"	P	implementation:SyntaxViolation
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:DirEntry
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> result::Result<(), fmt::Error> {$/;"	P	implementation:WalkDirOptions
fmt_request_fields	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^fn fmt_request_fields<'a, 'b>(f: &'a mut fmt::DebugStruct<'a, 'b>, req: &Request) -> &'a mut fmt/;"	f
fmt_request_fields	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^fn fmt_request_fields<'a, 'b>(f: &'a mut fmt::DebugStruct<'a, 'b>, req: &Request) -> &'a mut fmt/;"	f
follow	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    pub fn follow(self) -> RedirectAction {$/;"	P	implementation:RedirectAttempt
follow	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn follow(&self, mut dent: DirEntry) -> Result<DirEntry> {$/;"	P	implementation:IntoIter
follow_epsilons	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn follow_epsilons($/;"	P	implementation:Fsm
follow_link	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    follow_link: bool,$/;"	m	struct:DirEntry
follow_links	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    follow_links: bool,$/;"	m	struct:WalkDirOptions
follow_links	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn follow_links(mut self, yes: bool) -> Self {$/;"	P	implementation:WalkDir
follows_general_if_failure_is_not_set	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^    fn follows_general_if_failure_is_not_set() {$/;"	f	module:tests
font_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^pub fn font_dir() -> Option<PathBuf> {$/;"	f
font_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^pub fn font_dir()       -> Option<PathBuf> { data_dir().map(|d| d.join("fonts")) }$/;"	f
font_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/mac.rs	/^pub fn font_dir()       -> Option<PathBuf> { home_dir().map(|h| h.join("Library\/Fonts")) }$/;"	f
font_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^pub fn font_dir()       -> Option<PathBuf> { data_dir().map(|d| d.join("fonts")) }$/;"	f
font_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^pub fn font_dir()       -> Option<PathBuf> { None }$/;"	f
foo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^            foo: String,$/;"	m	struct:tests::add_query_struct::Params
foo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^            foo: String,$/;"	m	struct:tests::add_query_struct::Params
for_setter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn for_setter(serialization: String) -> Parser<'a> {$/;"	P	implementation:Parser
for_suffix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    pub fn for_suffix(mut target: T, start_position: usize) -> Self {$/;"	P	implementation:Serializer
force_draw	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub force_draw: bool,$/;"	m	struct:ProgressDrawState
form	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn form<T: Serialize + ?Sized>(mut self, form: &T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
form	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    form: Form,$/;"	m	struct:Reader
form	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn form<T: Serialize + ?Sized>(mut self, form: &T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
form_empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fn form_empty() {$/;"	f	module:tests
form_urlencoded	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^pub mod form_urlencoded;$/;"	n
format	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/lib.rs	/^mod format;$/;"	n
format_bar	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    fn format_bar(&self, state: &ProgressState, width: usize, alt_style: Option<&Style>) -> Stri/;"	P	implementation:ProgressStyle
format_err	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/macros.rs	/^macro_rules! format_err {$/;"	M
format_parameter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fn format_parameter(&self, name: &str, value: &str) -> String {$/;"	P	implementation:PercentEncoding
format_state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    fn format_state(&self, state: &ProgressState) -> Vec<String> {$/;"	P	implementation:ProgressStyle
forward	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    pub fn forward($/;"	P	implementation:Fsm
forward_many	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    pub fn forward_many($/;"	P	implementation:Fsm
fraction	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn fraction(&self) -> f32 {$/;"	P	implementation:ProgressState
fragment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fragment: Option<String>,$/;"	m	struct:UrlQuery
fragment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn fragment(&self) -> Option<&str> {$/;"	P	implementation:Url
fragment_only	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn fragment_only(mut self, base_url: &Url, mut input: Input) -> ParseResult<Url> {$/;"	P	implementation:Parser
fragment_start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fragment_start: Option<u32>,  \/\/ Before '#', unlike Position::FragmentStart$/;"	m	struct:Url
freq_rank	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^fn freq_rank(b: u8) -> usize {$/;"	f
freqs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod freqs;$/;"	n
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/exitfailure-0.5.1/src/lib.rs	/^    fn from(e: E) -> Self {$/;"	P	implementation:ExitDisplay
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/exitfailure-0.5.1/src/lib.rs	/^    fn from(t: T) -> Self {$/;"	P	implementation:ExitFailure
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/context.rs	/^    fn from(display: D) -> Context<D> {$/;"	f
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl.rs	/^    fn from(failure: F) -> ErrorImpl {$/;"	P	implementation:ErrorImpl
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    fn from(failure: F) -> ErrorImpl {$/;"	P	implementation:ErrorImpl
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    fn from(failure: F) -> Error {$/;"	P	implementation:Error
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    fn from(failure: F) -> Error {$/;"	P	implementation:Error
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn from($/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn from(bytes: Bytes) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn from(chunk: Chunk) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn from(cow: Cow<'static, [u8]>) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn from(cow: Cow<'static, str>) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn from(s: String) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn from(slice: &'static [u8]) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn from(slice: &'static str) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn from(vec: Vec<u8>) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn from(bytes: Bytes) -> Chunk {$/;"	P	implementation:Chunk
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn from(chunk: Chunk) -> Bytes {$/;"	P	implementation:Bytes
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn from(s: String) -> Chunk {$/;"	P	implementation:Chunk
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn from(slice: &'static [u8]) -> Chunk {$/;"	P	implementation:Chunk
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn from(slice: &'static str) -> Chunk {$/;"	P	implementation:Chunk
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn from(v: Vec<u8>) -> Chunk {$/;"	P	implementation:Chunk
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    fn from(_: http::method::InvalidMethod) -> Parse {$/;"	P	implementation:Parse
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    fn from(_: http::status::InvalidStatusCode) -> Parse {$/;"	P	implementation:Parse
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    fn from(_: http::uri::InvalidUri) -> Parse {$/;"	P	implementation:Parse
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    fn from(_: http::uri::InvalidUriBytes) -> Parse {$/;"	P	implementation:Parse
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    fn from(_: http::uri::InvalidUriParts) -> Parse {$/;"	P	implementation:Parse
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    fn from(err: Parse) -> Error {$/;"	P	implementation:Error
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    fn from(err: httparse::Error) -> Parse {$/;"	P	implementation:Parse
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn from(buf: B) -> Self {$/;"	P	implementation:EncodedBuf
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn from(buf: Chain<Chain<ChunkSize, B>, StaticBuf>) -> Self {$/;"	P	implementation:EncodedBuf
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn from(buf: Take<B>) -> Self {$/;"	P	implementation:EncodedBuf
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^    fn from(x: &'a str) -> Ref<'a> {$/;"	P	implementation:Ref
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^    fn from(x: usize) -> Ref<'static> {$/;"	P	implementation:Ref
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn from(c: Option<char>) -> Char {$/;"	P	implementation:Char
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn from(c: char) -> Char { Char(c as u32) }$/;"	P	implementation:Char
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn from(exec: Exec) -> Regex {$/;"	P	implementation:Regex
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn from(exec: Exec) -> Regex {$/;"	P	implementation:Regex
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn from(m: Match<'t>) -> &'t str {$/;"	P	implementation:str
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    fn from(bytes: Bytes) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    fn from(s: &'static [u8]) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    fn from(s: &'static str) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    fn from(s: String) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    fn from(vec: Vec<u8>) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    fn from(r: http::Response<T>) -> Response {$/;"	P	implementation:Response
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    fn from(f: File) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    fn from(s: &'static [u8]) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    fn from(s: &'static str) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    fn from(s: String) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    fn from(v: Vec<u8>) -> Body {$/;"	P	implementation:Body
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn from(err: ::http::Error) -> Kind {$/;"	P	implementation:Kind
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn from(err: ::hyper::Error) -> Kind {$/;"	P	implementation:Kind
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn from(err: ::mime::FromStrError) -> Kind {$/;"	P	implementation:Kind
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn from(err: ::native_tls::Error) -> Kind {$/;"	P	implementation:Kind
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn from(err: ::serde_json::Error) -> Kind {$/;"	P	implementation:Kind
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn from(err: ::serde_urlencoded::ser::Error) -> Kind {$/;"	P	implementation:Kind
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn from(err: ::url::ParseError) -> Kind {$/;"	P	implementation:Kind
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn from(err: ::wait::Waited<T>) -> Kind {$/;"	f
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn from(err: io::Error) -> Kind {$/;"	P	implementation:Kind
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn from(other: InternalFrom<Error>) -> Error {$/;"	P	implementation:Error
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn from(other: InternalFrom<T>) -> Error {$/;"	f
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^pub(crate) fn from<T>(err: T) -> Error$/;"	f
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    fn from(r: http::Response<T>) -> Response {$/;"	P	implementation:Response
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^    fn from(err: E) -> Waited<E> {$/;"	P	implementation:Waited
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^    fn from(str: &str) -> Document {$/;"	P	implementation:Document
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^    fn from(tendril: StrTendril) -> Document {$/;"	P	implementation:Document
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn from(mut from: W) -> MouseTerminal<W> {$/;"	P	implementation:MouseTerminal
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^    pub fn from(mut output: W) -> Self {$/;"	P	implementation:AlternateScreen
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    fn from(host: Host<S>) -> HostInternal {$/;"	P	implementation:HostInternal
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn from(_: ::idna::uts46::Errors) -> ParseError { ParseError::IdnaError }$/;"	P	implementation:ParseError
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn from(s: &str) -> Self {$/;"	P	implementation:SchemeType
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn from(walk_err: Error) -> io::Error {$/;"	P	implementation:Error
from	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    fn from(it: WalkDir) -> WalkEventIter {$/;"	P	implementation:WalkEventIter
from_boxed_compat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    pub fn from_boxed_compat(err: Box<StdError + Sync + Send + 'static>) -> Error {$/;"	P	implementation:Error
from_chunk	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    pub(crate) fn from_chunk(chunk: Bytes) -> Chunk {$/;"	P	implementation:Chunk
from_der	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/tls.rs	/^    pub fn from_der(der: &[u8]) -> ::Result<Certificate> {$/;"	P	implementation:Certificate
from_directory_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn from_directory_path<P: AsRef<Path>>(path: P) -> Result<Url, ()> {$/;"	P	implementation:Url
from_encoding	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^    pub fn from_encoding(encoding: EncodingRef) -> Self {$/;"	P	implementation:EncodingOverride
from_entry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn from_entry(dent: &DirEntry, err: io::Error) -> Self {$/;"	P	implementation:Error
from_entry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn from_entry(depth: usize, ent: &fs::DirEntry) -> Result<DirEntry> {$/;"	P	implementation:DirEntry
from_file_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn from_file_path<P: AsRef<Path>>(path: P) -> Result<Url, ()> {$/;"	P	implementation:Url
from_inst	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    from_inst: InstPtr,$/;"	m	struct:SuffixCacheKey
from_io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn from_io(depth: usize, err: io::Error) -> Self {$/;"	P	implementation:Error
from_opt_encoding	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^    pub fn from_opt_encoding(encoding: Option<EncodingRef>) -> Self {$/;"	P	implementation:EncodingOverride
from_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn from_path(depth: usize, pb: PathBuf, err: io::Error) -> Self {$/;"	P	implementation:Error
from_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn from_path(depth: usize, pb: PathBuf, follow: bool) -> Result<DirEntry> {$/;"	P	implementation:DirEntry
from_pem	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/tls.rs	/^    pub fn from_pem(der: &[u8]) -> ::Result<Certificate> {$/;"	P	implementation:Certificate
from_pkcs12_der	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/tls.rs	/^    pub fn from_pkcs12_der(der: &[u8], password: &str) -> ::Result<Identity> {$/;"	P	implementation:Identity
from_read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^    pub fn from_read<R: io::Read>(mut readable: R) -> io::Result<Document> {$/;"	P	implementation:Document
from_std	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    pub(super) fn from_std(std_listener: StdTcpListener, handle: &Handle) -> ::Result<Self> {$/;"	P	implementation:AddrIncoming
from_str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn from_str(s: &str) -> Result<Regex, Error> {$/;"	P	implementation:Regex
from_str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn from_str(s: &str) -> Result<Regex, Error> {$/;"	P	implementation:Regex
from_str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn from_str(input: &str) -> Result<Url, ::ParseError> {$/;"	P	implementation:Url
from_tcp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn from_tcp(listener: StdTcpListener) -> Result<Builder<AddrIncoming>, ::Error> {$/;"	P	implementation:Server
from_walk_with	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    fn from_walk_with<P, F>($/;"	P	implementation:Tree
from_walk_with_contents_first	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    fn from_walk_with_contents_first<P, F>($/;"	P	implementation:Tree
fs	/home/doc/Code/Git/oracle/src/work.rs	/^pub fn fs(st: &str) -> String {$/;"	f	function:neofetch
fulfill	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    pub(crate) fn fulfill(self, upgraded: Upgraded) {$/;"	P	implementation:Pending
full_byte_classes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn full_byte_classes() {$/;"	f	module:tests
full_rewind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    fn full_rewind() {$/;"	f	module:tests
future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    future: F,$/;"	m	struct:Watching
future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    future: F,$/;"	m	struct:Connecting
fuzz	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^        fn fuzz(max: usize) {$/;"	f	function:tests::read_strategy_adaptive_max_fuzz
gen	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    fn gen<G: Gen>(g: &mut G, depth: usize) -> Tree {$/;"	P	implementation:Tree
get	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pub fn get(&self, uri: Uri) -> ResponseFuture$/;"	f
get	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn get(&mut self, key: SuffixCacheKey, pc: InstPtr) -> Option<InstPtr> {$/;"	P	implementation:SuffixCache
get	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn get(&self, i: usize) -> Option<(usize, usize)> {$/;"	P	implementation:CaptureLocations
get	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn get(&self, i: usize) -> Option<Match<'t>> {$/;"	P	implementation:Captures
get	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn get(&self, i: usize) -> Option<(usize, usize)> {$/;"	P	implementation:CaptureLocations
get	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn get(&self, i: usize) -> Option<Match<'t>> {$/;"	P	implementation:Captures
get	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn get<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
get	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn get<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
get	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^pub fn get<T: IntoUrl>(url: T) -> ::Result<Response> {$/;"	f
get_deferred_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn get_deferred_dir(&mut self) -> Option<DirEntry> {$/;"	P	implementation:IntoIter
get_final_tick_char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn get_final_tick_char(&self) -> char {$/;"	P	implementation:ProgressStyle
get_ptr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn get_ptr(&self, state: &State) -> Option<StatePtr> {$/;"	P	implementation:StateMap
get_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/compat.rs	/^    pub fn get_ref(&self) -> &E {$/;"	P	implementation:Compat
get_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    pub fn get_ref(&self) -> Option<&(StdError + Send + Sync + 'static)> {$/;"	P	implementation:Error
get_state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn get_state(&self, si: StatePtr) -> Option<&State> {$/;"	P	implementation:StateMap
get_terminal_attr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/redox/attr.rs	/^pub fn get_terminal_attr() -> io::Result<Termios> {$/;"	f
get_terminal_attr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/attr.rs	/^pub fn get_terminal_attr() -> io::Result<Termios> {$/;"	f
get_tick_char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn get_tick_char(&self, idx: u64) -> char {$/;"	P	implementation:ProgressStyle
get_tty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/redox/tty.rs	/^pub fn get_tty() -> io::Result<fs::File> {$/;"	f
get_tty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/tty.rs	/^pub fn get_tty() -> io::Result<fs::File> {$/;"	f
get_versions	/home/doc/Code/Git/oracle/src/download_distros.rs	/^pub fn get_versions(url: &str) -> Vec<String> {$/;"	f
giver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    giver: want::Giver,$/;"	m	struct:Sender
giver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    giver: want::SharedGiver,$/;"	m	struct:UnboundedSender
giver_queue_cancel	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    fn giver_queue_cancel(b: &mut test::Bencher) {$/;"	f	module:tests
giver_queue_not_ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    fn giver_queue_not_ready(b: &mut test::Bencher) {$/;"	f	module:tests
giver_queue_throughput	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    fn giver_queue_throughput(b: &mut test::Bencher) {$/;"	f	module:tests
goto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub goto: InstPtr,$/;"	m	struct:InstBytes
goto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub goto: InstPtr,$/;"	m	struct:InstChar
goto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub goto: InstPtr,$/;"	m	struct:InstEmptyLook
goto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub goto: InstPtr,$/;"	m	struct:InstRanges
goto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub goto: InstPtr,$/;"	m	struct:InstSave
goto1	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub goto1: InstPtr,$/;"	m	struct:InstSplit
goto2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub goto2: InstPtr,$/;"	m	struct:InstSplit
graceful_shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    pub fn graceful_shutdown(&mut self) {$/;"	f
graceful_shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^        pub fn graceful_shutdown(&mut self) {$/;"	f	module:upgrades
graceful_shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn graceful_shutdown(&mut self) {$/;"	f
grayscale	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^    pub fn grayscale(shade: u8) -> AnsiValue {$/;"	P	implementation:AnsiValue
guard	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    guard: u8,$/;"	m	struct:BoyerMooreSearch
guard_reverse_idx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    guard_reverse_idx: usize,$/;"	m	struct:BoyerMooreSearch
gzip	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    gzip: bool,$/;"	m	struct:ClientRef
gzip	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    gzip: bool,$/;"	m	struct:Config
gzip	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn gzip(mut self, enable: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
gzip	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    fn gzip(body: Body) -> Decoder {$/;"	P	implementation:Decoder
gzip	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn gzip(self, enable: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
h1	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^pub(crate) mod h1;$/;"	n
h1_half_close	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    h1_half_close: bool,$/;"	m	struct:Http
h1_key	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    pub(super) fn h1_key(&self, s: &str) -> Key {$/;"	P	implementation:Pool
h1_read_buf_exact_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    h1_read_buf_exact_size: Option<usize>,$/;"	m	struct:Builder
h1_read_buf_exact_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub(super) fn h1_read_buf_exact_size(&mut self, sz: Option<usize>) -> &mut Builder {$/;"	P	implementation:Builder
h1_title_case_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    h1_title_case_headers: bool,$/;"	m	struct:Builder
h1_title_case_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub(super) fn h1_title_case_headers(&mut self, enabled: bool) -> &mut Builder {$/;"	P	implementation:Builder
h1_writev	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    h1_writev: bool,$/;"	m	struct:Builder
h1_writev	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub(super) fn h1_writev(&mut self, enabled: bool) -> &mut Builder {$/;"	P	implementation:Builder
h1_writev	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    h1_writev: bool,$/;"	m	struct:Http
h2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    pub(crate) fn h2(recv: h2::RecvStream, content_length: Option<u64>) -> Self {$/;"	P	implementation:Body
h2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^pub(crate) mod h2;$/;"	n
half_fill_split_goto1	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn half_fill_split_goto1(&mut self, goto1: InstPtr) {$/;"	P	implementation:MaybeInst
half_fill_split_goto2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn half_fill_split_goto2(&mut self, goto2: InstPtr) {$/;"	P	implementation:MaybeInst
handle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    handle: Option<Handle>,$/;"	m	struct:HttpConnecting
handle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    handle: Option<Handle>,$/;"	m	struct:HttpConnector
handle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    handle: Handle,$/;"	m	struct:Ancestor
handle_entry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn handle_entry($/;"	P	implementation:IntoIter
handle_read_task	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    handle_read_task: Option<Task>,$/;"	m	struct:DuplexInner
handshake	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub fn handshake<T, B>(&self, io: T) -> Handshake<T, B>$/;"	P	implementation:Builder
handshake	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^pub fn handshake<T>(io: T) -> Handshake<T, ::Body>$/;"	f
happy_eyeballs_timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    happy_eyeballs_timeout: Option<Duration>,$/;"	m	struct:HttpConnecting
happy_eyeballs_timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    happy_eyeballs_timeout: Option<Duration>,$/;"	m	struct:HttpConnector
has_authority	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn has_authority(&self) -> bool {$/;"	P	implementation:Url
has_empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn has_empty(&self) -> bool {$/;"	P	implementation:StateFlags
has_h2_prefix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn has_h2_prefix(&self) -> bool {$/;"	f
has_host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn has_host(&self) -> bool {$/;"	P	implementation:Url
has_prefix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn has_prefix(&self) -> bool {$/;"	P	implementation:Fsm
has_unicode_word_boundary	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub has_unicode_word_boundary: bool,$/;"	m	struct:Program
has_visited	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^    fn has_visited(&mut self, ip: InstPtr, at: InputAt) -> bool {$/;"	P	implementation:Bounded
hash	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn hash(&self, suffix: &SuffixCacheKey) -> usize {$/;"	P	implementation:SuffixCache
hash	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn hash<H>(&self, state: &mut H) where H: hash::Hasher {$/;"	P	implementation:Url
hash	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn hash(url: &Url) -> &str {$/;"	f
haystack	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pattern.rs	/^    fn haystack(&self) -> &'t str {$/;"	P	implementation:RegexSearcher
haystack	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pattern.rs	/^    haystack: &'t str,$/;"	m	struct:RegexSearcher
head	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    head: &'a mut MessageHead<T>,$/;"	m	struct:Encode
head	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    head: MessageHead<T>,$/;"	m	struct:ParsedMessage
head	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn head<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
head	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn head<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
header	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    header: InnerHeader,$/;"	m	struct:InnerRaw
header	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    header: InnerHeader,$/;"	m	struct:InnerRaw
header	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn header<K, V>(mut self, key: K, value: V) -> RequestBuilder$/;"	P	implementation:RequestBuilder
header	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn header<K, V>(mut self, key: K, value: V) -> RequestBuilder$/;"	P	implementation:RequestBuilder
header_011	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn header_011<H>(self, header: H) -> RequestBuilder$/;"	P	implementation:RequestBuilder
header_011	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn header_011<H>(self, header: H) -> RequestBuilder$/;"	P	implementation:RequestBuilder
header_name	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^macro_rules! header_name {$/;"	M
header_percent_encoding	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fn header_percent_encoding() {$/;"	f	module:tests
header_value	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^macro_rules! header_value {$/;"	M
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/lib.rs	/^mod headers;$/;"	n
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    headers: Cursor<Vec<u8>>,$/;"	m	struct:WriteBuf
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^    pub headers: HeaderMap,$/;"	m	struct:MessageHead
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    headers: HeaderMap,$/;"	m	struct:ClientRef
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    headers: HeaderMap,$/;"	m	struct:Config
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    headers: HeaderMap,$/;"	m	struct:PendingRequest
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    headers: HeaderMap,$/;"	m	struct:Request
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn headers(&self) -> &HeaderMap {$/;"	P	implementation:Request
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn headers(mut self, headers: ::header::HeaderMap) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    headers: HeaderMap,$/;"	m	struct:Response
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    pub fn headers(&self) -> &HeaderMap {$/;"	P	implementation:Response
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    headers: HeaderMap,$/;"	m	struct:Part
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    headers: Vec<Vec<u8>>,$/;"	m	struct:Form
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub fn headers(&self) -> &HeaderMap {$/;"	P	implementation:Part
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn headers(&self) -> &HeaderMap {$/;"	P	implementation:Request
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn headers(mut self, headers: ::header::HeaderMap) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    pub fn headers(&self) -> &HeaderMap {$/;"	P	implementation:Response
headers_011	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn headers_011(self, headers: ::hyper_011::Headers) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
headers_011	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn headers_011(self, headers: ::hyper_011::Headers) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
headers_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub fn headers_buf(&mut self) -> &mut Vec<u8> {$/;"	f
headers_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn headers_mut(&mut self) -> &mut Cursor<Vec<u8>> {$/;"	f
headers_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn headers_mut(&mut self) -> &mut HeaderMap {$/;"	P	implementation:Request
headers_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    pub fn headers_mut(&mut self) -> &mut HeaderMap {$/;"	P	implementation:Response
headers_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub fn headers_mut(&mut self) -> &mut HeaderMap {$/;"	P	implementation:Part
headers_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn headers_mut(&mut self) -> &mut HeaderMap {$/;"	P	implementation:Request
heap_size_of_children	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    fn heap_size_of_children(&self) -> usize {$/;"	P	implementation:Host
heap_size_of_children	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn heap_size_of_children(&self) -> usize {$/;"	P	implementation:Url
heap_size_of_children	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/origin.rs	/^    fn heap_size_of_children(&self) -> usize {$/;"	P	implementation:Origin
hi	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    hi: u8x32,$/;"	m	struct:Mask
hi	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    hi: u8x16,$/;"	m	struct:Mask
hidden	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn hidden() -> ProgressBar {$/;"	P	implementation:ProgressBar
hidden	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn hidden() -> ProgressDrawTarget {$/;"	P	implementation:ProgressDrawTarget
hole	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    hole: Hole,$/;"	m	struct:Patch
home_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^pub fn home_dir() -> Option<PathBuf> {$/;"	f
home_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^pub fn home_dir()       -> Option<PathBuf> { unix::home_dir() }$/;"	f
home_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/mac.rs	/^pub fn home_dir()       -> Option<PathBuf> { unix::home_dir() }$/;"	f
home_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^pub fn home_dir() -> Option<PathBuf> {$/;"	f
home_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/unix.rs	/^pub fn home_dir() -> Option<PathBuf> {$/;"	f
home_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^pub fn home_dir()       -> Option<PathBuf> { known_folder(&knownfolders::FOLDERID_Profile) }$/;"	f
host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    host: String,$/;"	m	struct:GaiBlocking
host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    host: String,$/;"	m	struct:Name
host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    pub fn host(&self) -> &str {$/;"	P	implementation:Destination
host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^        fn host(&self) -> &str {$/;"	P	implementation:tests::Url
host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    fn host(&self) -> &str {$/;"	P	implementation:Destination
host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    fn host(&self) -> &str;$/;"	P	interface:Dst
host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    pub host: Host<S>,$/;"	m	struct:HostAndPort
host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    host: HostInternal,$/;"	m	struct:Url
host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn host(&self) -> Option<Host<&str>> {$/;"	P	implementation:Url
host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^mod host;$/;"	n
host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn host(url: &Url) -> &str {$/;"	f
host_end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    host_end: u32,$/;"	m	struct:Url
host_start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    host_start: u32,$/;"	m	struct:Url
host_str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn host_str(&self) -> Option<&str> {$/;"	P	implementation:Url
hostname	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn hostname(url: &Url) -> &str {$/;"	f
hostname_verification	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    hostname_verification: bool,$/;"	m	struct:Config
href	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn href(url: &Url) -> &str {$/;"	f
html	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn html(&self) -> String {$/;"	P	implementation:Node
http	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^#[cfg(feature = "runtime")] mod http;$/;"	n
http	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    http: HttpConnector,$/;"	m	struct:Connector
http	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    http: HttpsConnector<HttpConnector>,$/;"	m	struct:Connector
http	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    pub fn http<U: IntoUrl>(url: U) -> ::Result<Proxy> {$/;"	P	implementation:Proxy
http1_half_close	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn http1_half_close(&mut self, val: bool) -> &mut Self {$/;"	P	implementation:Http
http1_half_close	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn http1_half_close(mut self, val: bool) -> Self {$/;"	P	implementation:Builder
http1_keepalive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn http1_keepalive(mut self, val: bool) -> Self {$/;"	P	implementation:Builder
http1_only	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn http1_only(&mut self, val: bool) -> &mut Self {$/;"	P	implementation:Http
http1_only	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn http1_only(mut self, val: bool) -> Self {$/;"	P	implementation:Builder
http1_pipeline_flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn http1_pipeline_flush(mut self, val: bool) -> Self {$/;"	P	implementation:Builder
http1_read_buf_exact_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pub fn http1_read_buf_exact_size(&mut self, sz: usize) -> &mut Self {$/;"	P	implementation:Builder
http1_title_case_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pub fn http1_title_case_headers(&mut self, val: bool) -> &mut Self {$/;"	P	implementation:Builder
http1_writev	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pub fn http1_writev(&mut self, val: bool) -> &mut Self {$/;"	P	implementation:Builder
http1_writev	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn http1_writev(&mut self, val: bool) -> &mut Self {$/;"	P	implementation:Http
http1_writev	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn http1_writev(mut self, val: bool) -> Self {$/;"	P	implementation:Builder
http2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    http2: bool,$/;"	m	struct:Builder
http2_only	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub fn http2_only(&mut self, enabled: bool) -> &mut Builder {$/;"	P	implementation:Builder
http2_only	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pub fn http2_only(&mut self, val: bool) -> &mut Self {$/;"	P	implementation:Builder
http2_only	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn http2_only(&mut self, val: bool) -> &mut Self {$/;"	P	implementation:Http
http2_only	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn http2_only(mut self, val: bool) -> Self {$/;"	P	implementation:Builder
https	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    pub fn https<U: IntoUrl>(url: U) -> ::Result<Proxy> {$/;"	P	implementation:Proxy
hyper	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    hyper: HyperClient,$/;"	m	struct:ClientRef
identity	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn identity(mut self, identity: Identity) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
identity	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn identity(self, identity: Identity) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
idle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    idle: HashMap<Key, Vec<Idle<T>>>,$/;"	m	struct:PoolInner
idle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn idle(&mut self) {$/;"	P	implementation:KA
idle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn idle<T: Http1Transaction>(&mut self) {$/;"	P	implementation:State
idle_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    idle_at: Instant,$/;"	m	struct:Idle
idle_count	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    pub(super) fn idle_count(&self, key: &Key) -> usize {$/;"	P	implementation:Pool
idle_interval_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    idle_interval_ref: Option<oneshot::Sender<::common::Never>>,$/;"	m	struct:PoolInner
idx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    idx: usize,$/;"	m	struct:SubCapturesPosIter
ignore_whitespace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_builder.rs	/^    pub ignore_whitespace: bool,$/;"	m	struct:RegexOptions
imp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    imp: ErrorImpl,$/;"	m	struct:Error
imp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/mod.rs	/^mod imp;$/;"	n
imp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/mod.rs	/^mod imp;$/;"	n
impl_is_minus_one	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/mod.rs	/^macro_rules! impl_is_minus_one {$/;"	M
in_flight	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    in_flight: Option<S::Future>,$/;"	m	struct:Server
in_flight	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    in_flight: ResponseFuture,$/;"	m	struct:PendingRequest
inc	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn inc(&self, delta: u64) {$/;"	P	implementation:ProgressBar
incoming	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    incoming: I,$/;"	m	struct:Serve
incoming	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    incoming: I,$/;"	m	struct:Builder
incoming_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn incoming_mut(&mut self) -> &mut I {$/;"	P	implementation:Serve
incoming_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn incoming_ref(&self) -> &I {$/;"	P	implementation:Serve
incoming_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub(super) fn incoming_ref(&self) -> &I {$/;"	P	implementation:SpawnAll
incr_power_of_two	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^fn incr_power_of_two(n: usize) -> usize {$/;"	f
index	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn index(&self, i: usize) -> &[u8] {$/;"	P	implementation:Captures
index	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn index<'a>(&'a self, name: &'i str) -> &'a [u8] {$/;"	P	implementation:Captures
index	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn index(&self, i: usize) -> &str {$/;"	P	implementation:Captures
index	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn index<'a>(&'a self, name: &'i str) -> &'a str {$/;"	P	implementation:Captures
index	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    index: usize,$/;"	m	struct:Node
index	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn index(&self) -> usize {$/;"	P	implementation:Node
index	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub index: usize,$/;"	m	struct:Raw
index	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    fn index(&self, _: RangeFull) -> &str {$/;"	P	implementation:Url
index	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    fn index(&self, position: Position) -> usize {$/;"	P	implementation:Url
index	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    fn index(&self, range: Range<Position>) -> &str {$/;"	P	implementation:Url
index	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    fn index(&self, range: RangeFrom<Position>) -> &str {$/;"	P	implementation:Url
index	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/slicing.rs	/^    fn index(&self, range: RangeTo<Position>) -> &str {$/;"	P	implementation:Url
inlp	/home/doc/Code/Git/oracle/src/work.rs	/^pub fn inlp() -> usize {$/;"	f
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl.rs	/^    inner: Box<Inner<Fail>>,$/;"	m	struct:ErrorImpl
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    inner: &'static mut Inner,$/;"	m	struct:ErrorImpl
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    inner: &'static mut Inner,$/;"	m	struct:Error
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/sync_failure.rs	/^    inner: Mutex<T>,$/;"	m	struct:SyncFailure
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    inner: <Bytes as IntoIterator>::IntoIter,$/;"	m	struct:IntoIter
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    inner: Box<Future<Item=Response<Body>, Error=::Error> + Send>,$/;"	m	struct:ResponseFuture
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    inner: Option<ConnEither<T, B>>,$/;"	m	struct:Connection
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    inner: IpAddrs,$/;"	m	struct:GaiAddrs
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    inner: mpsc::UnboundedReceiver<Envelope<T, U>>,$/;"	m	struct:Receiver
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    inner: mpsc::UnboundedSender<Envelope<T, U>>,$/;"	m	struct:Sender
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    inner: mpsc::UnboundedSender<Envelope<T, U>>,$/;"	m	struct:UnboundedSender
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    inner: Box<Future<Item=Response<Body>, Error=::Error> + Send>,$/;"	m	struct:ResponseFuture
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    inner: Option<Arc<Mutex<PoolInner<T>>>>,$/;"	m	struct:Pool
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    inner: T,$/;"	m	struct:Rewind
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/lazy.rs	/^    inner: Inner<F, R::Future>$/;"	m	struct:Lazy
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    inner: Box<ErrorImpl>,$/;"	m	struct:Error
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    inner: Arc<Mutex<DuplexInner>>,$/;"	m	struct:Duplex
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    inner: Arc<Mutex<DuplexInner>>,$/;"	m	struct:DuplexHandle
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    inner: T,$/;"	m	struct:AsyncIo
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    inner: &'a mut WriteBuf<B>,$/;"	m	struct:WriteBufAuto
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/rt.rs	/^mod inner {$/;"	n
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^        inner: TcpStream,$/;"	m	struct:addr_stream::AddrStream
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    inner: CacheInner,$/;"	m	struct:Cache
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    inner: ::hyper::Chunk,$/;"	m	struct:Chunk
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    inner: Inner,$/;"	m	struct:Body
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    inner: Arc<ClientRef>,$/;"	m	struct:Client
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    inner: PendingInner,$/;"	m	struct:Pending
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    inner: Box<gzip::Decoder<Peeked<ReadableChunks<Body>>>>,$/;"	m	struct:Gzip
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    inner: Inner$/;"	m	struct:Decoder
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    inner: R,$/;"	m	struct:Peeked
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    inner: Arc<InnerClientHandle>$/;"	m	struct:ClientHandle
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    inner: ClientHandle,$/;"	m	struct:Client
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    inner: async_impl::ClientBuilder,$/;"	m	struct:ClientBuilder
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^    inner: MidHandshake<S>,$/;"	m	struct:ConnectAsync
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^    inner: Option<Result<native_tls::TlsStream<S>, HandshakeError<S>>>,$/;"	m	struct:MidHandshake
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^    inner: native_tls::TlsStream<S>,$/;"	m	struct:TlsStream
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    inner: Box<Inner>,$/;"	m	struct:Error
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    inner: Action,$/;"	m	struct:RedirectAction
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    inner: Policy,$/;"	m	struct:RedirectPolicy
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    inner: async_impl::Request,$/;"	m	struct:Request
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    inner: async_impl::Response,$/;"	m	struct:Response
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    inner: wait::WaitStream<async_impl::Decoder>$/;"	m	struct:WaitBody
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    inner: bit_set::Iter<'sel, u32>,$/;"	m	struct:Iter
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    inner: EventsAndRaw<R>$/;"	m	struct:Events
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    inner: Parse<'a>$/;"	m	struct:ParseIntoOwned
inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    inner: ErrorInner,$/;"	m	struct:Error
inner	/home/doc/Code/Git/oracle/src/download.rs	/^    inner: R,$/;"	m	struct:DownloadProgress
inner_html	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn inner_html(&self) -> String {$/;"	P	implementation:Node
ino	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    ino: u64,$/;"	m	struct:DirEntry
ino	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/unix.rs	/^    fn ino(&self) -> u64 {$/;"	P	implementation:DirEntry
ino	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/unix.rs	/^    fn ino(&self) -> u64;$/;"	P	interface:DirEntryExt
input	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^    input: I,$/;"	m	struct:Bounded
input	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod input;$/;"	n
input	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    input: I,$/;"	m	struct:Fsm
input	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/lib.rs	/^pub mod input;$/;"	n
input	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    input: &'a [u8],$/;"	m	struct:Parse
insert	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn insert(&mut self, state: State, si: StatePtr) {$/;"	P	implementation:StateMap
insert	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^    pub fn insert(&mut self, value: usize) {$/;"	P	implementation:SparseSet
inst_ptrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn inst_ptrs(&self) -> InstPtrs {$/;"	P	implementation:State
insts	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    insts: Vec<MaybeInst>,$/;"	m	struct:Compiler
insts	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub insts: Vec<Inst>,$/;"	m	struct:Program
insts_scratch_space	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    insts_scratch_space: Vec<u8>,$/;"	m	struct:CacheInner
intercept	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    intercept: Intercept,$/;"	m	struct:Proxy
intercept	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    pub(crate) fn intercept<D: Dst>(&self, uri: &D) -> Option<::hyper::Uri> {$/;"	P	implementation:Proxy
internal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/mod.rs	/^pub(crate) mod internal {$/;"	n
internal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^pub mod internal {$/;"	n
interval	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    interval: Interval,$/;"	m	struct:IdleInterval
into_async	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    pub(crate) fn into_async(self) -> (Option<Sender>, async_impl::Body, Option<u64>) {$/;"	P	implementation:Body
into_async	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub(crate) fn into_async(self) -> (async_impl::Request, Option<body::Sender>) {$/;"	P	implementation:Request
into_body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    pub fn into_body(self) -> Decoder {$/;"	P	implementation:Response
into_byte_regex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn into_byte_regex(self) -> re_bytes::Regex {$/;"	P	implementation:Exec
into_byte_regex_set	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn into_byte_regex_set(self) -> re_set::bytes::RegexSet {$/;"	P	implementation:Exec
into_bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    pub fn into_bytes(self) -> Bytes {$/;"	P	implementation:Chunk
into_cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub fn into_cause(self) -> Option<Box<StdError + Sync + Send>> {$/;"	P	implementation:Error
into_future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    fn into_future(self) -> Self::Future {$/;"	P	implementation:ServiceFn
into_future	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^    fn into_future(self) -> Self::Future {$/;"	P	implementation:ServiceFnOk
into_http2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub(super) fn into_http2(self) -> Http2SendRequest<B> {$/;"	P	implementation:SendRequest
into_hyper	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    pub(crate) fn into_hyper(self) -> (Option<Bytes>, ::hyper::Body) {$/;"	P	implementation:Body
into_inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/compat.rs	/^    pub fn into_inner(self) -> E {$/;"	P	implementation:Compat
into_inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    pub(crate) fn into_inner(self) -> (T, Bytes) {$/;"	P	implementation:Rewind
into_inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn into_inner(self) -> (I, Bytes) {$/;"	f
into_inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    pub fn into_inner(self) -> (I, Bytes, D) {$/;"	f
into_inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub fn into_inner(self) -> (T, Bytes) {$/;"	f
into_io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^pub(crate) fn into_io(e: Error) -> io::Error {$/;"	f
into_io_error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn into_io_error(self) -> Option<io::Error> {$/;"	P	implementation:Error
into_iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:Chunk
into_iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    fn into_iter(self) -> Self::IntoIter { self.iter() }$/;"	P	implementation:Program
into_iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^    fn into_iter(self) -> Self::IntoIter { self.iter() }$/;"	P	implementation:SparseSet
into_iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:Chunk
into_iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:Selection
into_iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn into_iter(self) -> IntoIter {$/;"	P	implementation:WalkDir
into_opt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^        pub(crate) fn into_opt(self) -> Option<u64> {$/;"	P	implementation:body_length::DecodedLength
into_owned	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    pub fn into_owned(self) -> ParseIntoOwned<'a> {$/;"	P	implementation:Parse
into_parts	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub fn into_parts(self) -> Parts<T> {$/;"	f
into_parts	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn into_parts(self) -> Parts<I, S> {$/;"	f
into_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn into_path(self) -> PathBuf {$/;"	P	implementation:DirEntry
into_raw_mode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^    fn into_raw_mode(self) -> io::Result<RawTerminal<Self>>;$/;"	P	interface:IntoRawMode
into_raw_mode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^    fn into_raw_mode(self) -> io::Result<RawTerminal<W>> {$/;"	P	implementation:W
into_reader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    pub(crate) fn into_reader(self) -> Reader {$/;"	P	implementation:Body
into_regex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn into_regex(self) -> re_unicode::Regex {$/;"	P	implementation:Exec
into_regex_set	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn into_regex_set(self) -> re_set::unicode::RegexSet {$/;"	P	implementation:Exec
into_searcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pattern.rs	/^    fn into_searcher(self, haystack: &'t str) -> RegexSearcher<'r, 't> {$/;"	P	implementation:Regex
into_selection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^    pub fn into_selection(self) -> Selection<'a> {$/;"	P	implementation:Find
into_selection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn into_selection(self) -> Selection<'a> {$/;"	P	implementation:Children
into_selection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn into_selection(self) -> Selection<'a> {$/;"	P	implementation:Find
into_service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    pub fn into_service(self) -> S {$/;"	f
into_string	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn into_string(self) -> String {$/;"	P	implementation:Url
into_url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/into_url.rs	/^    fn into_url(self) -> ::Result<Url> {$/;"	P	implementation:String
into_url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/into_url.rs	/^    fn into_url(self) -> ::Result<Url> {$/;"	P	implementation:Url
into_url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/into_url.rs	/^    fn into_url(self) -> ::Result<Url> {$/;"	P	implementation:str
into_url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/into_url.rs	/^    fn into_url(self) -> ::Result<Url>;$/;"	P	interface:PolyfillTryInto
into_url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^mod into_url;$/;"	n
into_url_file_scheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/into_url.rs	/^    fn into_url_file_scheme() {$/;"	f	module:tests
invalid_url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^fn invalid_url<R: Resolve>(err: InvalidUrl, handle: &Option<Handle>) -> HttpConnecting<R> {$/;"	f
io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    io: Option<T>,$/;"	m	struct:Handshake
io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub io: T,$/;"	m	struct:Parts
io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/mod.rs	/^pub(crate) mod io;$/;"	n
io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    io: Buffered<I, EncodedBuf<B>>,$/;"	m	struct:Conn
io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    io: T,$/;"	m	struct:Buffered
io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^mod io;$/;"	n
io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    io: Option<I>,$/;"	m	struct:Connecting
io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub io: T,$/;"	m	struct:Parts
io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    io: Rewind<Box<Io + Send>>,$/;"	m	struct:Upgraded
io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    pub io: T,$/;"	m	struct:Parts
io_error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^fn io_error<T>(reason: &str) -> io::Result<T> {$/;"	f
io_error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn io_error(&self) -> Option<&io::Error> {$/;"	P	implementation:Error
io_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub(super) fn io_mut(&mut self) -> &mut I {$/;"	f
io_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub fn io_mut(&mut self) -> &mut T {$/;"	f
io_timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^fn io_timeout() -> io::Error {$/;"	f
iobuf_write_empty_slice	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn iobuf_write_empty_slice() {$/;"	f	module:tests
is	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn is<P: Predicate>(&self, p: P) -> bool {$/;"	P	implementation:Node
is_absolute_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^fn is_absolute_path(path: OsString) -> Option<PathBuf> {$/;"	f
is_absolute_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^fn is_absolute_path(path: OsString) -> Option<PathBuf> {$/;"	f
is_anchor_end_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn is_anchor_end_match(&self, text: &[u8]) -> bool {$/;"	P	implementation:ExecNoSync
is_anchored_end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub is_anchored_end: bool,$/;"	m	struct:Program
is_anchored_start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub is_anchored_start: bool,$/;"	m	struct:Program
is_ascii_hex_digit	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^fn is_ascii_hex_digit(c: char) -> bool {$/;"	f
is_ascii_word	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn is_ascii_word(&self) -> bool {$/;"	P	implementation:Byte
is_backtrace_enabled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^fn is_backtrace_enabled<F: Fn(&str) -> Option<OsString>>(get_var: F) -> bool {$/;"	f
is_bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub is_bytes: bool,$/;"	m	struct:Program
is_canceled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub fn is_canceled(&self) -> bool {$/;"	P	implementation:Error
is_chunked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/headers.rs	/^pub fn is_chunked(mut encodings: ValueIter<HeaderValue>) -> bool {$/;"	f
is_chunked_	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/headers.rs	/^pub fn is_chunked_(value: &HeaderValue) -> bool {$/;"	f
is_client_error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    pub fn is_client_error(&self) -> bool {$/;"	P	implementation:Error
is_closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub(super) fn is_closed(&self) -> bool {$/;"	P	implementation:Http2SendRequest
is_closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub(super) fn is_closed(&self) -> bool {$/;"	P	implementation:SendRequest
is_closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    pub fn is_closed(&self) -> bool {$/;"	P	implementation:Sender
is_closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    pub fn is_closed(&self) -> bool {$/;"	P	implementation:UnboundedSender
is_closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn is_closed(&self) -> bool {$/;"	P	implementation:PoolClient
is_closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub fn is_closed(&self) -> bool {$/;"	P	implementation:Error
is_closing	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    is_closing: bool,$/;"	m	struct:Dispatcher
is_connect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub fn is_connect(&self) -> bool {$/;"	P	implementation:Error
is_connection_error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^fn is_connection_error(e: &io::Error) -> bool {$/;"	f
is_dfa	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub is_dfa: bool,$/;"	m	struct:Program
is_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn is_dir(&self) -> bool {$/;"	P	implementation:DirEntry
is_done	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn is_done(&self) -> bool {$/;"	f
is_done	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    fn is_done(&self) -> bool {$/;"	P	implementation:MultiProgress
is_empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    pub(super) fn is_empty(&self) -> bool {$/;"	P	implementation:IpAddrs
is_empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn is_empty(&self) -> bool {$/;"	P	implementation:StateMap
is_empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn is_empty(&self) -> bool { self.len() == 0 }$/;"	P	interface:Input
is_empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:InputAt
is_empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:LiteralSearcher
is_empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:SparseSet
is_empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Input
is_empty_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn is_empty_match(&self, at: InputAt, empty: &InstEmptyLook) -> bool {$/;"	P	implementation:ByteInput
is_empty_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn is_empty_match(&self, at: InputAt, empty: &InstEmptyLook) -> bool {$/;"	P	implementation:CharInput
is_empty_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn is_empty_match(&self, at: InputAt, empty: &InstEmptyLook) -> bool {$/;"	P	implementation:T
is_empty_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn is_empty_match(&self, at: InputAt, empty: &InstEmptyLook) -> bool;$/;"	P	interface:Input
is_enabled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn is_enabled(&self) -> bool {$/;"	P	implementation:Pool
is_end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    pub fn is_end(&self) -> bool {$/;"	P	implementation:InputAt
is_end_stream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn is_end_stream(&self) -> bool {$/;"	P	implementation:Body
is_end_stream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/payload.rs	/^    fn is_end_stream(&self) -> bool {$/;"	P	implementation:Box
is_end_stream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/payload.rs	/^    fn is_end_stream(&self) -> bool {$/;"	P	interface:Payload
is_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    pub fn is_eof(&self) -> bool {$/;"	P	implementation:Decoder
is_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    pub fn is_eof(&self) -> bool {$/;"	P	implementation:Encoder
is_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn is_eof(&self) -> bool { self.0 == 256 }$/;"	P	implementation:Byte
is_file	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn is_file(&self) -> bool {$/;"	P	implementation:SchemeType
is_finished	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn is_finished(&self) -> bool {$/;"	P	implementation:ProgressState
is_hidden	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn is_hidden(&self) -> bool {$/;"	P	implementation:ProgressDrawTarget
is_hidden	/home/doc/Code/Git/oracle/src/work.rs	/^    fn is_hidden(entry: &DirEntry) -> bool {$/;"	f	function:neofetch::find_distros
is_http	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    pub fn is_http(&self) -> bool {$/;"	P	implementation:Error
is_http1	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn is_http1(&self) -> bool {$/;"	P	implementation:PoolClient
is_http2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn is_http2(&self) -> bool {$/;"	P	implementation:PoolClient
is_idle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn is_idle(&self) -> bool {$/;"	P	implementation:State
is_last	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    is_last: bool,$/;"	m	struct:Encoder
is_last	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    pub fn is_last(&self) -> bool {$/;"	P	implementation:Encoder
is_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn is_match(&self) -> bool {$/;"	P	implementation:StateFlags
is_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    pub fn is_match(&self) -> bool {$/;"	P	implementation:Result
is_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub fn is_match(&self) -> bool {$/;"	P	implementation:Inst
is_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn is_match(&self, text: &[u8]) -> bool {$/;"	P	implementation:Regex
is_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn is_match(&self, text: &str) -> bool {$/;"	P	implementation:Regex
is_match_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn is_match_at(&self, text: &[u8], start: usize) -> bool {$/;"	P	implementation:ExecNoSync
is_match_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn is_match_at(&self, text: &str, start: usize) -> bool {$/;"	P	implementation:ExecNoSyncStr
is_match_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn is_match_at(&self, text: &[u8], start: usize) -> bool {$/;"	P	implementation:Regex
is_match_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    fn is_match_at($/;"	P	interface:RegularExpression
is_match_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn is_match_at(&self, text: &str, start: usize) -> bool {$/;"	P	implementation:Regex
is_mid_message	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn is_mid_message(&self) -> bool {$/;"	f
is_minus_one	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/mod.rs	/^    fn is_minus_one(&self) -> bool;$/;"	P	interface:IsMinusOne
is_none	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^    pub(super) fn is_none(&self) -> bool {$/;"	P	implementation:InternalBacktrace
is_none	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    pub(crate) fn is_none(&self) -> bool {$/;"	P	implementation:OnUpgrade
is_none	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    pub fn is_none(self) -> bool { self.0 == u32::MAX }$/;"	P	implementation:Char
is_open	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn is_open(&self) -> bool {$/;"	f
is_open	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^        fn is_open(&self) -> bool {$/;"	P	implementation:tests::CanClose
is_open	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^        fn is_open(&self) -> bool {$/;"	P	implementation:tests::Uniq
is_open	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn is_open(&self) -> bool;$/;"	P	interface:Poolable
is_parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub fn is_parse(&self) -> bool {$/;"	P	implementation:Error
is_pool_enabled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    pub fn is_pool_enabled(&self) -> bool {$/;"	P	implementation:Pooled
is_read_blocked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub fn is_read_blocked(&self) -> bool {$/;"	f
is_read_closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn is_read_closed(&self) -> bool {$/;"	P	implementation:State
is_read_closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn is_read_closed(&self) -> bool {$/;"	f
is_ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub(super) fn is_ready(&self) -> bool {$/;"	P	implementation:Http2SendRequest
is_ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub(super) fn is_ready(&self) -> bool {$/;"	P	implementation:SendRequest
is_ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    pub fn is_ready(&self) -> bool {$/;"	P	implementation:Sender
is_ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    pub fn is_ready(&self) -> bool {$/;"	P	implementation:UnboundedSender
is_ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn is_ready(&self) -> bool {$/;"	P	implementation:PoolClient
is_redirect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    pub fn is_redirect(&self) -> bool {$/;"	P	implementation:Error
is_reused	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    is_reused: bool,$/;"	m	struct:Pooled
is_reused	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    pub fn is_reused(&self) -> bool {$/;"	P	implementation:Pooled
is_reverse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub is_reverse: bool,$/;"	m	struct:Program
is_same	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn is_same(&self, child: &Handle) -> io::Result<bool> {$/;"	P	implementation:Ancestor
is_same_file_system	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn is_same_file_system(&mut self, dent: &DirEntry) -> Result<bool> {$/;"	P	implementation:IntoIter
is_serialization	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    pub fn is_serialization(&self) -> bool {$/;"	P	implementation:Error
is_server_error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    pub fn is_server_error(&self) -> bool {$/;"	P	implementation:Error
is_set	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn is_set(self) -> bool {$/;"	P	implementation:ViolationFn
is_special	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn is_special(&self) -> bool {$/;"	P	implementation:SchemeType
is_start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    pub fn is_start(&self) -> bool {$/;"	P	implementation:InputAt
is_start_byte	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^fn is_start_byte(b: u8) -> bool {$/;"	f
is_suffix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn is_suffix(&self, text: &[u8]) -> bool {$/;"	P	implementation:FreqyPacked
is_tty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/redox/tty.rs	/^pub fn is_tty<T: AsRawFd>(stream: &T) -> bool {$/;"	f
is_tty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/tty.rs	/^pub fn is_tty<T: AsRawFd>(stream: &T) -> bool {$/;"	f
is_tuple	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/origin.rs	/^    pub fn is_tuple(&self) -> bool {$/;"	P	implementation:Origin
is_url_code_point	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^fn is_url_code_point(c: char) -> bool {$/;"	f
is_user	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub fn is_user(&self) -> bool {$/;"	P	implementation:Error
is_utf8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^    pub fn is_utf8(&self) -> bool {$/;"	P	implementation:EncodingOverride
is_valid_cap_letter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^fn is_valid_cap_letter(b: &u8) -> bool {$/;"	f
is_windows_drive_letter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^fn is_windows_drive_letter(segment: &str) -> bool {$/;"	f
is_word	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn is_word(&self) -> bool {$/;"	P	implementation:StateFlags
is_word_byte	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    pub fn is_word_byte(self) -> bool {$/;"	P	implementation:Char
is_word_char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    pub fn is_word_char(self) -> bool {$/;"	P	implementation:Char
is_write_closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn is_write_closed(&self) -> bool {$/;"	P	implementation:State
is_write_closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn is_write_closed(&self) -> bool {$/;"	f
iso_to_pp	/home/doc/Code/Git/oracle/src/work.rs	/^pub fn iso_to_pp(s: &str) -> String {$/;"	f	function:neofetch
it	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    it: I,$/;"	m	struct:ProgressBarIter
it	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pattern.rs	/^    it: Matches<'r, 't>,$/;"	m	struct:RegexSearcher
it	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    it: SubCapturesPosIter<'c>,$/;"	m	struct:SubCaptureMatches
it	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    it: SubCapturesPosIter<'c>,$/;"	m	struct:SubCaptureMatches
it	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    it: I,$/;"	m	struct:FilterEntry
it	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    it: IntoIter,$/;"	m	struct:WalkEventIter
it_can_wrap_a_reader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    fn it_can_wrap_a_reader() {$/;"	f	module:tests
it_can_wrap_an_iterator	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    fn it_can_wrap_an_iterator() {$/;"	f	module:tests
iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    iter: vec::IntoIter<SocketAddr>,$/;"	m	struct:IpAddrs
iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn iter(&self) -> LiteralIter {$/;"	P	implementation:LiteralSearcher
iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn iter<'c>(&'c self) -> SubCaptureMatches<'c, 't> {$/;"	P	implementation:Captures
iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    pub fn iter(&self) -> SubCapturesPosIter {$/;"	P	implementation:Locations
iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn iter<'c>(&'c self) -> SubCaptureMatches<'c, 't> {$/;"	P	implementation:Captures
iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    pub fn iter<'sel>(&'sel self) -> Iter<'sel, 'a> {$/;"	P	implementation:Selection
iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    iter: Events<R>,$/;"	m	struct:Keys
iter_causes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    pub fn iter_causes(&self) -> Causes {$/;"	P	implementation:Error
iter_causes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    pub fn iter_causes(&self) -> Causes {$/;"	P	implementation:Fail
iter_chain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    pub fn iter_chain(&self) -> Causes {$/;"	P	implementation:Error
iter_chain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    pub fn iter_chain(&self) -> Causes {$/;"	P	implementation:Fail
itry	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^macro_rules! itry {$/;"	M
jobs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^    jobs: Vec<Job>,$/;"	m	struct:Cache
join	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn join(&self) -> io::Result<()> {$/;"	P	implementation:MultiProgress
join	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn join(&self, input: &str) -> Result<Url, ::ParseError> {$/;"	P	implementation:Url
join_and_clear	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn join_and_clear(&self) -> io::Result<()> {$/;"	P	implementation:MultiProgress
join_impl	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    fn join_impl(&self, clear: bool) -> io::Result<()> {$/;"	P	implementation:MultiProgress
joining	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    joining: AtomicBool,$/;"	m	struct:MultiProgress
json	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn json<T: Serialize + ?Sized>(mut self, json: &T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
json	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    pub fn json<T: DeserializeOwned>(&mut self) -> Json<T> {$/;"	P	implementation:Response
json	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn json<T: Serialize + ?Sized>(mut self, json: &T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
json	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    pub fn json<T: DeserializeOwned>(&mut self) -> ::Result<T> {$/;"	P	implementation:Response
keep_alive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pub fn keep_alive(&mut self, val: bool) -> &mut Self {$/;"	P	implementation:Builder
keep_alive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    keep_alive: KA,$/;"	m	struct:State
keep_alive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    keep_alive: bool,$/;"	m	struct:Encode
keep_alive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    keep_alive: bool,$/;"	m	struct:ParsedMessage
keep_alive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    keep_alive: bool,$/;"	m	struct:Http
keep_alive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn keep_alive(&mut self, val: bool) -> &mut Self {$/;"	P	implementation:Http
keep_alive_timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    keep_alive_timeout: Option<Duration>,$/;"	m	struct:HttpConnecting
keep_alive_timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    keep_alive_timeout: Option<Duration>,$/;"	m	struct:HttpConnector
keep_alive_timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pub fn keep_alive_timeout<D>(&mut self, val: D) -> &mut Self$/;"	P	implementation:Builder
key	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    key: &'a Key,$/;"	m	struct:IdlePopper
key	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    key: Key,$/;"	m	struct:Checkout
key	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    key: Key,$/;"	m	struct:Connecting
key	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    key: Key,$/;"	m	struct:Pooled
key	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    pub key: &'a str,$/;"	m	struct:TemplateVar
key	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    key: SuffixCacheKey,$/;"	m	struct:SuffixCacheEntry
keys	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn keys(self) -> Keys<Self> where Self: Sized;$/;"	P	interface:TermRead
keys	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn keys(self) -> Keys<Self> {$/;"	P	implementation:R
kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    kind: Kind,$/;"	m	struct:Body
kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    kind: Kind,$/;"	m	struct:ErrorImpl
kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn kind(&self) -> &Kind {$/;"	P	implementation:Error
kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    kind: Kind,$/;"	m	struct:Decoder
kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    kind: BufKind<B>,$/;"	m	struct:EncodedBuf
kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    kind: Kind,$/;"	m	struct:Encoder
kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    kind: ProgressDrawTargetKind,$/;"	m	struct:ProgressDrawTarget
kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    kind: Kind,$/;"	m	struct:Body
kind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    kind: Kind,$/;"	m	struct:Inner
known_folder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^fn known_folder(folder_id: shtypes::REFKNOWNFOLDERID) -> Option<PathBuf> {$/;"	f
last	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    last: usize,$/;"	m	struct:Split
last	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    last: usize,$/;"	m	struct:Split
last_cache_flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    last_cache_flush: usize,$/;"	m	struct:Fsm
last_child	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn last_child(&self) -> Option<Node<'a>> {$/;"	P	implementation:Node
last_child	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub last_child: Option<usize>,$/;"	m	struct:Raw
last_element	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    pub last_element: bool,$/;"	m	struct:TemplateVar
last_end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    last_end: usize,$/;"	m	struct:Matches
last_idx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    last_idx: usize,$/;"	m	struct:Estimate
last_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    last_match: Option<usize>,$/;"	m	struct:Matches
last_match_si	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    last_match_si: StatePtr,$/;"	m	struct:Fsm
last_step_end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pattern.rs	/^    last_step_end: usize,$/;"	m	struct:RegexSearcher
lazy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/lazy.rs	/^pub(crate) fn lazy<F, R>(func: F) -> Lazy<F, R>$/;"	f
lazy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/mod.rs	/^mod lazy;$/;"	n
lcp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    lcp: FreqyPacked,$/;"	m	struct:LiteralSearcher
lcp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn lcp(&self) -> &FreqyPacked {$/;"	P	implementation:LiteralSearcher
lcs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    lcs: FreqyPacked,$/;"	m	struct:LiteralSearcher
lcs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn lcs(&self) -> &FreqyPacked {$/;"	P	implementation:LiteralSearcher
leads_to_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub fn leads_to_match(&self, pc: usize) -> bool {$/;"	P	implementation:Program
leftover	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    leftover: Option<u8>,$/;"	m	struct:EventsAndRaw
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    len: u8,$/;"	m	struct:ChunkSize
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    len: u64,$/;"	m	struct:ProgressState
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:StateMap
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn len(&self) -> usize { (**self).len() }$/;"	P	implementation:T
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:ByteInput
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:CharInput
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn len(&self) -> usize;$/;"	P	interface:Input
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    len: usize,$/;"	m	struct:InputAt
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:InputAt
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:BoyerMooreSearch
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:FreqyPacked
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:LiteralSearcher
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/fallback.rs	/^    pub fn len(&self) -> usize { 0 }$/;"	P	implementation:Teddy
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Masks
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Teddy
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/fallback.rs	/^    pub fn len(&self) -> usize { 0 }$/;"	P	implementation:Teddy
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Masks
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Teddy
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:CaptureLocations
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Captures
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Locations
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:CaptureLocations
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Captures
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:SparseSet
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    pub(crate) fn len(&self) -> Option<u64> {$/;"	P	implementation:Body
len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Selection
len_utf8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    pub fn len_utf8(self) -> usize {$/;"	P	implementation:Char
length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    pub fn length(x: u64) -> Decoder {$/;"	P	implementation:Decoder
length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn length() {$/;"	f	module:tests
length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    pub fn length(len: u64) -> Encoder {$/;"	P	implementation:Encoder
limited	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    pub fn limited(max: usize) -> RedirectPolicy {$/;"	P	implementation:RedirectPolicy
lin	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^#[cfg(not(any(target_os = "windows", target_os = "macos", target_os = "redox")))] mod lin;$/;"	n
line_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn line_match(a: &str, b: Option<&str>) {$/;"	f	module:test
lines	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub lines: Vec<String>,$/;"	m	struct:ProgressDrawState
links2	/home/doc/Code/Git/oracle/src/download.rs	/^pub fn links2(url: &str, end: &str) -> Vec<String> {$/;"	f
list	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    list: &'a mut Vec<Idle<T>>,$/;"	m	struct:IdlePopper
list	/home/doc/Code/Git/oracle/src/tests.rs	/^fn list() {$/;"	f
listener	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    listener: TcpListener,$/;"	m	struct:AddrIncoming
literal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod literal;$/;"	n
lo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    lo: u8x32,$/;"	m	struct:Mask
lo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    lo: u8x16,$/;"	m	struct:Mask
load	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    unsafe fn load(slice: &[u8]) -> u8x32 {$/;"	P	implementation:u8x32
load	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    unsafe fn load(slice: &[u8]) -> u8x16 {$/;"	P	implementation:u8x16
load_unaligned	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    unsafe fn load_unaligned(slice: &[u8]) -> u8x32 {$/;"	P	implementation:u8x32
load_unaligned	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    unsafe fn load_unaligned(slice: &[u8]) -> u8x16 {$/;"	P	implementation:u8x16
load_unchecked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    unsafe fn load_unchecked(slice: &[u8]) -> u8x32 {$/;"	P	implementation:u8x32
load_unchecked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    unsafe fn load_unchecked(slice: &[u8]) -> u8x16 {$/;"	P	implementation:u8x16
load_unchecked_unaligned	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    unsafe fn load_unchecked_unaligned(slice: &[u8]) -> u8x32 {$/;"	P	implementation:u8x32
load_unchecked_unaligned	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    unsafe fn load_unchecked_unaligned(slice: &[u8]) -> u8x16 {$/;"	P	implementation:u8x16
local_addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    local_addr: Option<IpAddr>,$/;"	m	struct:ConnectingTcp
local_addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub(super) fn local_addr(&self) -> SocketAddr {$/;"	P	implementation:SpawnAll
local_addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn local_addr(&self) -> SocketAddr {$/;"	P	implementation:Server
local_addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    pub fn local_addr(&self) -> SocketAddr {$/;"	P	implementation:AddrIncoming
local_address	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    local_address: Option<IpAddr>,$/;"	m	struct:HttpConnector
local_ipv4_addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^        fn local_ipv4_addr() -> IpAddr {$/;"	f	function:tests::client_happy_eyeballs
local_ipv6_addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^        fn local_ipv6_addr() -> IpAddr {$/;"	f	function:tests::client_happy_eyeballs
locations	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn locations(&self) -> CaptureLocations {$/;"	P	implementation:Regex
locations	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    fn locations(&self) -> Locations {$/;"	P	interface:RegularExpression
locations	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn locations(&self) -> CaptureLocations {$/;"	P	implementation:Regex
locked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn locked(&self) -> ::std::sync::MutexGuard<PoolInner<T>> {$/;"	P	implementation:Pool
locs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    locs: re_trait::Locations,$/;"	m	struct:Captures
locs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    locs: &'c Locations,$/;"	m	struct:SubCapturesPosIter
locs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    locs: re_trait::Locations,$/;"	m	struct:Captures
log_syntax_violation	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn log_syntax_violation(mut self, new: Option<&'a Fn(&'static str)>) -> Self {$/;"	P	implementation:ParseOptions
look	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub look: EmptyLook,$/;"	m	struct:InstEmptyLook
lookup	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^    pub fn lookup(label: &[u8]) -> Option<Self> {$/;"	P	implementation:EncodingOverride
loop_ancestor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn loop_ancestor(&self) -> Option<&Path> {$/;"	P	implementation:Error
loop_detected	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^pub(crate) fn loop_detected(url: Url) -> Error {$/;"	f
loop_detected	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    pub fn loop_detected(self) -> RedirectAction {$/;"	P	implementation:RedirectAttempt
m	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^    m: &'a mut Cache,$/;"	m	struct:Bounded
mac	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^#[cfg(target_os = "macos")]                                                       mod mac;$/;"	n
macros	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/lib.rs	/^mod macros;$/;"	n
main	/home/doc/Code/Git/oracle/src/main.rs	/^fn main() {$/;"	f
make_referer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^fn make_referer(next: &Url, previous: &Url) -> Option<HeaderValue> {$/;"	f
make_service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    make_service: S,$/;"	m	struct:Serve
make_service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    fn make_service(&mut self, ctx: &'c Ctx) -> Self::Future {$/;"	f
make_service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    fn make_service(&mut self, ctx: Ctx) -> Self::Future;$/;"	P	interface:MakeService
make_service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/mod.rs	/^mod make_service;$/;"	n
make_service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    fn make_service(&mut self, _: Ctx) -> Self::Future {$/;"	f
make_service_fn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^pub fn make_service_fn<F, Ctx, Ret>(f: F) -> MakeServiceFn<F>$/;"	f
make_service_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    fn make_service_ref(&mut self, ctx: &Ctx) -> Self::Future {$/;"	f
make_service_ref	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^    fn make_service_ref(&mut self, ctx: &Ctx) -> Self::Future;$/;"	P	interface:MakeServiceRef
manual	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    pub(crate) fn manual(self) {$/;"	P	implementation:Pending
many_matches_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn many_matches_at($/;"	P	implementation:ExecNoSync
map	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    map: HashMap<State, StatePtr>,$/;"	m	struct:StateMap
map	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    pub fn map<U, F: FnMut(T) -> U>(self, mut f: F) -> Result<U> {$/;"	P	implementation:Result
map_with_reused	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn map_with_reused(conn_reused: bool)$/;"	P	implementation:ClientError
masks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    masks: Masks,$/;"	m	struct:Teddy
masks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    masks: [Mask; 3],$/;"	m	struct:Masks
masks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    masks: Masks,$/;"	m	struct:Teddy
masks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    masks: [Mask; 3],$/;"	m	struct:Masks
match_nfa	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn match_nfa($/;"	P	implementation:ExecNoSync
match_nfa_type	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn match_nfa_type($/;"	P	implementation:ExecNoSync
match_type	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    match_type: MatchType,$/;"	m	struct:ExecReadOnly
match_type	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    match_type: Option<MatchType>,$/;"	m	struct:ExecBuilder
matcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    matcher: Matcher,$/;"	m	struct:LiteralSearcher
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^    matches: &'m mut [bool],$/;"	m	struct:Bounded
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub fn matches(&self, byte: u8) -> bool {$/;"	P	implementation:InstBytes
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub fn matches(&self, c: Char) -> bool {$/;"	P	implementation:InstRanges
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub matches: Vec<InstPtr>,$/;"	m	struct:Program
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn matches(&self, _: &Node) -> bool {$/;"	P	implementation:Any
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn matches(&self, node: &Node) -> bool {$/;"	P	implementation:And
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn matches(&self, node: &Node) -> bool {$/;"	P	implementation:Attr
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn matches(&self, node: &Node) -> bool {$/;"	P	implementation:Child
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn matches(&self, node: &Node) -> bool {$/;"	P	implementation:Class
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn matches(&self, node: &Node) -> bool {$/;"	P	implementation:Comment
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn matches(&self, node: &Node) -> bool {$/;"	P	implementation:Descendant
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn matches(&self, node: &Node) -> bool {$/;"	P	implementation:Element
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn matches(&self, node: &Node) -> bool {$/;"	P	implementation:F
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn matches(&self, node: &Node) -> bool {$/;"	P	implementation:Name
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn matches(&self, node: &Node) -> bool {$/;"	P	implementation:Not
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn matches(&self, node: &Node) -> bool {$/;"	P	implementation:Or
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn matches(&self, node: &Node) -> bool {$/;"	P	implementation:Text
matches	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn matches(&self, node: &Node) -> bool;$/;"	P	interface:Predicate
max	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn max(&self) -> usize {$/;"	P	implementation:ReadStrategy
max_buf_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    max_buf_size: usize,$/;"	m	struct:WriteBuf
max_buf_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    max_buf_size: Option<usize>,$/;"	m	struct:Http
max_buf_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn max_buf_size(&mut self, max: usize) -> &mut Self {$/;"	P	implementation:Http
max_depth	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    max_depth: usize,$/;"	m	struct:WalkDirOptions
max_depth	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn max_depth(mut self, depth: usize) -> Self {$/;"	P	implementation:WalkDir
max_idle_per_host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pub fn max_idle_per_host(&mut self, max_idle: usize) -> &mut Self {$/;"	P	implementation:Builder
max_idle_per_host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    max_idle_per_host: usize,$/;"	m	struct:PoolInner
max_open	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    max_open: usize,$/;"	m	struct:WalkDirOptions
max_open	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn max_open(mut self, mut n: usize) -> Self {$/;"	P	implementation:WalkDir
max_read_vecs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    max_read_vecs: usize,$/;"	m	struct:AsyncIo
max_read_vecs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub fn max_read_vecs(&mut self, cnt: usize) {$/;"	P	implementation:AsyncIo
maybe_notify	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn maybe_notify(&mut self) {$/;"	f
md2_shift	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    md2_shift: usize,$/;"	m	struct:BoyerMooreSearch
measure_connect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^        fn measure_connect(addr: IpAddr) -> (bool, Duration) {$/;"	f	function:tests::client_happy_eyeballs
mem_size_of	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn mem_size_of() {$/;"	f	module:tests
members1	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    fn members1(&self, haystack_block: u8x32) -> u8x32 {$/;"	P	implementation:Masks
members1	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    fn members1(&self, haystack_block: u8x16) -> u8x16 {$/;"	P	implementation:Masks
members2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    fn members2(&self, haystack_block: u8x32) -> (u8x32, u8x32) {$/;"	P	implementation:Masks
members2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    fn members2(&self, haystack_block: u8x16) -> (u8x16, u8x16) {$/;"	P	implementation:Masks
members3	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    fn members3(&self, haystack_block: u8x32) -> (u8x32, u8x32, u8x32) {$/;"	P	implementation:Masks
members3	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    fn members3(&self, haystack_block: u8x16) -> (u8x16, u8x16, u8x16) {$/;"	P	implementation:Masks
message	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    message: String,$/;"	m	struct:ProgressState
message	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn message(&self) -> &str {$/;"	P	implementation:ProgressState
metadata	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    metadata: fs::Metadata,$/;"	m	struct:DirEntry
metadata	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn metadata(&self) -> Result<fs::Metadata> {$/;"	P	implementation:DirEntry
metadata_internal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn metadata_internal(&self) -> Result<fs::Metadata> {$/;"	P	implementation:DirEntry
method	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    method: Option<Method>,$/;"	m	struct:State
method	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    method: Method,$/;"	m	struct:PendingRequest
method	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    method: Method,$/;"	m	struct:Request
method	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn method(&self) -> &Method {$/;"	P	implementation:Request
method	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn method(&self) -> &Method {$/;"	P	implementation:Request
method_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn method_mut(&mut self) -> &mut Method {$/;"	P	implementation:Request
method_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn method_mut(&mut self) -> &mut Method {$/;"	P	implementation:Request
methods_seem_to_work	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    fn methods_seem_to_work() {$/;"	f	module:test
methods_seem_to_work	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    fn methods_seem_to_work() {$/;"	f	module:test
mid_message_detect_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn mid_message_detect_eof(&mut self) -> io::Result<()> {$/;"	f
mime	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fn mime(mut self, mime: Mime) -> Part {$/;"	P	implementation:Part
mime	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    mime: Option<Mime>,$/;"	m	struct:Part
mime_str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub fn mime_str(mut self, mime: &str) -> ::Result<Part> {$/;"	P	implementation:Part
min_depth	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    min_depth: usize,$/;"	m	struct:WalkDirOptions
min_depth	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn min_depth(mut self, depth: usize) -> Self {$/;"	P	implementation:WalkDir
mock	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/lib.rs	/^mod mock;$/;"	n
mock	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub fn mock(&mut self, key: &str) -> DuplexHandle {$/;"	P	implementation:MockConnector
mock_fut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub fn mock_fut<F>(&mut self, key: &str, fut: F) -> DuplexHandle$/;"	P	implementation:MockConnector
mock_opts	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub fn mock_opts<F>(&mut self, key: &str, connected: Connected, fut: F) -> DuplexHandle$/;"	P	implementation:MockConnector
mock_tunnel	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    macro_rules! mock_tunnel {$/;"	M	module:tests
mocks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    mocks: Mutex<HashMap<String, Vec<BoxedConnectFut>>>,$/;"	m	struct:MockConnector
mode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    mode: ConnectionMode,$/;"	m	struct:Http
move_cursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    move_cursor: bool,$/;"	m	struct:MultiProgressState
move_cursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn move_cursor(&self, term: &Term) -> io::Result<()> {$/;"	P	implementation:ProgressDrawState
move_cursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub move_cursor: bool,$/;"	m	struct:ProgressDrawState
movemask	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    pub fn movemask(self) -> u32 {$/;"	P	implementation:u8x32
movemask	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    pub fn movemask(self) -> u32 {$/;"	P	implementation:u8x16
msg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error_message.rs	/^    msg: D,$/;"	m	struct:ErrorMessage
multi_line	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_builder.rs	/^    pub multi_line: bool,$/;"	m	struct:RegexOptions
multipart	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^pub mod multipart;$/;"	n
multipart	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn multipart(self, mut multipart: ::multipart::Form) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
mutate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn mutate<F: FnOnce(&mut Parser) -> R, R>(&mut self, f: F) -> R {$/;"	P	implementation:Url
n	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    n: usize,$/;"	m	struct:SplitN
n	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    n: usize,$/;"	m	struct:SplitN
naive_find	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn naive_find(needle: &[u8], haystack: &[u8]) -> Option<usize> {$/;"	f	module:tests
name	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    name: Name,$/;"	m	struct:TokioThreadpoolGaiFuture
name	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    name: (usize, usize),$/;"	m	struct:HeaderIndices
name	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn name(&self, name: &str) -> Option<Match<'t>> {$/;"	P	implementation:Captures
name	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn name(&self, name: &str) -> Option<Match<'t>> {$/;"	P	implementation:Captures
name	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn name(&self) -> Option<&'a str> {$/;"	P	implementation:Node
name	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^    pub fn name(&self) -> &'static str {$/;"	P	implementation:EncodingOverride
name	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    fn name(&self) -> &Path {$/;"	P	implementation:Tree
named_groups	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    named_groups: Arc<HashMap<String, usize>>,$/;"	m	struct:Captures
named_groups	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    named_groups: Arc<HashMap<String, usize>>,$/;"	m	struct:Captures
ne	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    pub fn ne(self, other: u8x32) -> u8x32 {$/;"	P	implementation:u8x32
ne	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    pub fn ne(self, other: u8x16) -> u8x16 {$/;"	P	implementation:u8x16
needs_dotstar	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub fn needs_dotstar(&self) -> bool {$/;"	P	implementation:Program
negotiated_h2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    pub fn negotiated_h2(mut self) -> Connected {$/;"	P	implementation:Connected
neofetch	/home/doc/Code/Git/oracle/src/work.rs	/^pub fn neofetch() -> String {$/;"	f
nest_limit	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_builder.rs	/^    pub nest_limit: u32,$/;"	m	struct:RegexOptions
never	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/mod.rs	/^mod never;$/;"	n
never_enabled_if_failure_is_set_to_no	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^    fn never_enabled_if_failure_is_set_to_no() {$/;"	f	module:tests
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^    pub(super) fn new() -> InternalBacktrace {$/;"	P	implementation:InternalBacktrace
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/sync_failure.rs	/^    pub fn new(err: E) -> Self {$/;"	P	implementation:SyncFailure
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn new(kind: Kind) -> Body {$/;"	P	implementation:Body
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub fn new() -> Builder {$/;"	P	implementation:Builder
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    pub fn new() -> Self {$/;"	P	implementation:TokioThreadpoolGaiResolver
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    pub fn new(threads: usize) -> Self {$/;"	P	implementation:GaiResolver
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    pub(super) fn new(addrs: Vec<SocketAddr>) -> Self {$/;"	P	implementation:IpAddrs
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    pub(super) fn new(host: String) -> GaiBlocking {$/;"	P	implementation:GaiBlocking
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    pub(super) fn new(host: String) -> Name {$/;"	P	implementation:Name
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    fn new($/;"	P	implementation:ConnectingTcp
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    fn new(addrs: dns::IpAddrs) -> Self {$/;"	P	implementation:ConnectingTcpRemote
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    pub fn new(threads: usize) -> HttpConnector {$/;"	P	implementation:HttpConnector
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    pub fn new() -> Connected {$/;"	P	implementation:Connected
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn new(fut: Box<Future<Item=Response<Body>, Error=::Error> + Send>) -> Self {$/;"	P	implementation:ResponseFuture
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pub fn new() -> Client<HttpConnector, Body> {$/;"	P	implementation:Client
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn new(dur: Option<Duration>) -> Expiration {$/;"	P	implementation:Expiration
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    pub fn new(config: Config, __exec: &Exec) -> Pool<T> {$/;"	P	implementation:Pool
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    pub(crate) fn new(io: T) -> Self {$/;"	P	implementation:Rewind
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new(kind: Kind, cause: Option<Cause>) -> Error {$/;"	P	implementation:Error
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub fn new() -> MockConnector {$/;"	P	implementation:MockConnector
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub fn new(inner: T, bytes: usize) -> AsyncIo<T> {$/;"	P	implementation:AsyncIo
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn new(io: I) -> Conn<I, B, T> {$/;"	f
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/date.rs	/^    fn new() -> Self {$/;"	P	implementation:CachedDate
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    pub(super) fn new(len: DecodedLength) -> Self {$/;"	P	implementation:Decoder
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    pub fn new(dispatch: D, conn: Conn<I, Bs::Data, T>) -> Self {$/;"	f
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    pub fn new(rx: ClientRx<B>) -> Client<B> {$/;"	P	implementation:Client
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    pub fn new(service: S) -> Server<S> {$/;"	f
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn new(kind: Kind) -> Encoder {$/;"	P	implementation:Encoder
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn new(len: usize) -> ChunkSize {$/;"	P	implementation:ChunkSize
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn new() -> BufDeque<T> {$/;"	P	implementation:BufDeque
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn new() -> WriteBuf<B> {$/;"	P	implementation:WriteBuf
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn new(inner: &'a mut WriteBuf<B>) -> WriteBufAuto<'a, B> {$/;"	P	implementation:WriteBufAuto
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub fn new(io: T) -> Buffered<T, B> {$/;"	f
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub(crate) fn new(bytes: T) -> Cursor<T> {$/;"	P	implementation:Cursor
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/client.rs	/^    pub(crate) fn new(io: T, rx: ClientRx<B>, exec: Exec) -> Client<T, B> {$/;"	f
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^    fn new(stream: S, tx: SendStream<SendBuf<S::Data>>) -> PipeToSendStream<S> {$/;"	f
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    fn new(fut: F, respond: SendResponse<SendBuf<B::Data>>) -> H2Stream<F, B> {$/;"	f
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    pub(crate) fn new(io: T, service: S, exec: E) -> Server<T, S, B, E> {$/;"	f
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^        pub(crate) fn new(len: u64) -> Self {$/;"	P	implementation:body_length::DecodedLength
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^        pub(super) fn new(connecting: Connecting<I, N, E>, watcher: W) -> Self {$/;"	P	implementation:spawn_all::NewSvcTask
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn new() -> Http {$/;"	P	implementation:Http
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn new(incoming: I, protocol: Http_<E>) -> Self {$/;"	P	implementation:Builder
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/shutdown.rs	/^    pub(super) fn new(spawn_all: SpawnAll<I, S, E>, signal: F) -> Self {$/;"	P	implementation:Graceful
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^        pub(super) fn new(tcp: TcpStream, addr: SocketAddr) -> AddrStream {$/;"	P	implementation:addr_stream::AddrStream
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    pub(super) fn new(addr: &SocketAddr, handle: Option<&Handle>) -> ::Result<Self> {$/;"	P	implementation:AddrIncoming
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    pub(crate) fn new(io: Box<Io + Send>, read_buf: Bytes) -> Self {$/;"	P	implementation:Upgraded
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn new() -> MultiProgress {$/;"	P	implementation:MultiProgress
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn new(len: u64) -> ProgressBar {$/;"	P	implementation:ProgressBar
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    pub fn new() -> Estimate {$/;"	P	implementation:Estimate
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^    pub fn new(_prog: &Program) -> Self {$/;"	P	implementation:Cache
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn new() -> Self {$/;"	P	implementation:ByteClassSet
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn new(size: usize) -> Self {$/;"	P	implementation:SuffixCache
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Compiler
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn new(num_byte_classes: usize) -> StateMap {$/;"	P	implementation:StateMap
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn new(num_byte_classes: usize) -> Transitions {$/;"	P	implementation:Transitions
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    pub fn new(prog: &Program) -> Self {$/;"	P	implementation:Cache
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn new(ro: &ExecReadOnly) -> Self {$/;"	P	implementation:ProgramCacheInner
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn new(re: &str) -> Self {$/;"	P	implementation:ExecBuilder
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    pub fn new(s: &'t [u8]) -> CharInput<'t> {$/;"	P	implementation:CharInput
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    pub fn new(text: &'t [u8], only_utf8: bool) -> ByteInput<'t> {$/;"	P	implementation:ByteInput
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn new() -> SingleByteSet {$/;"	P	implementation:SingleByteSet
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn new(lits: &Literals, sset: SingleByteSet) -> Self {$/;"	P	implementation:Matcher
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn new(lits: Literals, matcher: Matcher) -> Self {$/;"	P	implementation:LiteralSearcher
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn new(pat: Vec<u8>) -> FreqyPacked {$/;"	P	implementation:FreqyPacked
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn new(pattern: Vec<u8>) -> Self {$/;"	P	implementation:BoyerMooreSearch
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/fallback.rs	/^    pub fn new(_pats: &Literals) -> Option<Teddy> { None }$/;"	P	implementation:Teddy
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    fn new(vb: AVX2VectorBuilder) -> Mask {$/;"	P	implementation:Mask
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    fn new(vb: AVX2VectorBuilder, n: usize) -> Masks {$/;"	P	implementation:Masks
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    pub fn new(pats: &Literals) -> Option<Teddy> {$/;"	P	implementation:Teddy
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/fallback.rs	/^    pub fn new(_pats: &Literals) -> Option<Teddy> { None }$/;"	P	implementation:Teddy
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    fn new(vb: SSSE3VectorBuilder) -> Mask {$/;"	P	implementation:Mask
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    fn new(vb: SSSE3VectorBuilder, n: usize) -> Masks {$/;"	P	implementation:Masks
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    pub fn new(pats: &Literals) -> Option<Teddy> {$/;"	P	implementation:Teddy
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    fn new() -> Self {$/;"	P	implementation:Threads
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    pub fn new(_prog: &Program) -> Self {$/;"	P	implementation:Cache
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Program
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn new(haystack: &'t [u8], start: usize, end: usize) -> Match<'t> {$/;"	P	implementation:Match
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn new(re: &str) -> Result<Regex, Error> {$/;"	P	implementation:Regex
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn new(haystack: &'t str, start: usize, end: usize) -> Match<'t> {$/;"	P	implementation:Match
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn new(re: &str) -> Result<Regex, Error> {$/;"	P	implementation:Regex
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^    pub fn new(size: usize) -> SparseSet {$/;"	P	implementation:SparseSet
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    pub fn new() -> Option<AVX2VectorBuilder> {$/;"	P	implementation:AVX2VectorBuilder
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    pub fn new() -> Option<SSSE3VectorBuilder> {$/;"	P	implementation:SSSE3VectorBuilder
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn new() -> Client {$/;"	P	implementation:Client
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn new() -> ClientBuilder {$/;"	P	implementation:ClientBuilder
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    fn new(inner: R) -> Self {$/;"	P	implementation:Peeked
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    fn new(stream: ReadableChunks<Body>) -> Self {$/;"	P	implementation:Gzip
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    pub(crate) fn new(stream: S) -> Self {$/;"	P	implementation:ReadableChunks
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn new(method: Method, url: Url) -> Self {$/;"	P	implementation:Request
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub(super) fn new(client: Client, request: ::Result<Request>) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    pub(super) fn new(res: ::hyper::Response<::hyper::Body>, url: Url, gzip: bool) -> Response {$/;"	P	implementation:Response
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    pub fn new<R: Read + Send + 'static>(reader: R) -> Body {$/;"	P	implementation:Body
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    fn new(builder: ClientBuilder) -> ::Result<ClientHandle> {$/;"	P	implementation:ClientHandle
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn new() -> Client {$/;"	P	implementation:Client
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn new() -> ClientBuilder {$/;"	P	implementation:ClientBuilder
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    pub(crate) fn new(threads: usize, proxies: Arc<Vec<Proxy>>) -> Connector {$/;"	P	implementation:Connector
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    pub(crate) fn new(threads: usize, tls: TlsConnector, proxies: Arc<Vec<Proxy>>) -> Connector /;"	P	implementation:Connector
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn new(kind: Kind, url: Option<Url>) -> Error {$/;"	P	implementation:Error
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fn new(form: Form) -> Reader {$/;"	P	implementation:Reader
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fn new(value: Body) -> Part {$/;"	P	implementation:Part
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub fn new() -> Form {$/;"	P	implementation:Form
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    fn new(intercept: Intercept) -> Proxy {$/;"	P	implementation:Proxy
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn new(method: Method, url: Url) -> Self {$/;"	P	implementation:Request
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub(crate) fn new(client: Client, request: ::Result<Request>) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    pub(crate) fn new(mut res: async_impl::Response, timeout: Option<Duration>, thread: KeepCore/;"	P	implementation:Response
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn new(document: &'a Document, index: usize) -> Option<Node<'a>> {$/;"	P	implementation:Node
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    pub fn new(document: &'a Document, bit_set: BitSet) -> Selection<'a> {$/;"	P	implementation:Selection
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    pub fn new(target: T) -> Self {$/;"	P	implementation:Serializer
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn new(input: &'i str) -> Self {$/;"	P	implementation:Input
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/path_segments.rs	/^pub fn new(url: &mut Url) -> PathSegmentsMut {$/;"	f
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn new(dent: &DirEntry) -> io::Result<Ancestor> {$/;"	P	implementation:Ancestor
new	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn new<P: AsRef<Path>>(root: P) -> Self {$/;"	P	implementation:WalkDir
new_accept	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_accept<E: Into<Cause>>(cause: E) -> Error {$/;"	P	implementation:Error
new_body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_body<E: Into<Cause>>(cause: E) -> Error {$/;"	P	implementation:Error
new_body_write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_body_write<E: Into<Cause>>(cause: E) -> Error {$/;"	P	implementation:Error
new_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub fn new_buf<T: Into<Vec<u8>>>(buf: T, bytes: usize) -> AsyncIo<MockCursor> {$/;"	P	implementation:AsyncIo
new_buffered	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    pub(crate) fn new_buffered(io: T, buf: Bytes) -> Self {$/;"	P	implementation:Rewind
new_canceled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_canceled<E: Into<Cause>>(cause: Option<E>) -> Error {$/;"	P	implementation:Error
new_channel	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    pub(crate) fn new_channel(content_length: Option<u64>) -> (Sender, Body) {$/;"	P	implementation:Body
new_closed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_closed() -> Error {$/;"	P	implementation:Error
new_connect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_connect<E: Into<Cause>>(cause: E) -> Error {$/;"	P	implementation:Error
new_err	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub(super) fn new_err(err: ::Error) -> Pending {$/;"	P	implementation:Pending
new_execute	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_execute<E: Into<Cause>>(cause: E) -> Error {$/;"	P	implementation:Error
new_h2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_h2(cause: ::h2::Error) -> Error {$/;"	P	implementation:Error
new_header	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_header() -> Error {$/;"	P	implementation:Error
new_incomplete	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_incomplete() -> Error {$/;"	P	implementation:Error
new_io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_io(cause: io::Error) -> Error {$/;"	P	implementation:Error
new_listen	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_listen<E: Into<Cause>>(cause: E) -> Error {$/;"	P	implementation:Error
new_many	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn new_many<I, S>(res: I) -> Self$/;"	P	implementation:ExecBuilder
new_mismatched_response	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_mismatched_response() -> Error {$/;"	P	implementation:Error
new_opaque	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/origin.rs	/^    pub fn new_opaque() -> Origin {$/;"	P	implementation:Origin
new_options	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn new_options(opts: RegexOptions) -> Self {$/;"	P	implementation:ExecBuilder
new_service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/mod.rs	/^mod new_service;$/;"	n
new_service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    fn new_service(&self) -> Self::Future {$/;"	f
new_service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/new_service.rs	/^    fn new_service(&self) -> Self::Future;$/;"	P	interface:NewService
new_shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_shutdown(cause: io::Error) -> Error {$/;"	P	implementation:Error
new_spinner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn new_spinner() -> ProgressBar {$/;"	P	implementation:ProgressBar
new_too_large	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_too_large() -> Error {$/;"	P	implementation:Error
new_user_absolute_uri_required	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_user_absolute_uri_required() -> Error {$/;"	P	implementation:Error
new_user_body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_user_body<E: Into<Cause>>(cause: E) -> Error {$/;"	P	implementation:Error
new_user_manual_upgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_user_manual_upgrade() -> Error {$/;"	P	implementation:Error
new_user_new_service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_user_new_service<E: Into<Cause>>(cause: E) -> Error {$/;"	P	implementation:Error
new_user_no_upgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_user_no_upgrade() -> Error {$/;"	P	implementation:Error
new_user_service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_user_service<E: Into<Cause>>(cause: E) -> Error {$/;"	P	implementation:Error
new_user_unsupported_request_method	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_user_unsupported_request_method() -> Error {$/;"	P	implementation:Error
new_user_unsupported_status_code	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_user_unsupported_status_code() -> Error {$/;"	P	implementation:Error
new_user_unsupported_version	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_user_unsupported_version() -> Error {$/;"	P	implementation:Error
new_version_h2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^    pub(crate) fn new_version_h2() -> Error {$/;"	P	implementation:Error
new_with_executor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    pub fn new_with_executor<E: 'static>(executor: E) -> Self$/;"	P	implementation:GaiResolver
new_with_executor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    pub fn new_with_executor<E: 'static>(executor: E, handle: Option<Handle>) -> HttpConnector$/;"	P	implementation:HttpConnector
new_with_handle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    pub fn new_with_handle(threads: usize, handle: Handle) -> HttpConnector {$/;"	P	implementation:HttpConnector
new_with_resolver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    pub fn new_with_resolver(resolver: R) -> HttpConnector<R> {$/;"	P	implementation:HttpConnector
new_with_tokio_threadpool_resolver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    pub fn new_with_tokio_threadpool_resolver() -> Self {$/;"	P	implementation:HttpConnector
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    fn next(&mut self) -> Option<&'f Fail> {$/;"	P	implementation:Causes
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:IntoIter
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:GaiAddrs
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    fn next(&mut self) -> Option<SocketAddr> {$/;"	P	implementation:IpAddrs
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn next(&self) -> usize {$/;"	P	implementation:ReadStrategy
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:ProgressBarIter
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	P	implementation:InstPtrs
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn next(&self, si: StatePtr, cls: usize) -> StatePtr {$/;"	P	implementation:Transitions
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:LiteralIter
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pattern.rs	/^    fn next(&mut self) -> SearchStep {$/;"	P	implementation:RegexSearcher
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn next(&mut self) -> Option<&'t [u8]> {$/;"	P	implementation:Split
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn next(&mut self) -> Option<&'t [u8]> {$/;"	P	implementation:SplitN
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn next(&mut self) -> Option<Captures<'t>> {$/;"	P	implementation:CaptureMatches
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn next(&mut self) -> Option<Match<'t>> {$/;"	P	implementation:Matches
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn next(&mut self) -> Option<Option<&'r str>> {$/;"	P	implementation:CaptureNames
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn next(&mut self) -> Option<Option<Match<'t>>> {$/;"	P	implementation:SubCaptureMatches
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    fn next(&mut self) -> Option<(usize, usize)> {$/;"	f
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    fn next(&mut self) -> Option<Locations> {$/;"	f
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    fn next(&mut self) -> Option<Option<(usize, usize)>> {$/;"	P	implementation:SubCapturesPosIter
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn next(&mut self) -> Option<&'t str> {$/;"	P	implementation:Split
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn next(&mut self) -> Option<&'t str> {$/;"	P	implementation:SplitN
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Captures<'t>> {$/;"	P	implementation:CaptureMatches
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Match<'t>> {$/;"	P	implementation:Matches
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Option<&'r str>> {$/;"	P	implementation:CaptureNames
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Option<Match<'t>>> {$/;"	P	implementation:SubCaptureMatches
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    next: &'a Url,$/;"	m	struct:RedirectAttempt
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^    fn next(&mut self) -> Option<Node<'a>> {$/;"	P	implementation:Find
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^    next: usize,$/;"	m	struct:Find
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    fn next(&mut self) -> Option<Node<'a>> {$/;"	P	implementation:Children
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    fn next(&mut self) -> Option<Node<'a>> {$/;"	P	implementation:Descendants
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    fn next(&mut self) -> Option<Node<'a>> {$/;"	P	implementation:Find
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    next: Option<Node<'a>>,$/;"	m	struct:Children
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn next(&self) -> Option<Node<'a>> {$/;"	P	implementation:Node
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub next: Option<usize>,$/;"	m	struct:Raw
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    fn next(&mut self) -> Option<Node<'doc>> {$/;"	P	implementation:Iter
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    pub fn next(&self) -> Selection<'a> {$/;"	P	implementation:Selection
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn next(&mut self) -> Option<Result<(Event, Vec<u8>), io::Error>> {$/;"	P	implementation:EventsAndRaw
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn next(&mut self) -> Option<Result<Event, io::Error>> {$/;"	P	implementation:Events
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn next(&mut self) -> Option<Result<Key, io::Error>> {$/;"	P	implementation:Keys
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    fn next(&mut self) -> Option<&'a str> {$/;"	P	implementation:ByteSerialize
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Parse
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:ParseIntoOwned
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    fn next(&mut self) -> Option<SocketAddr> {$/;"	P	implementation:SocketAddrs
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn next(&mut self) -> Option<char> {$/;"	P	implementation:Input
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn next(&mut self) -> Option<Result<DirEntry>> {$/;"	P	implementation:DirList
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn next(&mut self) -> Option<Result<DirEntry>> {$/;"	P	implementation:IntoIter
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn next(&mut self) -> Option<Result<DirEntry>> {$/;"	f
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    fn next(&mut self) -> Option<io::Result<WalkEvent>> {$/;"	P	implementation:WalkEventIter
next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    next: Option<Result<DirEntry, Error>>,$/;"	m	struct:WalkEventIter
next_after_empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn next_after_empty(&self, _text: &[u8], i: usize) -> usize {$/;"	P	implementation:ExecNoSync
next_after_empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn next_after_empty(&self, text: &str, i: usize) -> usize {$/;"	P	implementation:ExecNoSyncStr
next_after_empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    fn next_after_empty(&self, text: &Self::Text, i: usize) -> usize;$/;"	P	interface:RegularExpression
next_char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn next_char(&self, at: InputAt) -> Char { (**self).next_char(at) }$/;"	P	implementation:T
next_char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn next_char(&self, at: InputAt) -> Char {$/;"	P	implementation:ByteInput
next_char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn next_char(&self, at: InputAt) -> Char {$/;"	P	implementation:CharInput
next_char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn next_char(&self, at: InputAt) -> Char;$/;"	P	interface:Input
next_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pattern.rs	/^    next_match: Option<(usize, usize)>,$/;"	m	struct:RegexSearcher
next_pos	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    pub fn next_pos(&self) -> usize {$/;"	P	implementation:InputAt
next_reader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fn next_reader(&mut self) {$/;"	P	implementation:Reader
next_si	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    unsafe fn next_si(&self, si: StatePtr, text: &[u8], i: usize) -> StatePtr {$/;"	P	implementation:Fsm
next_state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn next_state($/;"	P	implementation:Fsm
next_unchecked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    unsafe fn next_unchecked(&self, si: StatePtr, cls: usize) -> StatePtr {$/;"	P	implementation:Transitions
next_update	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/date.rs	/^    next_update: time::Timespec,$/;"	m	struct:CachedDate
next_utf8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^pub fn next_utf8(text: &[u8], i: usize) -> usize {$/;"	f
next_utf8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn next_utf8(&mut self) -> Option<(char, &'i str)> {$/;"	P	implementation:Input
nfa	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    nfa: Program,$/;"	m	struct:ExecReadOnly
nfa	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn nfa(mut self) -> Self {$/;"	P	implementation:ExecBuilder
nlist	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    nlist: Threads,$/;"	m	struct:Cache
no_expansion	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn no_expansion(&mut self) -> Option<Cow<[u8]>> {$/;"	P	implementation:NoExpand
no_expansion	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn no_expansion(&mut self) -> Option<Cow<[u8]>> {$/;"	P	implementation:u8
no_expansion	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn no_expansion<'r>(&'r mut self) -> Option<Cow<'r, [u8]>> {$/;"	P	implementation:ReplacerRef
no_expansion	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn no_expansion<'r>(&'r mut self) -> Option<Cow<'r, [u8]>> {$/;"	P	interface:Replacer
no_expansion	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn no_expansion(&mut self) -> Option<Cow<str>> {$/;"	P	implementation:NoExpand
no_expansion	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn no_expansion(&mut self) -> Option<Cow<str>> {$/;"	P	implementation:ReplacerRef
no_expansion	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn no_expansion(&mut self) -> Option<Cow<str>> {$/;"	P	implementation:str
no_expansion	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn no_expansion<'r>(&'r mut self) -> Option<Cow<'r, str>> {$/;"	P	interface:Replacer
no_timer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    pub(super) fn no_timer(&self) {$/;"	P	implementation:Pool
node	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/lib.rs	/^pub mod node;$/;"	n
nodelay	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    nodelay: bool,$/;"	m	struct:HttpConnecting
nodelay	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    nodelay: bool,$/;"	m	struct:HttpConnector
nodes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^    pub nodes: Vec<node::Raw>,$/;"	m	struct:Document
none	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^    pub(super) fn none() -> InternalBacktrace {$/;"	P	implementation:InternalBacktrace
none	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn none() -> Self {$/;"	P	implementation:WeakOpt
none	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    pub(crate) fn none() -> Self {$/;"	P	implementation:OnUpgrade
none	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    pub fn none() -> RedirectPolicy {$/;"	P	implementation:RedirectPolicy
not	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn not(self) -> Not<Self>$/;"	P	interface:Predicate
not_ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    fn not_ready(&mut self) {$/;"	P	implementation:Peeked
not_word_boundary	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    not_word_boundary: bool,$/;"	m	struct:EmptyFlags
notify	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^    fn notify(&self, _id: usize) {$/;"	P	implementation:ThreadNotify
notify_read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    notify_read: bool,$/;"	m	struct:State
nth	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^    pub fn nth(&self, n: usize) -> Option<Node> {$/;"	P	implementation:Document
num_byte_classes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn num_byte_classes(&self) -> usize {$/;"	P	implementation:Fsm
num_byte_classes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    num_byte_classes: usize,$/;"	m	struct:StateMap
num_byte_classes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    num_byte_classes: usize,$/;"	m	struct:Transitions
num_chars	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub fn num_chars(&self) -> usize {$/;"	P	implementation:InstRanges
num_exprs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    num_exprs: usize,$/;"	m	struct:Compiler
num_states	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn num_states(&self) -> usize {$/;"	P	implementation:Transitions
num_writes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    num_writes: usize,$/;"	m	struct:AsyncIo
num_writes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub fn num_writes(&self) -> usize {$/;"	P	implementation:AsyncIo
objects	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    objects: Vec<MultiObject>,$/;"	m	struct:MultiProgressState
octal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_builder.rs	/^    pub octal: bool,$/;"	m	struct:RegexOptions
old_after_path_position	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/path_segments.rs	/^    old_after_path_position: u32,$/;"	m	struct:PathSegmentsMut
oldest_opened	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    oldest_opened: usize,$/;"	m	struct:IntoIter
on_drain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/shutdown.rs	/^fn on_drain<I, S, E>(conn: &mut UpgradeableConnection<I, S, E>)$/;"	f
on_err	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^    fn on_err(&mut self, err: S::Error) -> ::Error {$/;"	f
on_error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    fn on_error(err: &::Error) -> Option<MessageHead<Self::Outgoing>>;$/;"	P	interface:Http1Transaction
on_error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn on_error(_err: &::Error) -> Option<MessageHead<Self::Outgoing>> {$/;"	P	implementation:Client
on_error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn on_error(err: &::Error) -> Option<MessageHead<Self::Outgoing>> {$/;"	P	implementation:Server
on_parse_error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn on_parse_error(&mut self, err: ::Error) -> ::Result<()> {$/;"	f
on_read_head_error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn on_read_head_error<Z>(&mut self, e: ::Error) -> Poll<Option<Z>, ::Error> {$/;"	f
on_upgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    on_upgrade: OnUpgrade,$/;"	m	struct:Extra
on_upgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    pub fn on_upgrade(self) -> OnUpgrade {$/;"	P	implementation:Body
on_upgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub(super) fn on_upgrade(&mut self) -> ::upgrade::OnUpgrade {$/;"	f
only_utf8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    pub fn only_utf8(mut self, yes: bool) -> Self {$/;"	P	implementation:Compiler
only_utf8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    only_utf8: bool,$/;"	m	struct:ExecBuilder
only_utf8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn only_utf8(mut self, yes: bool) -> Self {$/;"	P	implementation:ExecBuilder
only_utf8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    only_utf8: bool,$/;"	m	struct:ByteInput
only_utf8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub fn only_utf8(&self) -> bool {$/;"	P	implementation:Program
only_utf8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub only_utf8: bool,$/;"	m	struct:Program
options	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    options: RegexOptions,$/;"	m	struct:ExecBuilder
options	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn options<'a>() -> ParseOptions<'a> {$/;"	P	implementation:Url
opts	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    opts: WalkDirOptions,$/;"	m	struct:IntoIter
opts	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    opts: WalkDirOptions,$/;"	m	struct:WalkDir
or	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/predicate.rs	/^    fn or<T: Predicate>(self, other: T) -> Or<Self, T>$/;"	P	interface:Predicate
origin	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn origin(&self) -> Origin {$/;"	P	implementation:Url
origin	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^mod origin;$/;"	n
origin	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn origin(url: &Url) -> String {$/;"	f
origin_form	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^fn origin_form(uri: &mut Uri) {$/;"	f
orphan_lines	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub orphan_lines: usize,$/;"	m	struct:ProgressDrawState
os	/home/doc/Code/Git/oracle/src/main.rs	/^mod os;$/;"	n
output	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^    output: W,$/;"	m	struct:RawTerminal
output	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^    output: W,$/;"	m	struct:AlternateScreen
p	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^        fn p(ips: Vec<u32>, flags: u8) -> bool {$/;"	f	function:tests::prop_state_encode_decode
p	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^        fn p(n: i32) -> bool {$/;"	f	function:tests::prop_read_write_i32
p	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^        fn p(n: u32) -> bool {$/;"	f	function:tests::prop_read_write_u32
p	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^        fn p(cp: char) -> bool {$/;"	f	function:tests::prop_encode_matches_std
p	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^        fn p(given_cp: char) -> bool {$/;"	f	function:tests::prop_decode_last_matches_std
p	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^        fn p(given_cp: char) -> bool {$/;"	f	function:tests::prop_decode_matches_std
p	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^        fn p(given_cp: char) -> bool {$/;"	f	function:tests::prop_roundtrip
p	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^        fn p(given_cp: char) -> bool {$/;"	f	function:tests::prop_roundtrip_last
pad_str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^pub fn pad_str<'a>(s: &'a str, width: usize, align: Alignment, truncate: bool) -> Cow<'a, str> {$/;"	f
panic	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    panic: bool,$/;"	m	struct:AsyncIo
panic	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub fn panic(&mut self) {$/;"	P	implementation:AsyncIo
parent	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn parent(&self) -> Option<Node<'a>> {$/;"	P	implementation:Node
parent	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub parent: Option<usize>,$/;"	m	struct:Raw
parent	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    pub fn parent(&self) -> Selection<'a> {$/;"	P	implementation:Selection
parents	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    pub fn parents(&self) -> Selection<'a> {$/;"	P	implementation:Selection
park_tasks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    park_tasks: bool,$/;"	m	struct:AsyncIo
park_tasks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub fn park_tasks(&mut self, enabled: bool) {$/;"	P	implementation:AsyncIo
parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub(super) fn parse<S>(&mut self, ctx: ParseContext)$/;"	f
parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    fn parse(bytes: &mut BytesMut, ctx: ParseContext) -> ParseResult<Self::Incoming>;$/;"	P	interface:Http1Transaction
parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^        fn parse(s: &str) -> ParsedMessage<RequestLine> {$/;"	f	function:tests::test_decoder_request
parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^        fn parse(s: &str) -> ParsedMessage<StatusCode> {$/;"	f	function:tests::test_decoder_response
parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn parse(buf: &mut BytesMut, ctx: ParseContext) -> ParseResult<RequestLine> {$/;"	P	implementation:Server
parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn parse(buf: &mut BytesMut, ctx: ParseContext) -> ParseResult<StatusCode> {$/;"	P	implementation:Client
parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn parse(&self) -> Result<Parsed, Error> {$/;"	P	implementation:ExecBuilder
parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^pub fn parse(input: &[u8]) -> Parse {$/;"	f
parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    pub fn parse(input: &str) -> Result<Self, ParseError> {$/;"	P	implementation:Host
parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn parse(input: &str) -> Result<Url, ::ParseError> {$/;"	P	implementation:Url
parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn parse(self, input: &str) -> Result<Url, ::ParseError> {$/;"	P	implementation:ParseOptions
parse_cannot_be_a_base_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn parse_cannot_be_a_base_path<'i>(&mut self, mut input: Input<'i>) -> Input<'i> {$/;"	P	implementation:Parser
parse_csi	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^fn parse_csi<I>(iter: &mut I) -> Option<Event>$/;"	f
parse_err	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^        fn parse_err(s: &str) -> ::error::Parse {$/;"	f	function:tests::test_decoder_response
parse_err	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^        fn parse_err(s: &str, comment: &str) -> ::error::Parse {$/;"	f	function:tests::test_decoder_request
parse_event	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^pub fn parse_event<I>(item: u8, iter: &mut I) -> Result<Event, Error>$/;"	f
parse_event	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^fn parse_event<I>(item: u8, iter: &mut I) -> Result<(Event, Vec<u8>), io::Error>$/;"	f
parse_file	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn parse_file(mut self, input: Input, mut base_file_url: Option<&Url>) -> ParseResult<Url> {$/;"	P	implementation:Parser
parse_file_host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn parse_file_host<'i>(&mut self, input: Input<'i>)$/;"	P	implementation:Parser
parse_fragment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn parse_fragment(&mut self, mut input: Input) {$/;"	P	implementation:Parser
parse_header_htabs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn parse_header_htabs() {$/;"	f	module:tests
parse_host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn parse_host(mut input: Input, scheme_type: SchemeType)$/;"	P	implementation:Parser
parse_host_and_port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn parse_host_and_port<'i>(&mut self, input: Input<'i>,$/;"	P	implementation:Parser
parse_ignores	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^        fn parse_ignores(s: &str) {$/;"	f	function:tests::test_decoder_response
parse_ipv4addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^fn parse_ipv4addr(input: &str) -> ParseResult<Option<Ipv4Addr>> {$/;"	f
parse_ipv4number	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^fn parse_ipv4number(mut input: &str) -> Result<Option<u32>, ()> {$/;"	f
parse_ipv6addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^fn parse_ipv6addr(input: &str) -> ParseResult<Ipv6Addr> {$/;"	f
parse_non_special	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn parse_non_special(mut self, input: Input, scheme_type: SchemeType, scheme_end: u32)$/;"	P	implementation:Parser
parse_opaque	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    pub fn parse_opaque(input: &str) -> Result<Self, ParseError> {$/;"	P	implementation:Host
parse_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn parse_path<'i>(&mut self, scheme_type: SchemeType, has_host: &mut bool,$/;"	P	implementation:Parser
parse_path_start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn parse_path_start<'i>(&mut self, scheme_type: SchemeType, has_host: &mut bool,$/;"	P	implementation:Parser
parse_port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn parse_port<P>(mut input: Input, default_port: P,$/;"	P	implementation:Parser
parse_query	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn parse_query<'i>(&mut self, scheme_end: u32, mut input: Input<'i>)$/;"	P	implementation:Parser
parse_query_and_fragment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn parse_query_and_fragment(&mut self, scheme_end: u32, mut input: Input)$/;"	P	implementation:Parser
parse_reads_until_blocked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn parse_reads_until_blocked() {$/;"	f	module:tests
parse_relative	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn parse_relative(mut self, input: Input, scheme_type: SchemeType, base_url: &Url)$/;"	P	implementation:Parser
parse_scheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn parse_scheme<'i>(&mut self, mut input: Input<'i>) -> Result<Input<'i>, ()> {$/;"	P	implementation:Parser
parse_url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn parse_url(mut self, input: &str) -> ParseResult<Url> {$/;"	P	implementation:Parser
parse_userinfo	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn parse_userinfo<'i>(&mut self, mut input: Input<'i>, scheme_type: SchemeType)$/;"	P	implementation:Parser
parse_utf8_char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^fn parse_utf8_char<I>(c: u8, iter: &mut I) -> Result<char, Error>$/;"	f
parse_with_encoding	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^pub fn parse_with_encoding<'a>(input: &'a [u8],$/;"	f
parse_with_method	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^        fn parse_with_method(s: &str, m: Method) -> ParsedMessage<StatusCode> {$/;"	f	function:tests::test_decoder_response
parse_with_params	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn parse_with_params<I, K, V>(input: &str, iter: I) -> Result<Url, ::ParseError>$/;"	P	implementation:Url
parse_with_scheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn parse_with_scheme(mut self, input: Input) -> ParseResult<Url> {$/;"	P	implementation:Parser
parser	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^mod parser;$/;"	n
part	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub fn part<T>(mut self, name: T, part: Part) -> Form$/;"	P	implementation:Form
partial_cmp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn partial_cmp(&self, other: &Char) -> Option<Ordering> {$/;"	P	implementation:char
partial_cmp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn partial_cmp(&self, other: &char) -> Option<Ordering> {$/;"	P	implementation:Char
partial_cmp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<cmp::Ordering> {$/;"	P	implementation:Url
partial_rewind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    fn partial_rewind() {$/;"	f	module:tests
password	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn password(&self) -> Option<&str> {$/;"	P	implementation:Url
password	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn password(url: &Url) -> &str {$/;"	f
pat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pat: Vec<u8>,$/;"	m	struct:FreqyPacked
pat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/fallback.rs	/^    pub pat: usize,$/;"	m	struct:Match
pat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    pub pat: usize,$/;"	m	struct:Match
pat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/fallback.rs	/^    pub pat: usize,$/;"	m	struct:Match
pat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    pub pat: usize,$/;"	m	struct:Match
patch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn patch<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
patch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn patch<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn path(&self) -> &str {$/;"	P	implementation:Url
path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    path: PathBuf,$/;"	m	struct:Ancestor
path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    path: PathBuf,$/;"	m	struct:DirEntry
path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn path(&self) -> &Path {$/;"	P	implementation:DirEntry
path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn path(&self) -> Option<&Path> {$/;"	P	implementation:Error
path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    fn path<'a>(&'a self) -> &'a Path {$/;"	P	implementation:TempDir
path	/home/doc/Code/Git/oracle/src/os.rs	/^    pub path: &'static str,$/;"	m	struct:Os
path_is_symlink	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn path_is_symlink(&self) -> bool {$/;"	P	implementation:DirEntry
path_segments	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn path_segments(&self) -> Option<str::Split<char>> {$/;"	P	implementation:Url
path_segments	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^mod path_segments;$/;"	n
path_segments_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn path_segments_mut(&mut self) -> Result<PathSegmentsMut, ()> {$/;"	P	implementation:Url
path_start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    path_start: u32,  \/\/ Before initial '\/', if any$/;"	m	struct:Url
path_to_file_url_segments	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^fn path_to_file_url_segments(path: &Path, serialization: &mut String)$/;"	f
path_to_file_url_segments_windows	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^fn path_to_file_url_segments_windows(path: &Path, serialization: &mut String)$/;"	f
pathname	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn pathname(url: &Url) -> &str {$/;"	f
pats	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    pats: Vec<Vec<u8>>,$/;"	m	struct:Teddy
pats	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    pats: Vec<Vec<u8>>,$/;"	m	struct:Teddy
pats	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_builder.rs	/^    pub pats: Vec<String>,$/;"	m	struct:RegexOptions
pattern	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod pattern;$/;"	n
pattern	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pattern: Vec<u8>,$/;"	m	struct:BoyerMooreSearch
patterns	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/fallback.rs	/^    pub fn patterns(&self) -> &[Vec<u8>] { &[] }$/;"	P	implementation:Teddy
patterns	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    pub fn patterns(&self) -> &[Vec<u8>] {$/;"	P	implementation:Teddy
patterns	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/fallback.rs	/^    pub fn patterns(&self) -> &[Vec<u8>] { &[] }$/;"	P	implementation:Teddy
patterns	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    pub fn patterns(&self) -> &[Vec<u8>] {$/;"	P	implementation:Teddy
pause	/home/doc/Code/Git/oracle/src/work.rs	/^pub fn pause() {$/;"	f
payload	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/mod.rs	/^mod payload;$/;"	n
pc	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    pc: InstPtr,$/;"	m	struct:SuffixCacheEntry
peeked_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    peeked_buf: [u8; 2],$/;"	m	struct:Peeked
pending	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^pub(crate) fn pending() -> (Pending, OnUpgrade) {$/;"	f
pending_upgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn pending_upgrade(&mut self) -> Option<::upgrade::Pending> {$/;"	f
percent_encode_attr_chars	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub fn percent_encode_attr_chars(mut self) -> Form {$/;"	P	implementation:Form
percent_encode_path_segment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub fn percent_encode_path_segment(mut self) -> Form {$/;"	P	implementation:Form
percent_encoding	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    percent_encoding: PercentEncoding,$/;"	m	struct:Form
picture_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^pub fn picture_dir() -> Option<PathBuf> {$/;"	f
picture_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^pub fn picture_dir()    -> Option<PathBuf> { run_xdg_user_dir_command("PICTURES") }$/;"	f
picture_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/mac.rs	/^pub fn picture_dir()    -> Option<PathBuf> { home_dir().map(|h| h.join("Pictures")) }$/;"	f
picture_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^pub fn picture_dir()    -> Option<PathBuf> { home_dir().map(|h| h.join("Pictures")) }$/;"	f
picture_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^pub fn picture_dir()    -> Option<PathBuf> { known_folder(&knownfolders::FOLDERID_Pictures) }$/;"	f
pieces	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub(super) fn pieces(self) -> (Method, Url, HeaderMap, Option<Body>) {$/;"	P	implementation:Request
pikevm	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub pikevm: pikevm::Cache,$/;"	m	struct:ProgramCacheInner
pikevm	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod pikevm;$/;"	n
pipeline_flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pipeline_flush: bool,$/;"	m	struct:Http
pipeline_flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn pipeline_flush(&mut self, enabled: bool) -> &mut Self {$/;"	P	implementation:Http
pkcs12	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/tls.rs	/^    pub(crate) fn pkcs12(self) -> native_tls::Identity {$/;"	P	implementation:Identity
plain_text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    fn plain_text(body: Body) -> Decoder {$/;"	P	implementation:Decoder
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	P	implementation:Body
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	P	implementation:ResponseFuture
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	P	implementation:WhenReady
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^        fn poll(&mut self) -> Poll<(), ()> {$/;"	P	implementation:sealed::GaiTask
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    fn poll(&mut self) -> Poll<GaiAddrs, io::Error> {$/;"	P	implementation:TokioThreadpoolGaiFuture
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	P	implementation:GaiBlocking
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	P	implementation:GaiFuture
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^            fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	P	implementation:tests::client_happy_eyeballs::ConnectingTcpFuture
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    fn poll($/;"	P	implementation:ConnectingTcpRemote
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	P	implementation:HttpConnecting
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    fn poll(&mut self, handle: &Option<Handle>) -> Poll<TcpStream, io::Error> {$/;"	P	implementation:ConnectingTcp
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	P	implementation:Receiver
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	P	implementation:ResponseFuture
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	P	implementation:Checkout
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	P	implementation:IdleInterval
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^        fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	P	implementation:tests::TestMe
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	P	implementation:Draining
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/lazy.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/client.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^        fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f	module:spawn_all
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^        fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f	module:upgrades
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/shutdown.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	P	implementation:AddrIncoming
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	P	implementation:OnUpgrade
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	P	implementation:Body
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	P	implementation:Pending
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	P	implementation:PendingRequest
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	P	implementation:Decoder
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	P	implementation:Gzip
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	P	implementation:Pending
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	P	implementation:Json
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^    fn poll(&mut self) -> Poll<TlsStream<S>, Error> {$/;"	P	implementation:ConnectAsync
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^    fn poll(&mut self) -> Poll<TlsStream<S>, Error> {$/;"	P	implementation:MidHandshake
poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	P	implementation:WaitBody
poll2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    fn poll2(&mut self) -> Poll<(), ::Error> {$/;"	f
poll_cancel	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    pub fn poll_cancel(&mut self) -> Poll<(), ()> {$/;"	P	implementation:Callback
poll_catch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn poll_catch(&mut self, should_shutdown: bool) -> Poll<Dispatched, ::Error> {$/;"	f
poll_cnt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^        poll_cnt: usize,$/;"	m	struct:tests::TestMe
poll_data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn poll_data(&mut self) -> Poll<Option<Self::Data>, Self::Error> {$/;"	P	implementation:Body
poll_data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/payload.rs	/^    fn poll_data(&mut self) -> Poll<Option<Self::Data>, Self::Error> {$/;"	P	implementation:Box
poll_data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/payload.rs	/^    fn poll_data(&mut self) -> Poll<Option<Self::Data>, Self::Error>;$/;"	P	interface:Payload
poll_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn poll_eof(&mut self) -> Poll<Option<Chunk>, ::Error> {$/;"	P	implementation:Body
poll_flush	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn poll_flush(&mut self) -> Poll<(), ::Error> {$/;"	f
poll_inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn poll_inner(&mut self) -> Poll<Option<Chunk>, ::Error> {$/;"	P	implementation:Body
poll_inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn poll_inner(&mut self, should_shutdown: bool) -> Poll<Dispatched, ::Error> {$/;"	f
poll_inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    fn poll_inner(&mut self) -> &mut ::hyper::Body {$/;"	P	implementation:Body
poll_msg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn poll_msg(&mut self) -> Poll<Option<(Self::PollItem, Self::PollBody)>, Never> {$/;"	f
poll_msg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn poll_msg(&mut self) -> Poll<Option<(Self::PollItem, Self::PollBody)>, Self::PollError> {$/;"	f
poll_msg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn poll_msg(&mut self) -> Poll<Option<(Self::PollItem, Self::PollBody)>, Self::PollError>;$/;"	P	interface:Dispatch
poll_read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn poll_read(&mut self) -> Poll<(), ::Error> {$/;"	f
poll_read_head	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn poll_read_head(&mut self) -> Poll<(), ::Error> {$/;"	f
poll_ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    pub fn poll_ready(&mut self) -> Poll<(), ::Error> {$/;"	P	implementation:Sender
poll_ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub fn poll_ready(&mut self) -> Poll<(), ::Error> {$/;"	P	implementation:SendRequest
poll_ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    pub fn poll_ready(&mut self) -> Poll<(), ::Error> {$/;"	P	implementation:Sender
poll_ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn poll_ready(&mut self) -> Poll<(), ::Error> {$/;"	P	implementation:PoolClient
poll_ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn poll_ready(&mut self) -> Poll<(), ()> {$/;"	f
poll_ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn poll_ready(&mut self) -> Poll<(), ()>;$/;"	P	interface:Dispatch
poll_server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    fn poll_server<S, E>(&mut self, service: &mut S, exec: &E) -> Poll<(), ::Error>$/;"	f
poll_stream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    fn poll_stream(&mut self) -> Poll<StreamState, error::Error> {$/;"	f
poll_trailers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn poll_trailers(&mut self) -> Poll<Option<HeaderMap>, Self::Error> {$/;"	P	implementation:Body
poll_trailers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/payload.rs	/^    fn poll_trailers(&mut self) -> Poll<Option<HeaderMap>, Self::Error> {$/;"	P	implementation:Box
poll_trailers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/payload.rs	/^    fn poll_trailers(&mut self) -> Poll<Option<HeaderMap>, Self::Error> {$/;"	P	interface:Payload
poll_waiter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn poll_waiter(&mut self) -> Poll<Option<Pooled<T>>, ::Error> {$/;"	P	implementation:Checkout
poll_watch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub(super) fn poll_watch<W>(&mut self, watcher: &W) -> Poll<(), ::Error>$/;"	f
poll_without_shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub fn poll_without_shutdown(&mut self) -> Poll<(), ::Error> {$/;"	f
poll_without_shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    pub fn poll_without_shutdown(&mut self) -> Poll<(), ::Error> {$/;"	f
poll_without_shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn poll_without_shutdown(&mut self) -> Poll<(), ::Error> {$/;"	f
poll_write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn poll_write(&mut self) -> Poll<(), ::Error> {$/;"	f
pool	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pool: Pool<PoolClient<B>>,$/;"	m	struct:Client
pool	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^mod pool;$/;"	n
pool	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    pool: Pool<T>,$/;"	m	struct:Checkout
pool	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    pool: WeakOpt<Mutex<PoolInner<T>>>,$/;"	m	struct:Connecting
pool	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    pool: WeakOpt<Mutex<PoolInner<T>>>,$/;"	m	struct:IdleInterval
pool	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    pool: WeakOpt<Mutex<PoolInner<T>>>,$/;"	m	struct:Pooled
pool_config	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pool_config: pool::Config,$/;"	m	struct:Builder
pool_drop_notifier	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    pool_drop_notifier: oneshot::Receiver<::common::Never>,$/;"	m	struct:IdleInterval
pool_max_idle_no_timer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn pool_max_idle_no_timer<T>(max_idle: usize) -> Pool<T> {$/;"	f	module:tests
pool_no_timer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn pool_no_timer<T>() -> Pool<T> {$/;"	f	module:tests
pooled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    pub(super) fn pooled(&self, mut connecting: Connecting<T>, value: T) -> Pooled<T> {$/;"	P	implementation:Pool
pooled_drop_if_closed_doesnt_reinsert	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn pooled_drop_if_closed_doesnt_reinsert() {$/;"	f	module:tests
pop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn pop(self, expiration: &Expiration) -> Option<Idle<T>> {$/;"	P	implementation:IdlePopper
pop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/path_segments.rs	/^    pub fn pop(&mut self) -> &mut Self {$/;"	P	implementation:PathSegmentsMut
pop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn pop(&mut self) {$/;"	P	implementation:IntoIter
pop_if_empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/path_segments.rs	/^    pub fn pop_if_empty(&mut self) -> &mut Self {$/;"	P	implementation:PathSegmentsMut
pop_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn pop_path(&mut self, scheme_type: SchemeType, path_start: usize) {$/;"	P	implementation:Parser
port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    port: u16,$/;"	m	struct:HttpConnecting
port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    pub fn port(&self) -> Option<u16> {$/;"	P	implementation:Destination
port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^        fn port(&self) -> Option<u16> {$/;"	P	implementation:tests::Url
port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    fn port(&self) -> Option<u16> {$/;"	P	implementation:Destination
port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    fn port(&self) -> Option<u16>;$/;"	P	interface:Dst
port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    pub port: u16,$/;"	m	struct:HostAndPort
port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    port: Option<u16>,$/;"	m	struct:Url
port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn port(&self) -> Option<u16> {$/;"	P	implementation:Url
port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn port(url: &Url) -> &str {$/;"	f
port_or_known_default	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn port_or_known_default(&self) -> Option<u16> {$/;"	P	implementation:Url
pos	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pos: usize,$/;"	m	struct:MockCursor
pos	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/date.rs	/^    pos: usize,$/;"	m	struct:CachedDate
pos	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    pos: u8,$/;"	m	struct:ChunkSize
pos	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pos: usize,$/;"	m	struct:Cursor
pos	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pos: u64,$/;"	m	struct:ProgressState
pos	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    pos: usize,$/;"	m	struct:InputAt
pos	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    pub fn pos(&self) -> usize {$/;"	P	implementation:InputAt
pos	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn pos(&self, i: usize) -> Option<(usize, usize)> {$/;"	P	implementation:CaptureLocations
pos	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    pub fn pos(&self, i: usize) -> Option<(usize, usize)> {$/;"	P	implementation:Locations
pos	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn pos(&self, i: usize) -> Option<(usize, usize)> {$/;"	P	implementation:CaptureLocations
pos	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    pos: usize,$/;"	m	struct:Peeked
position	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn position(&self) -> (u64, u64) {$/;"	P	implementation:ProgressState
post	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn post<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
post	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn post<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
pre	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    pre: Option<Bytes>,$/;"	m	struct:Rewind
predicate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^    predicate: P,$/;"	m	struct:Find
predicate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/lib.rs	/^pub mod predicate;$/;"	n
predicate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    predicate: P,$/;"	m	struct:Find
predicate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    predicate: P,$/;"	m	struct:FilterEntry
preferred	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    preferred: ConnectingTcpRemote,$/;"	m	struct:ConnectingTcp
prefix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    prefix: String,$/;"	m	struct:ProgressState
prefix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn prefix(&self) -> &str {$/;"	P	implementation:ProgressState
prefix_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn prefix_at(&self, text: &[u8], at: usize) -> Option<usize> {$/;"	P	implementation:Fsm
prefix_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn prefix_at($/;"	P	implementation:ByteInput
prefix_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn prefix_at($/;"	P	implementation:CharInput
prefix_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn prefix_at($/;"	P	implementation:T
prefix_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn prefix_at($/;"	P	interface:Input
prefixes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    prefixes: Literals,$/;"	m	struct:Parsed
prefixes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn prefixes(lits: &Literals) -> Self {$/;"	P	implementation:Matcher
prefixes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn prefixes(lits: &Literals) -> SingleByteSet {$/;"	P	implementation:SingleByteSet
prefixes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn prefixes(lits: Literals) -> Self {$/;"	P	implementation:LiteralSearcher
prefixes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub prefixes: LiteralSearcher,$/;"	m	struct:Program
prepare_uninitialized_buffer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    unsafe fn prepare_uninitialized_buffer(&self, buf: &mut [u8]) -> bool {$/;"	f
prepare_uninitialized_buffer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^        unsafe fn prepare_uninitialized_buffer(&self, buf: &mut [u8]) -> bool {$/;"	P	implementation:addr_stream::AddrStream
prepare_uninitialized_buffer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    unsafe fn prepare_uninitialized_buffer(&self, buf: &mut [u8]) -> bool {$/;"	P	implementation:Upgraded
prepare_uninitialized_buffer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    unsafe fn prepare_uninitialized_buffer(&self, buf: &mut [u8]) -> bool {$/;"	P	implementation:Conn
prepare_upgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn prepare_upgrade(&mut self) -> ::upgrade::OnUpgrade {$/;"	P	implementation:State
prev	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn prev(&self) -> Option<Node<'a>> {$/;"	P	implementation:Node
prev	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub prev: Option<usize>,$/;"	m	struct:Raw
prev	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    pub fn prev(&self) -> Selection<'a> {$/;"	P	implementation:Selection
prev_ios	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^    prev_ios: Termios,$/;"	m	struct:RawTerminal
prev_power_of_two	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^fn prev_power_of_two(n: usize) -> usize {$/;"	f
previous	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    previous: &'a [Url],$/;"	m	struct:RedirectAttempt
previous	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    pub fn previous(&self) -> &[Url] {$/;"	P	implementation:RedirectAttempt
previous_char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn previous_char(&self, at: InputAt) -> Char { (**self).previous_char(at) }$/;"	P	implementation:T
previous_char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn previous_char(&self, at: InputAt) -> Char {$/;"	P	implementation:ByteInput
previous_char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn previous_char(&self, at: InputAt) -> Char {$/;"	P	implementation:CharInput
previous_char	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    fn previous_char(&self, at: InputAt) -> Char;$/;"	P	interface:Input
print	/home/doc/Code/Git/oracle/src/tests.rs	/^fn print() {$/;"	f
println	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn println<I: Into<String>>(&self, msg: I) {$/;"	P	implementation:ProgressBar
prog	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^    prog: &'r Program,$/;"	m	struct:Bounded
prog	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    prog: &'a Program,$/;"	m	struct:Fsm
prog	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod prog;$/;"	n
prog	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    prog: &'r Program,$/;"	m	struct:Fsm
progress	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/lib.rs	/^mod progress;$/;"	n
progress_bar	/home/doc/Code/Git/oracle/src/download.rs	/^    progress_bar: ProgressBar,$/;"	m	struct:DownloadProgress
progress_bar_sync_send	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    fn progress_bar_sync_send() {$/;"	f	module:tests
progress_chars	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    progress_chars: Vec<char>,$/;"	m	struct:ProgressStyle
progress_chars	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn progress_chars(mut self, s: &str) -> ProgressStyle {$/;"	P	implementation:ProgressStyle
prop_decode_last_matches_std	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^    fn prop_decode_last_matches_std() {$/;"	f	module:tests
prop_decode_matches_std	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^    fn prop_decode_matches_std() {$/;"	f	module:tests
prop_encode_matches_std	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^    fn prop_encode_matches_std() {$/;"	f	module:tests
prop_read_write_i32	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn prop_read_write_i32() {$/;"	f	module:tests
prop_read_write_u32	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn prop_read_write_u32() {$/;"	f	module:tests
prop_roundtrip	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^    fn prop_roundtrip() {$/;"	f	module:tests
prop_roundtrip_last	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^    fn prop_roundtrip_last() {$/;"	f	module:tests
prop_state_encode_decode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn prop_state_encode_decode() {$/;"	f	module:tests
proto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/lib.rs	/^mod proto;$/;"	n
protocol	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    protocol: Http<E>,$/;"	m	struct:Connecting
protocol	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    protocol: Http<E>,$/;"	m	struct:Serve
protocol	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    protocol: Http_<E>,$/;"	m	struct:Builder
protocol	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn protocol(url: &Url) -> &str {$/;"	f
proxies	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    proxies: Vec<Proxy>,$/;"	m	struct:Config
proxies	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    proxies: Arc<Vec<Proxy>>,$/;"	m	struct:Connector
proxy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    pub fn proxy(mut self, is_proxied: bool) -> Connected {$/;"	P	implementation:Connected
proxy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn proxy(mut self, proxy: Proxy) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
proxy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn proxy(self, proxy: Proxy) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
proxy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^mod proxy;$/;"	n
public_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^pub fn public_dir() -> Option<PathBuf> {$/;"	f
public_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^pub fn public_dir()     -> Option<PathBuf> { run_xdg_user_dir_command("PUBLICSHARE") }$/;"	f
public_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/mac.rs	/^pub fn public_dir()     -> Option<PathBuf> { home_dir().map(|h| h.join("Public")) }$/;"	f
public_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^pub fn public_dir()     -> Option<PathBuf> { home_dir().map(|h| h.join("Public")) }$/;"	f
public_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^pub fn public_dir()     -> Option<PathBuf> { known_folder(&knownfolders::FOLDERID_Public) }$/;"	f
push	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/path_segments.rs	/^    pub fn push(&mut self, segment: &str) -> &mut Self {$/;"	P	implementation:PathSegmentsMut
push	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn push(&mut self, dent: &DirEntry) -> Result<()> {$/;"	P	implementation:IntoIter
push_compiled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn push_compiled(&mut self, inst: Inst) {$/;"	P	implementation:Compiler
push_hole	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn push_hole(&mut self, inst: InstHole) -> Hole {$/;"	P	implementation:Compiler
push_inst_ptr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^fn push_inst_ptr(data: &mut Vec<u8>, prev: &mut InstPtr, ip: InstPtr) {$/;"	f
push_split_hole	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn push_split_hole(&mut self) -> Hole {$/;"	P	implementation:Compiler
put	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn put(&mut self, key: Key, value: T, __pool_ref: &Arc<Mutex<PoolInner<T>>>) {$/;"	P	implementation:PoolInner
put	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn put<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
put	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn put<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
qcur	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    qcur: SparseSet,$/;"	m	struct:Cache
qnext	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    qnext: SparseSet,$/;"	m	struct:Cache
query	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn query<T: Serialize + ?Sized>(mut self, query: &T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
query	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn query<T: Serialize + ?Sized>(mut self, query: &T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
query	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn query(&self) -> Option<&str> {$/;"	P	implementation:Url
query_encoding_override	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub query_encoding_override: EncodingOverride,$/;"	m	struct:Parser
query_pairs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn query_pairs(&self) -> form_urlencoded::Parse {$/;"	P	implementation:Url
query_pairs_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn query_pairs_mut(&mut self) -> form_urlencoded::Serializer<UrlQuery> {$/;"	P	implementation:Url
query_start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    query_start: Option<u32>,  \/\/ Before '?', unlike Position::QueryStart$/;"	m	struct:Url
queue	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    queue: BufDeque<B>,$/;"	m	struct:WriteBuf
quirks	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^#[doc(hidden)] pub mod quirks;$/;"	n
quit_after_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    quit_after_match: bool,$/;"	m	struct:Fsm
qux	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^            qux: i32,$/;"	m	struct:tests::add_query_struct::Params
qux	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^            qux: i32,$/;"	m	struct:tests::add_query_struct::Params
ranges	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    ranges: &'b [hir::ClassUnicodeRange],$/;"	m	struct:CompileClass
ranges	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub ranges: Vec<(char, char)>,$/;"	m	struct:InstRanges
rare1	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    rare1: u8,$/;"	m	struct:FreqyPacked
rare1i	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    rare1i: usize,$/;"	m	struct:FreqyPacked
rare2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    rare2: u8,$/;"	m	struct:FreqyPacked
rare2i	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    rare2i: usize,$/;"	m	struct:FreqyPacked
raw	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn raw(&self) -> &'a Raw {$/;"	P	implementation:Node
raw	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/lib.rs	/^pub mod raw;$/;"	n
raw_terminal_attr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/redox/attr.rs	/^pub fn raw_terminal_attr(ios: &mut Termios) {$/;"	f
raw_terminal_attr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/attr.rs	/^pub fn raw_terminal_attr(termios: &mut Termios) {$/;"	f
re	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    re: R,$/;"	m	struct:Matches
re_builder	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod re_builder;$/;"	n
re_bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod re_bytes;$/;"	n
re_set	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod re_set;$/;"	n
re_trait	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod re_trait;$/;"	n
re_unicode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod re_unicode;$/;"	n
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:AsyncIo
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Duplex
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:MockCursor
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub fn read(&self, buf: &mut [u8]) -> Poll<usize, io::Error> {$/;"	P	implementation:DuplexHandle
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    read: AsyncIo<MockCursor>,$/;"	m	struct:DuplexInner
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^        fn read(s: &str) -> u64 {$/;"	f	function:tests::test_read_chunk_size
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^        fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:addr_stream::AddrStream
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Upgraded
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:ProgressBarRead
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    read: R,$/;"	m	struct:ProgressBarRead
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Peeked
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Reader
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Conn
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:TlsStream
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Reader
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Response
read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/async.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:AsyncReader
read	/home/doc/Code/Git/oracle/src/download.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:DownloadProgress
read_async	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn read_async(mut decoder: Decoder,$/;"	f	module:tests
read_blocked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    read_blocked: bool,$/;"	m	struct:Buffered
read_body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn read_body(&mut self) -> Poll<Option<Chunk>, io::Error> {$/;"	f
read_body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn read_body<R: MemRead>(rdr: &mut R,$/;"	P	implementation:ChunkedState
read_body_cr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn read_body_cr<R: MemRead>(rdr: &mut R) -> Poll<ChunkedState, io::Error> {$/;"	P	implementation:ChunkedState
read_body_lf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn read_body_lf<R: MemRead>(rdr: &mut R) -> Poll<ChunkedState, io::Error> {$/;"	P	implementation:ChunkedState
read_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub read_buf: Bytes,$/;"	m	struct:Parts
read_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    fn read_buf<B: BufMut>(&mut self, buf: &mut B) -> Poll<usize, io::Error> {$/;"	f
read_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub fn read_buf(&self) -> &[u8] {$/;"	f
read_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    read_buf: BytesMut,$/;"	m	struct:Buffered
read_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub read_buf: Bytes,$/;"	m	struct:Parts
read_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^        fn read_buf<B: BufMut>(&mut self, buf: &mut B) -> Poll<usize, io::Error> {$/;"	P	implementation:addr_stream::AddrStream
read_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    fn read_buf<B: BufMut>(&mut self, buf: &mut B) -> Poll<usize, io::Error> {$/;"	P	implementation:Upgraded
read_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    pub read_buf: Bytes,$/;"	m	struct:Parts
read_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    fn read_buf<B: BufMut>(&mut self, buf: &mut B) -> Poll<usize, io::Error> {$/;"	P	implementation:Conn
read_buf_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub(super) fn read_buf_mut(&mut self) -> &mut BytesMut {$/;"	f
read_buf_strategy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    read_buf_strategy: ReadStrategy,$/;"	m	struct:Buffered
read_captures_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn read_captures_at<'t>($/;"	P	implementation:Regex
read_captures_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn read_captures_at<'t>($/;"	P	implementation:Regex
read_end_cr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn read_end_cr<R: MemRead>(rdr: &mut R) -> Poll<ChunkedState, io::Error> {$/;"	P	implementation:ChunkedState
read_end_lf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn read_end_lf<R: MemRead>(rdr: &mut R) -> Poll<ChunkedState, io::Error> {$/;"	P	implementation:ChunkedState
read_err	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^        fn read_err(s: &str, expected_err: io::ErrorKind) {$/;"	f	function:tests::test_read_chunk_size
read_extension	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn read_extension<R: MemRead>(rdr: &mut R) -> Poll<ChunkedState, io::Error> {$/;"	P	implementation:ChunkedState
read_from_io	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub fn read_from_io(&mut self) -> Poll<usize, io::Error> {$/;"	f
read_head	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn read_head(&mut self) -> Poll<Option<(MessageHead<T::Incoming>, DecodedLength, bool)>,/;"	f
read_keep_alive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn read_keep_alive(&mut self) -> Result<(), ::Error> {$/;"	f
read_line	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn read_line(&mut self) -> io::Result<Option<String>> {$/;"	P	implementation:R
read_line	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn read_line(&mut self) -> io::Result<Option<String>>;$/;"	P	interface:TermRead
read_mem	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^        fn read_mem(&mut self, len: usize) -> Poll<Bytes, io::Error> {$/;"	P	implementation:tests::u8
read_mem	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^        fn read_mem(&mut self, len: usize) -> Poll<Bytes, io::Error> {$/;"	P	implementation:tests::AsyncIo
read_mem	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn read_mem(&mut self, len: usize) -> Poll<Bytes, io::Error> {$/;"	f
read_mem	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn read_mem(&mut self, len: usize) -> Poll<Bytes, io::Error>;$/;"	P	interface:MemRead
read_passwd	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn read_passwd<W: Write>(&mut self, writer: &mut W) -> io::Result<Option<String>> {$/;"	P	interface:TermRead
read_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn read_size<R: MemRead>(rdr: &mut R, size: &mut u64) -> Poll<ChunkedState, io::Error> {$/;"	P	implementation:ChunkedState
read_size_lf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn read_size_lf<R: MemRead>(rdr: &mut R, size: u64) -> Poll<ChunkedState, io::Error> {$/;"	P	implementation:ChunkedState
read_size_lws	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn read_size_lws<R: MemRead>(rdr: &mut R) -> Poll<ChunkedState, io::Error> {$/;"	P	implementation:ChunkedState
read_strategy_adaptive_decrements	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn read_strategy_adaptive_decrements() {$/;"	f	module:tests
read_strategy_adaptive_increments	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn read_strategy_adaptive_increments() {$/;"	f	module:tests
read_strategy_adaptive_max_fuzz	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn read_strategy_adaptive_max_fuzz() {$/;"	f	module:tests
read_strategy_adaptive_stays_the_same	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn read_strategy_adaptive_stays_the_same() {$/;"	f	module:tests
read_to_end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fn read_to_end() {$/;"	f	module:tests
read_to_end_with_header	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fn read_to_end_with_header() {$/;"	f	module:tests
read_to_end_with_length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    fn read_to_end_with_length() {$/;"	f	module:tests
read_to_string	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^pub(crate) fn read_to_string(mut body: Body) -> io::Result<String> {$/;"	f
read_vari32	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^fn read_vari32(data: &[u8]) -> (i32, usize) {$/;"	f
read_varu32	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^fn read_varu32(data: &[u8]) -> (u32, usize) {$/;"	f
reader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub fn reader<T: Read + Send + 'static>(value: T) -> Part {$/;"	P	implementation:Part
reader	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub(crate) fn reader(self) -> Reader {$/;"	P	implementation:Form
reader_with_length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub fn reader_with_length<T: Read + Send + 'static>(value: T, length: u64) -> Part {$/;"	P	implementation:Part
reading	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    reading: Reading,$/;"	m	struct:State
ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    fn ready(&mut self) {$/;"	P	implementation:Peeked
record	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn record(&mut self, bytes_read: usize) {$/;"	P	implementation:ReadStrategy
record_header_indices	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^fn record_header_indices($/;"	f
record_step	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    pub fn record_step(&mut self, value: u64) {$/;"	P	implementation:Estimate
recur	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/document.rs	/^        fn recur(document: &mut Document,$/;"	f	method:Document::from
recur	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^        fn recur(node: &Node, string: &mut String) {$/;"	f	method:Node::text
recur	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^        fn recur(node: &Node, bit_set: &mut BitSet) {$/;"	f	method:Selection::find
recv	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/async.rs	/^    recv: mpsc::Receiver<io::Result<u8>>,$/;"	m	struct:AsyncReader
recv_msg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn recv_msg(&mut self, msg: ::Result<(Self::RecvItem, Body)>) -> ::Result<()> {$/;"	f
recv_msg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn recv_msg(&mut self, msg: ::Result<(Self::RecvItem, Body)>) -> ::Result<()>;$/;"	P	interface:Dispatch
redirect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn redirect(mut self, policy: RedirectPolicy) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
redirect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn redirect(self, policy: RedirectPolicy) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
redirect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^mod redirect;$/;"	n
redirect	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    pub fn redirect(&self, attempt: RedirectAttempt) -> RedirectAction {$/;"	P	implementation:RedirectPolicy
redirect_policy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    redirect_policy: RedirectPolicy,$/;"	m	struct:ClientRef
redirect_policy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    redirect_policy: RedirectPolicy,$/;"	m	struct:Config
redox	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^#[cfg(target_os = "redox")]                                                       mod redox;$/;"	n
referer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn referer(mut self, enable: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
referer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    referer: bool,$/;"	m	struct:ClientRef
referer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    referer: bool,$/;"	m	struct:Config
referer	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn referer(self, enable: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
regex	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    pub fn regex(&self) -> &R {$/;"	f
regex_strings	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn regex_strings(&self) -> &[String] {$/;"	P	implementation:Exec
reject_invalid	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^    fn reject_invalid() {$/;"	f	module:tests
reject_invalid_last	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^    fn reject_invalid_last() {$/;"	f	module:tests
remaining	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn remaining(&self) -> usize {$/;"	P	implementation:Chunk
remaining	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/buf.rs	/^    fn remaining(&self) -> usize {$/;"	P	implementation:StaticBuf
remaining	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn remaining(&self) -> usize {$/;"	P	implementation:ChunkSize
remaining	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn remaining(&self) -> usize {$/;"	f
remaining	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn remaining(&self) -> usize {$/;"	P	implementation:BufDeque
remaining	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn remaining(&self) -> usize {$/;"	P	implementation:Cursor
remaining	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn remaining(&self) -> usize {$/;"	P	implementation:WriteBuf
remaining	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn remaining(&self) -> usize {$/;"	P	implementation:WriteBufAuto
remaining	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^    fn remaining(&self) -> usize {$/;"	P	implementation:SendBuf
remaining	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    fn remaining(&self) -> usize {$/;"	P	implementation:Chunk
remote	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    remote: ConnectingTcpRemote,$/;"	m	struct:ConnectingTcpFallback
remote_addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    pub fn remote_addr(&self) -> SocketAddr {$/;"	P	implementation:HttpInfo
remote_addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    remote_addr: SocketAddr,$/;"	m	struct:HttpInfo
remote_addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^        pub fn remote_addr(&self) -> SocketAddr {$/;"	P	implementation:addr_stream::AddrStream
remote_addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    pub fn remote_addr(&self) -> Option<SocketAddr> {$/;"	P	implementation:Response
remote_addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    pub fn remote_addr(&self) -> Option<SocketAddr> {$/;"	P	implementation:Response
remove_sensitive_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^pub(crate) fn remove_sensitive_headers(headers: &mut HeaderMap, next: &Url, previous: &[Url]) {$/;"	f
replace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn replace<'t, R: Replacer>($/;"	P	implementation:Regex
replace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn replace<'t, R: Replacer>($/;"	P	implementation:Regex
replace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    pub fn replace(&mut self, i: usize, byte: u8) {$/;"	P	implementation:u8x32
replace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    pub fn replace(&mut self, i: usize, byte: u8) {$/;"	P	implementation:u8x16
replace_all	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn replace_all<'t, R: Replacer>($/;"	P	implementation:Regex
replace_all	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn replace_all<'t, R: Replacer>($/;"	P	implementation:Regex
replace_append	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn replace_append(&mut self, _: &Captures, dst: &mut Vec<u8>) {$/;"	P	implementation:NoExpand
replace_append	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut Vec<u8>) {$/;"	P	implementation:ReplacerRef
replace_append	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut Vec<u8>) {$/;"	P	implementation:u8
replace_append	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut Vec<u8>) {$/;"	f
replace_append	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut Vec<u8>);$/;"	P	interface:Replacer
replace_append	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn replace_append(&mut self, _: &Captures, dst: &mut String) {$/;"	P	implementation:NoExpand
replace_append	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut String) {$/;"	P	implementation:ReplacerRef
replace_append	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut String) {$/;"	P	implementation:str
replace_append	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut String) {$/;"	f
replace_append	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut String);$/;"	P	interface:Replacer
replace_plus	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^fn replace_plus(input: &[u8]) -> Cow<[u8]> {$/;"	f
replacen	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn replacen<'t, R: Replacer>($/;"	P	implementation:Regex
replacen	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn replacen<'t, R: Replacer>($/;"	P	implementation:Regex
reply	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^                    macro_rules! reply {$/;"	M	function:poll2
reply	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    reply: SendResponse<SendBuf<B::Data>>,$/;"	m	struct:H2Stream
req_method	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    req_method: &'a mut Option<Method>,$/;"	m	struct:Encode
req_method	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    req_method: &'a mut Option<Method>,$/;"	m	struct:ParseContext
request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pub fn request(&self, mut req: Request<B>) -> ResponseFuture {$/;"	f
request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn request<U: IntoUrl>(&self, method: Method, url: U) -> RequestBuilder {$/;"	P	implementation:Client
request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/mod.rs	/^mod request;$/;"	n
request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    request: ::Result<Request>,$/;"	m	struct:RequestBuilder
request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn request<U: IntoUrl>(&self, method: Method, url: U) -> RequestBuilder {$/;"	P	implementation:Client
request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^mod request;$/;"	n
request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    request: ::Result<Request>,$/;"	m	struct:RequestBuilder
require_empty_read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn require_empty_read(&mut self) -> io::Result<()> {$/;"	f
res	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    res: Vec<String>,$/;"	m	struct:ExecReadOnly
reserve	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn reserve(self) -> Reservation<Self> {$/;"	f
reserve	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^        fn reserve(self) -> Reservation<Self> {$/;"	P	implementation:tests::CanClose
reserve	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^        fn reserve(self) -> Reservation<Self> {$/;"	P	implementation:tests::Uniq
reserve	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn reserve(self) -> Reservation<Self>;$/;"	P	interface:Poolable
reset	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn reset(&mut self) {$/;"	P	implementation:Cursor
reset	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    pub fn reset(&mut self) {$/;"	P	implementation:Estimate
reset_eta	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn reset_eta(&self) {$/;"	P	implementation:ProgressBar
reset_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn reset_size(&mut self) {$/;"	P	implementation:CacheInner
resize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    fn resize(&mut self, num_insts: usize, ncaps: usize) {$/;"	P	implementation:Threads
resolve	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    fn resolve(&self, name: Name) -> Self::Future {$/;"	P	implementation:GaiResolver
resolve	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    fn resolve(&self, name: Name) -> Self::Future;$/;"	P	interface:Resolve
resolve	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    fn resolve(&self, name: Name) -> TokioThreadpoolGaiFuture {$/;"	P	implementation:TokioThreadpoolGaiResolver
resolved	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^    resolved: Mutex<bool>,$/;"	m	struct:MaybeResolved
resolver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    resolver: R,$/;"	m	struct:HttpConnector
response	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/mod.rs	/^mod response;$/;"	n
response	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^mod response;$/;"	n
restart	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^        fn restart(b: &mut BytesMut, len: usize) {$/;"	f	function:tests::bench_parse_incoming
restart	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^        fn restart(b: &mut BytesMut, len: usize) {$/;"	f	function:tests::bench_parse_short
restore_after_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn restore_after_path(&mut self, old_after_path_position: u32, after_path: &str) {$/;"	P	implementation:Url
restore_already_parsed_fragment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn restore_already_parsed_fragment(&mut self, fragment: Option<String>) {$/;"	P	implementation:Url
restore_state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn restore_state(&mut self, state: State) -> Option<StatePtr> {$/;"	P	implementation:Fsm
result_ext	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^mod result_ext;$/;"	n
retry_canceled_requests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pub fn retry_canceled_requests(&mut self, val: bool) -> &mut Self {$/;"	P	implementation:Builder
retry_canceled_requests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    retry_canceled_requests: bool,$/;"	m	struct:Config
retryable_request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/tests.rs	/^fn retryable_request() {$/;"	f
retryably_send_request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn retryably_send_request(&self, req: Request<B>, pool_key: PoolKey) -> impl Future<Item=Res/;"	f
reusable	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    pub(crate) fn reusable(chunk: Bytes) -> Body {$/;"	P	implementation:Body
reuse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn reuse(&self, key: &Key, value: T) -> Pooled<T> {$/;"	P	implementation:Pool
reuse_address	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    reuse_address: bool,$/;"	m	struct:ConnectingTcp
reuse_address	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    reuse_address: bool,$/;"	m	struct:HttpConnecting
reuse_address	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    reuse_address: bool,$/;"	m	struct:HttpConnector
reverse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    pub fn reverse(mut self, yes: bool) -> Self {$/;"	P	implementation:Compiler
reverse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    pub fn reverse($/;"	P	implementation:Fsm
rewind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/mod.rs	/^mod rewind;$/;"	n
rewind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    pub(crate) fn rewind(&mut self, bs: Bytes) {$/;"	P	implementation:Rewind
rgb	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^    pub fn rgb(r: u8, g: u8, b: u8) -> AnsiValue {$/;"	P	implementation:AnsiValue
ro	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    ro: &'c Arc<ExecReadOnly>,$/;"	m	struct:ExecNoSync
ro	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    ro: Arc<ExecReadOnly>,$/;"	m	struct:Exec
role	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^mod role;$/;"	n
root	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    root: PathBuf,$/;"	m	struct:WalkDir
root_cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^    pub fn root_cause(&self) -> &Fail {$/;"	P	implementation:Error
root_cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    fn root_cause(&self) -> &Fail$/;"	P	interface:Fail
root_cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^    pub fn root_cause(&self) -> &Fail {$/;"	P	implementation:Fail
root_cause	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    pub fn root_cause(&self) -> &Fail {$/;"	P	implementation:Error
root_device	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    root_device: Option<u64>,$/;"	m	struct:IntoIter
row	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/size.rs	/^    row: c_ushort,$/;"	m	struct:TermSize
rt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/lib.rs	/^#[cfg(feature = "runtime")] pub mod rt;$/;"	n
run	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/rt.rs	/^pub fn run<F>(f: F)$/;"	f
run_xdg_user_dir_command	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^fn run_xdg_user_dir_command(arg: &str) -> Option<PathBuf> {$/;"	f
runtime_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^pub fn runtime_dir() -> Option<PathBuf> {$/;"	f
runtime_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^pub fn runtime_dir()    -> Option<PathBuf> { env::var_os("XDG_RUNTIME_DIR").and_then(is_absolute/;"	f
runtime_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/mac.rs	/^pub fn runtime_dir()    -> Option<PathBuf> { None }$/;"	f
runtime_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^pub fn runtime_dir()    -> Option<PathBuf> { env::var_os("XDG_RUNTIME_DIR").and_then(is_absolute/;"	f
runtime_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^pub fn runtime_dir()    -> Option<PathBuf> { None }$/;"	f
rx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    rx: oneshot::SpawnHandle<IpAddrs, io::Error>,$/;"	m	struct:GaiFuture
rx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    rx: Shared<oneshot::Receiver<()>>,$/;"	m	struct:Watch
rx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    rx: ClientRx<B>,$/;"	m	struct:Client
rx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/client.rs	/^    rx: ClientRx<B>,$/;"	m	struct:Client
rx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    rx: Option<oneshot::Receiver<::Result<Upgraded>>>,$/;"	m	struct:OnUpgrade
rx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    rx: Receiver<(usize, ProgressDrawState)>,$/;"	m	struct:MultiProgress
same_file_system	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn same_file_system(mut self, yes: bool) -> Self {$/;"	P	implementation:WalkDir
same_file_system	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    same_file_system: bool,$/;"	m	struct:WalkDirOptions
scheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    pub fn scheme(&self) -> &str {$/;"	P	implementation:Destination
scheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^        fn scheme(&self) -> &str {$/;"	P	implementation:tests::Url
scheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    fn scheme(&self) -> &str {$/;"	P	implementation:Destination
scheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    fn scheme(&self) -> &str;$/;"	P	interface:Dst
scheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn scheme(&self) -> &str {$/;"	P	implementation:Url
scheme_end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    scheme_end: u32,  \/\/ Before ':'$/;"	m	struct:Url
screen	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/lib.rs	/^pub mod screen;$/;"	n
scroll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/lib.rs	/^pub mod scroll;$/;"	n
sealed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^pub(super) mod sealed {$/;"	n
sealed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/make_service.rs	/^mod sealed {$/;"	n
sealed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^mod sealed {$/;"	n
search	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn search(url: &Url) -> &str {$/;"	f
searcher	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn searcher(&self) -> ExecNoSync {$/;"	P	implementation:Exec
searcher_str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn searcher_str(&self) -> ExecNoSyncStr {$/;"	P	implementation:Exec
secs_to_duration	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^pub fn secs_to_duration(s: f64) -> Duration {$/;"	f
select_guard	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn select_guard(pattern: &[u8]) -> (u8, usize) {$/;"	P	implementation:BoyerMooreSearch
selection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/lib.rs	/^pub mod selection;$/;"	n
selection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/selection.rs	/^    selection: &'sel Selection<'doc>,$/;"	m	struct:Iter
send	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    pub fn send(&mut self, val: T) -> Result<Promise<U>, T> {$/;"	P	implementation:Sender
send	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    pub fn send(self, val: Result<U, (::Error, Option<T>)>) {$/;"	P	implementation:Callback
send	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn send(self) -> Pending {$/;"	P	implementation:RequestBuilder
send	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    pub(crate) fn send(self) -> impl Future<Item=(), Error=::Error> {$/;"	P	implementation:Sender
send	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn send(self) -> ::Result<::Response> {$/;"	P	implementation:RequestBuilder
send_data	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    pub fn send_data(&mut self, chunk: Chunk) -> Result<(), Chunk> {$/;"	P	implementation:Sender
send_eos_frame	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^    fn send_eos_frame(&mut self) -> ::Result<()> {$/;"	f
send_error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    pub(crate) fn send_error(&mut self, err: ::Error) {$/;"	P	implementation:Sender
send_request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub fn send_request(&mut self, req: Request<B>) -> ResponseFuture {$/;"	f
send_request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn send_request(&self, mut req: Request<B>, pool_key: PoolKey) -> impl Future<Item=Response</;"	f
send_request_retryable	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub(crate) fn send_request_retryable(&mut self, req: Request<B>) -> impl Future<Item = Respo/;"	f
send_request_retryable	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub(super) fn send_request_retryable(&mut self, req: Request<B>) -> impl Future<Item=Respons/;"	f
send_request_retryable	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn send_request_retryable(&mut self, req: Request<B>) -> impl Future<Item = Response<Body>, /;"	P	implementation:PoolClient
sender_checks_for_want_on_send	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    fn sender_checks_for_want_on_send() {$/;"	f	module:tests
serialization	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    serialization: String,$/;"	m	struct:Url
serialization	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub serialization: String,$/;"	m	struct:Parser
serialize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^            fn serialize<S>(&self, _serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:tests::add_json_fail::MyStruct
serialize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    fn serialize<S: serialize::Serializer>(&self,$/;"	P	implementation:Node
serialize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    fn serialize<R>(&self, serializer: &mut R) -> Result<(), R::Error> where R: ::serde::Seriali/;"	P	implementation:Host
serialize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    fn serialize<S>(&self, serializer: &mut S) -> Result<(), S::Error> where S: ::serde::Seriali/;"	P	implementation:HostInternal
serialize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn serialize<S>(&self, serializer: &mut S) -> Result<(), S::Error> where S: serde::Serialize/;"	P	implementation:Url
serialize_internal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn serialize_internal<S>(&self, serializer: &mut S) -> Result<(), S::Error> where S: ser/;"	P	implementation:Url
serve	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn serve<S, B>(self, new_service: S) -> Server<I, S, E>$/;"	P	implementation:Builder
serve_addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn serve_addr<S, Bd>(&self, addr: &SocketAddr, make_service: S) -> ::Result<Serve<AddrIn/;"	P	implementation:Http
serve_addr_handle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn serve_addr_handle<S, Bd>(&self, addr: &SocketAddr, handle: &Handle, make_service: S) /;"	P	implementation:Http
serve_connection	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn serve_connection<S, I, Bd>(&self, io: I, service: S) -> Connection<I, S, E>$/;"	P	implementation:Http
serve_incoming	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn serve_incoming<I, S, Bd>(&self, incoming: I, make_service: S) -> Serve<I, S, E>$/;"	P	implementation:Http
server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/lib.rs	/^pub mod server;$/;"	n
server	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^pub(crate) mod server;$/;"	n
server_error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^pub(crate) fn server_error(url: Url, status: StatusCode) -> Error {$/;"	f
service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/lib.rs	/^pub mod service;$/;"	n
service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    service: S,$/;"	m	struct:Server
service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub service: S,$/;"	m	struct:Parts
service	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/mod.rs	/^mod service;$/;"	n
service_fn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^pub fn service_fn<F, R, S>(f: F) -> ServiceFn<F, R>$/;"	f
service_fn_ok	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/service/service.rs	/^pub fn service_fn_ok<F, R, S>(f: F) -> ServiceFnOk<F, R>$/;"	f
set	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    fn set(&self, res: &mut Response<::Body>) {$/;"	f
set	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    fn set(&self, res: &mut Response<::Body>);$/;"	P	interface:ExtraInner
set	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    pub(super) fn set(&self, res: &mut Response<::Body>) {$/;"	P	implementation:Extra
set	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    set: SparseSet,$/;"	m	struct:Threads
set_content_length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^fn set_content_length(headers: &mut HeaderMap, len: u64) -> Encoder {$/;"	f
set_content_length_if_missing	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/headers.rs	/^pub fn set_content_length_if_missing(headers: &mut HeaderMap, len: u64) {$/;"	f
set_disable_half_close	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub(crate) fn set_disable_half_close(&mut self) {$/;"	f
set_draw_delta	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn set_draw_delta(&self, n: u64) {$/;"	P	implementation:ProgressBar
set_draw_target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn set_draw_target(&self, target: ProgressDrawTarget) {$/;"	P	implementation:MultiProgress
set_draw_target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn set_draw_target(&self, target: ProgressDrawTarget) {$/;"	P	implementation:ProgressBar
set_empty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn set_empty(&mut self) {$/;"	P	implementation:StateFlags
set_flush_pipeline	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn set_flush_pipeline(&mut self, enabled: bool) {$/;"	f
set_flush_pipeline	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub fn set_flush_pipeline(&mut self, enabled: bool) {$/;"	f
set_fragment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn set_fragment(&mut self, fragment: Option<&str>) {$/;"	P	implementation:Url
set_happy_eyeballs_timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    pub fn set_happy_eyeballs_timeout(&mut self, dur: Option<Duration>) {$/;"	P	implementation:HttpConnector
set_hash	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn set_hash(url: &mut Url, new_hash: &str) {$/;"	f
set_host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    pub fn set_host(&mut self, host: &str) -> ::Result<()> {$/;"	P	implementation:Destination
set_host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    pub fn set_host(&mut self, val: bool) -> &mut Self {$/;"	P	implementation:Builder
set_host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    set_host: bool,$/;"	m	struct:Config
set_host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn set_host(&mut self, host: Option<&str>) -> Result<(), ParseError> {$/;"	P	implementation:Url
set_host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn set_host(url: &mut Url, new_host: &str) -> Result<(), ()> {$/;"	f
set_host_internal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn set_host_internal(&mut self, host: Host<String>, opt_new_port: Option<Option<u16>>) {$/;"	P	implementation:Url
set_hostname	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn set_hostname(url: &mut Url, new_hostname: &str) -> Result<(), ()> {$/;"	f
set_href	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn set_href(url: &mut Url, value: &str) -> Result<(), ParseError> {$/;"	f
set_ip_host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn set_ip_host(&mut self, address: IpAddr) -> Result<(), ()> {$/;"	P	implementation:Url
set_keepalive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    pub fn set_keepalive(&mut self, dur: Option<Duration>) {$/;"	P	implementation:HttpConnector
set_keepalive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    pub fn set_keepalive(&mut self, keepalive: Option<Duration>) -> &mut Self {$/;"	P	implementation:AddrIncoming
set_last	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    pub fn set_last(mut self, is_last: bool) -> Self {$/;"	P	implementation:Encoder
set_length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn set_length(head: &mut RequestHead, body: Option<BodyLength>) -> Encoder {$/;"	P	implementation:Client
set_length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^fn set_length(headers: &mut HeaderMap, body: BodyLength, can_chunked: bool) -> Encoder {$/;"	f
set_length	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn set_length(&self, len: u64) {$/;"	P	implementation:ProgressBar
set_local_address	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    pub fn set_local_address(&mut self, addr: Option<IpAddr>) {$/;"	P	implementation:HttpConnector
set_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn set_match(&mut self) {$/;"	P	implementation:StateFlags
set_max_buf_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn set_max_buf_size(&mut self, max: usize) {$/;"	f
set_max_buf_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub fn set_max_buf_size(&mut self, max: usize) {$/;"	f
set_message	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn set_message(&self, msg: &str) {$/;"	P	implementation:ProgressBar
set_move_cursor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn set_move_cursor(&self, move_cursor: bool) {$/;"	P	implementation:MultiProgress
set_next	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn set_next(&mut self, si: StatePtr, cls: usize, next: StatePtr) {$/;"	P	implementation:Transitions
set_nodelay	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    pub fn set_nodelay(&mut self, nodelay: bool) {$/;"	P	implementation:HttpConnector
set_nodelay	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    pub fn set_nodelay(&mut self, enabled: bool) -> &mut Self {$/;"	P	implementation:AddrIncoming
set_non_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn set_non_match(self, at: usize) -> Result<T> {$/;"	P	implementation:Result
set_on_upgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    pub(crate) fn set_on_upgrade(&mut self, upgrade: OnUpgrade) {$/;"	P	implementation:Body
set_password	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn set_password(&mut self, password: Option<&str>) -> Result<(), ()> {$/;"	P	implementation:Url
set_password	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn set_password(url: &mut Url, new_password: &str) -> Result<(), ()> {$/;"	f
set_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn set_path(&mut self, mut path: &str) {$/;"	P	implementation:Url
set_pathname	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn set_pathname(url: &mut Url, new_pathname: &str) {$/;"	f
set_port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    pub fn set_port<P>(&mut self, port: P)$/;"	P	implementation:Destination
set_port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn set_port(&mut self, mut port: Option<u16>) -> Result<(), ()> {$/;"	P	implementation:Url
set_port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn set_port(url: &mut Url, new_port: &str) -> Result<(), ()> {$/;"	f
set_port_internal	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn set_port_internal(&mut self, port: Option<u16>) {$/;"	P	implementation:Url
set_port_opt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    fn set_port_opt(&mut self, port: Option<u16>) {$/;"	P	implementation:Destination
set_position	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn set_position(&self, pos: u64) {$/;"	P	implementation:ProgressBar
set_prefix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn set_prefix(&self, prefix: &str) {$/;"	P	implementation:ProgressBar
set_protocol	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn set_protocol(url: &mut Url, mut new_protocol: &str) -> Result<(), ()> {$/;"	f
set_query	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn set_query(&mut self, query: Option<&str>) {$/;"	P	implementation:Url
set_range	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn set_range(&mut self, start: u8, end: u8) {$/;"	P	implementation:ByteClassSet
set_reactor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    pub fn set_reactor(&mut self, handle: Option<Handle>) {$/;"	P	implementation:HttpConnector
set_read_buf_exact_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn set_read_buf_exact_size(&mut self, sz: usize) {$/;"	f
set_read_buf_exact_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub fn set_read_buf_exact_size(&mut self, sz: usize) {$/;"	f
set_relative_uri_with_implicit_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn set_relative_uri_with_implicit_path() {$/;"	f	module:unit_tests
set_reuse_address	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    pub fn set_reuse_address(&mut self, reuse_address: bool) -> &mut Self {$/;"	P	implementation:HttpConnector
set_scheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    pub fn set_scheme(&mut self, scheme: &str) -> ::Result<()> {$/;"	P	implementation:Destination
set_scheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^fn set_scheme(uri: &mut Uri, scheme: Scheme) {$/;"	f
set_scheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn set_scheme(&mut self, scheme: &str) -> Result<(), ()> {$/;"	P	implementation:Url
set_search	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn set_search(url: &mut Url, new_search: &str) {$/;"	f
set_sleep_on_errors	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    pub fn set_sleep_on_errors(&mut self, val: bool) {$/;"	P	implementation:AddrIncoming
set_strategy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn set_strategy(&mut self, strategy: WriteStrategy) {$/;"	f
set_style	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn set_style(&self, style: ProgressStyle) {$/;"	P	implementation:ProgressBar
set_terminal_attr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/redox/attr.rs	/^pub fn set_terminal_attr(termios: &Termios) -> io::Result<()> {$/;"	f
set_terminal_attr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/attr.rs	/^pub fn set_terminal_attr(termios: &Termios) -> io::Result<()> {$/;"	f
set_title_case_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn set_title_case_headers(&mut self) {$/;"	f
set_username	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn set_username(&mut self, username: &str) -> Result<(), ()> {$/;"	P	implementation:Url
set_username	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn set_username(url: &mut Url, new_username: &str) -> Result<(), ()> {$/;"	f
set_word	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn set_word(&mut self) {$/;"	P	implementation:StateFlags
set_word_boundary	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn set_word_boundary(&mut self) {$/;"	P	implementation:ByteClassSet
set_write_strategy_flatten	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn set_write_strategy_flatten(&mut self) {$/;"	f
set_write_strategy_flatten	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub fn set_write_strategy_flatten(&mut self) {$/;"	f
shortest_dfa	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn shortest_dfa(&self, text: &[u8], start: usize) -> dfa::Result<usize> {$/;"	P	implementation:ExecNoSync
shortest_dfa_reverse_suffix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn shortest_dfa_reverse_suffix($/;"	P	implementation:ExecNoSync
shortest_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn shortest_match(&self, text: &[u8]) -> Option<usize> {$/;"	P	implementation:Regex
shortest_match	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn shortest_match(&self, text: &str) -> Option<usize> {$/;"	P	implementation:Regex
shortest_match_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn shortest_match_at(&self, text: &[u8], start: usize) -> Option<usize> {$/;"	P	implementation:ExecNoSync
shortest_match_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn shortest_match_at(&self, text: &str, start: usize) -> Option<usize> {$/;"	P	implementation:ExecNoSyncStr
shortest_match_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn shortest_match_at($/;"	P	implementation:Regex
shortest_match_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    fn shortest_match_at($/;"	P	interface:RegularExpression
shortest_match_at	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn shortest_match_at($/;"	P	implementation:Regex
shortest_nfa	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn shortest_nfa(&self, text: &[u8], start: usize) -> Option<usize> {$/;"	P	implementation:ExecNoSync
shortest_nfa_type	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn shortest_nfa_type($/;"	P	implementation:ExecNoSync
should_error_on_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn should_error_on_eof(&self) -> bool {$/;"	f
should_error_on_parse_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    fn should_error_on_parse_eof() -> bool;$/;"	P	interface:Http1Transaction
should_error_on_parse_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn should_error_on_parse_eof() -> bool {$/;"	P	implementation:Client
should_error_on_parse_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn should_error_on_parse_eof() -> bool {$/;"	P	implementation:Server
should_exec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^pub fn should_exec(num_insts: usize, text_len: usize) -> bool {$/;"	f
should_poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn should_poll(&self) -> bool {$/;"	f
should_poll	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^    fn should_poll(&self) -> bool;$/;"	P	interface:Dispatch
should_read_first	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    fn should_read_first() -> bool;$/;"	P	interface:Http1Transaction
should_read_first	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn should_read_first() -> bool {$/;"	P	implementation:Client
should_read_first	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn should_read_first() -> bool {$/;"	P	implementation:Server
should_render	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn should_render(&self) -> bool {$/;"	P	implementation:ProgressState
should_suffix_scan	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn should_suffix_scan(&self) -> bool {$/;"	P	implementation:ExecReadOnly
should_use	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn should_use(pattern: &[u8]) -> bool {$/;"	P	implementation:BoyerMooreSearch
show_state_ptr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^fn show_state_ptr(si: StatePtr) -> String {$/;"	f
shrink	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^            fn shrink(&self) -> Box<Iterator<Item=NonEmptyAscii>> {$/;"	P	implementation:Tree::gen::NonEmptyAscii
shrink	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    fn shrink(&self) -> Box<Iterator<Item=Tree>> {$/;"	P	implementation:Tree
shuffle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    pub fn shuffle(self, indices: u8x32) -> u8x32 {$/;"	P	implementation:u8x32
shuffle	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    pub fn shuffle(self, indices: u8x16) -> u8x16 {$/;"	P	implementation:u8x16
shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	f
shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	P	implementation:AsyncIo
shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	P	implementation:Duplex
shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	f
shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^mod shutdown;$/;"	n
shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^        fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	P	implementation:addr_stream::AddrStream
shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	P	implementation:Upgraded
shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	P	implementation:Conn
shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^    fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	P	implementation:TlsStream
simple_enum_error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^macro_rules! simple_enum_error {$/;"	M
size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    size: usize,$/;"	m	struct:CacheInner
size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    size: usize,$/;"	m	struct:Masks
size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    size: usize,$/;"	m	struct:Masks
size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/redox/mod.rs	/^pub mod size;$/;"	n
size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/mod.rs	/^pub mod size;$/;"	n
size_hint	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IntoIter
size_hint	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:CaptureNames
size_hint	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:CaptureNames
size_hint	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:ByteSerialize
size_limit	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    pub fn size_limit(mut self, size_limit: usize) -> Self {$/;"	P	implementation:Compiler
size_limit	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    size_limit: usize,$/;"	m	struct:Compiler
size_limit	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_builder.rs	/^    pub size_limit: usize,$/;"	m	struct:RegexOptions
sized	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    pub fn sized<R: Read + Send + 'static>(reader: R, len: u64) -> Body {$/;"	P	implementation:Body
skip	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub fn skip(&self, mut pc: usize) -> usize {$/;"	P	implementation:Program
skip_current_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn skip_current_dir(&mut self) {$/;"	P	implementation:IntoIter
skip_current_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn skip_current_dir(&mut self) {$/;"	f
skip_loop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn skip_loop(&self,$/;"	P	implementation:BoyerMooreSearch
skip_table	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    skip_table: Vec<usize>,$/;"	m	struct:BoyerMooreSearch
skippable	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    fn skippable(&self) -> bool {$/;"	P	implementation:IntoIter
sleep_on_errors	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    sleep_on_errors: bool,$/;"	m	struct:AddrIncoming
slice	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn slice<R>(&self, range: R) -> &str where R: RangeArg {$/;"	P	implementation:Url
slice_of	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn slice_of<'a>(&self, s: &'a str) -> &'a str {$/;"	P	implementation:Range
slice_of	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn slice_of<'a>(&self, s: &'a str) -> &'a str {$/;"	P	implementation:RangeFrom
slice_of	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn slice_of<'a>(&self, s: &'a str) -> &'a str {$/;"	P	implementation:RangeTo
slice_of	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn slice_of<'a>(&self, s: &'a str) -> &'a str;$/;"	P	interface:RangeArg
slicing	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^mod slicing;$/;"	n
slot	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub slot: usize,$/;"	m	struct:InstSave
slots	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^    slots: &'s mut [Slot],$/;"	m	struct:Bounded
slots_len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn slots_len(&self) -> usize { self.0.slots_len() }$/;"	P	implementation:ExecNoSyncStr
slots_len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn slots_len(&self) -> usize {$/;"	P	implementation:ExecNoSync
slots_len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    fn slots_len(&self) -> usize;$/;"	P	interface:RegularExpression
slots_per_thread	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    slots_per_thread: usize,$/;"	m	struct:Threads
slow	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    fn slow(&self, haystack: &[u8], pos: usize) -> Option<Match> {$/;"	P	implementation:Teddy
slow	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    fn slow(&self, haystack: &[u8], pos: usize) -> Option<Match> {$/;"	P	implementation:Teddy
slow_ipv4_addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^        fn slow_ipv4_addr() -> IpAddr {$/;"	f	function:tests::client_happy_eyeballs
slow_ipv6_addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^        fn slow_ipv6_addr() -> IpAddr {$/;"	f	function:tests::client_happy_eyeballs
sort_by	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    pub fn sort_by<F>(mut self, cmp: F) -> Self$/;"	P	implementation:WalkDir
sorter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    sorter: Option<Box<$/;"	m	struct:WalkDirOptions
source	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    source: R,$/;"	m	struct:EventsAndRaw
sparse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    sparse: Box<[usize]>,$/;"	m	struct:SuffixCache
sparse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod sparse;$/;"	n
sparse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    sparse: Vec<bool>,$/;"	m	struct:SingleByteSet
sparse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/sparse.rs	/^    sparse: Box<[usize]>,$/;"	m	struct:SparseSet
spawn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/rt.rs	/^pub fn spawn<F>(f: F) -> Spawn$/;"	f
spawn_all	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub(super) fn spawn_all(self) -> SpawnAll<I, S, E> {$/;"	P	implementation:Serve
spawn_all	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^pub(crate) mod spawn_all {$/;"	n
spawn_all	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    spawn_all: SpawnAll<I, S, E>,$/;"	m	struct:Server
spawn_idle_interval	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn spawn_idle_interval(&mut self, pool_ref: &Arc<Mutex<PoolInner<T>>>) {$/;"	P	implementation:PoolInner
splat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    unsafe fn splat(n: u8) -> u8x32 {$/;"	P	implementation:u8x32
splat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    unsafe fn splat(n: u8) -> u8x16 {$/;"	P	implementation:u8x16
split	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn split<'r, 't>(&'r self, text: &'t [u8]) -> Split<'r, 't> {$/;"	P	implementation:Regex
split	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn split<'r, 't>(&'r self, text: &'t str) -> Split<'r, 't> {$/;"	P	implementation:Regex
split_by_preference	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    pub(super) fn split_by_preference(self) -> (IpAddrs, IpAddrs) {$/;"	P	implementation:IpAddrs
split_first	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn split_first(&self) -> (Option<char>, Self) {$/;"	P	implementation:Input
split_loops_if	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    macro_rules! split_loops_if {$/;"	M	function:record_header_indices
split_prefix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn split_prefix<'i>(self, input: &mut Input<'i>) -> bool { input.next() == Some(self) }$/;"	P	implementation:char
split_prefix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn split_prefix<'i>(self, input: &mut Input<'i>) -> bool { input.next().map_or(false, self) /;"	P	implementation:F
split_prefix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn split_prefix<'i>(self, input: &mut Input<'i>) -> bool {$/;"	P	implementation:str
split_prefix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn split_prefix<'i>(self, input: &mut Input<'i>) -> bool;$/;"	P	interface:Pattern
split_prefix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn split_prefix<P: Pattern>(&self, p: P) -> Option<Self> {$/;"	P	implementation:Input
splitn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn splitn<'r, 't>($/;"	P	implementation:Regex
splitn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn splitn<'r, 't>(&'r self, text: &'t str, limit: usize)$/;"	P	implementation:Regex
splits	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    splits: Split<'r, 't>,$/;"	m	struct:SplitN
splits	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    splits: Split<'r, 't>,$/;"	m	struct:SplitN
ssse3	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/mod.rs	/^pub mod ssse3;$/;"	n
stack	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    stack: Vec<InstPtr>,$/;"	m	struct:CacheInner
stack	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    stack: &'r mut Vec<FollowEpsilon>,$/;"	m	struct:Fsm
stack	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    stack: Vec<FollowEpsilon>,$/;"	m	struct:Cache
stack_list	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    stack_list: Vec<DirList>,$/;"	m	struct:IntoIter
stack_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    stack_path: Vec<Ancestor>,$/;"	m	struct:IntoIter
start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    start: u8,$/;"	m	struct:SuffixCacheKey
start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    start: StatePtr,$/;"	m	struct:Fsm
start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    start: bool,$/;"	m	struct:EmptyFlags
start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/fallback.rs	/^    pub start: usize,$/;"	m	struct:Match
start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    pub start: usize,$/;"	m	struct:Match
start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/fallback.rs	/^    pub start: usize,$/;"	m	struct:Match
start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    pub start: usize,$/;"	m	struct:Match
start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub start: InstPtr,$/;"	m	struct:Program
start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub start: u8,$/;"	m	struct:InstBytes
start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    pub fn start(&self) -> usize {$/;"	P	implementation:Match
start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    start: usize,$/;"	m	struct:Match
start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    pub fn start(&self) -> usize {$/;"	P	implementation:Match
start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    start: usize,$/;"	m	struct:Match
start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    start: Node<'a>,$/;"	m	struct:Descendants
start	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    start: Option<PathBuf>,$/;"	m	struct:IntoIter
start_flags	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn start_flags(&self, text: &[u8], at: usize) -> (EmptyFlags, StateFlags) {$/;"	P	implementation:Fsm
start_flags_reverse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn start_flags_reverse($/;"	P	implementation:Fsm
start_line	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    start_line: bool,$/;"	m	struct:EmptyFlags
start_position	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    start_position: usize,$/;"	m	struct:Serializer
start_ptr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn start_ptr(&self, si: StatePtr) -> StatePtr {$/;"	P	implementation:Fsm
start_state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn start_state($/;"	P	implementation:Fsm
start_states	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    start_states: Vec<StatePtr>,$/;"	m	struct:CacheInner
started	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/lazy.rs	/^    fn started(&self) -> bool {$/;"	f
started	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/lazy.rs	/^    fn started(&self) -> bool;$/;"	P	interface:Started
started	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    started: Instant,$/;"	m	struct:ProgressState
started	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    started: Option<(Instant, u64)>,$/;"	m	struct:Estimate
starts_with	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn starts_with<P: Pattern>(&self, p: P) -> bool {$/;"	P	implementation:Input
starts_with_windows_drive_letter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^fn starts_with_windows_drive_letter(s: &str) -> bool {$/;"	f
starts_with_windows_drive_letter_segment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^fn starts_with_windows_drive_letter_segment(input: &Input) -> bool {$/;"	f
state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    state: State<R>,$/;"	m	struct:HttpConnecting
state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    state: State<FN>,$/;"	m	struct:Watching
state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    state: State,$/;"	m	struct:Conn
state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/client.rs	/^    state: State<T, SendBuf<B::Data>>,$/;"	m	struct:Client
state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    state: H2StreamState<F, B>,$/;"	m	struct:H2Stream
state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/server.rs	/^    state: State<T, B>,$/;"	m	struct:Server
state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^        state: State<I, N, S, E, W>,$/;"	m	struct:spawn_all::NewSvcTask
state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/shutdown.rs	/^    state: State<I, S, F, E>,$/;"	m	struct:Graceful
state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    state: Arc<RwLock<ProgressState>>,$/;"	m	struct:ProgressBar
state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    state: RwLock<MultiProgressState>,$/;"	m	struct:MultiProgress
state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn state(&self, si: StatePtr) -> &State {$/;"	P	implementation:Fsm
state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    state: PeekedState,$/;"	m	struct:Peeked
state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    state: ReadState,$/;"	m	struct:ReadableChunks
state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    state: TunnelState,$/;"	m	struct:Tunnel
state	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    state: SocketAddrsState$/;"	m	struct:SocketAddrs
state_heap_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn state_heap_size(&self) -> usize {$/;"	P	implementation:Transitions
states	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    states: Vec<State>,$/;"	m	struct:StateMap
status	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn status(&self) -> KA {$/;"	P	implementation:KA
status	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    status: Status,$/;"	m	struct:ProgressState
status	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    pub fn status(&self) -> StatusCode {$/;"	P	implementation:Response
status	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    status: StatusCode,$/;"	m	struct:Response
status	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    pub fn status(&self) -> Option<StatusCode> {$/;"	P	implementation:Error
status	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    pub fn status(&self) -> StatusCode {$/;"	P	implementation:RedirectAttempt
status	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    status: StatusCode,$/;"	m	struct:RedirectAttempt
status	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    pub fn status(&self) -> StatusCode {$/;"	P	implementation:Response
stderr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn stderr() -> ProgressDrawTarget {$/;"	P	implementation:ProgressDrawTarget
stderr_nohz	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn stderr_nohz() -> ProgressDrawTarget {$/;"	P	implementation:ProgressDrawTarget
stdout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn stdout() -> ProgressDrawTarget {$/;"	P	implementation:ProgressDrawTarget
stdout_nohz	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn stdout_nohz() -> ProgressDrawTarget {$/;"	P	implementation:ProgressDrawTarget
steady_tick	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    steady_tick: u64,$/;"	m	struct:ProgressState
step	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn step<R: MemRead>(&self,$/;"	P	implementation:ChunkedState
step	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^    fn step(&mut self, mut ip: InstPtr, mut at: InputAt) -> bool {$/;"	P	implementation:Bounded
step	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/pikevm.rs	/^    fn step($/;"	P	implementation:Fsm
stop	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    pub fn stop(self) -> RedirectAction {$/;"	P	implementation:RedirectAttempt
str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/headers.rs	/^    const CHUNKED: &'static str = "chunked";$/;"	v	function:add_chunked
str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    const LOG: &'static str;$/;"	v	interface:Http1Transaction
str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    const LOG: &'static str = "{role=client}";$/;"	v	implementation:Client
str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    const LOG: &'static str = "{role=server}";$/;"	v	implementation:Server
str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<'a> Replacer for &'a str {$/;"	c
str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^impl<'t> From<Match<'t>> for &'t str {$/;"	c
str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^static DEFAULT_USER_AGENT: &'static str =$/;"	v
str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/into_url.rs	/^impl<'a> PolyfillTryInto for &'a str {$/;"	c
str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^const ENTER_MOUSE_SEQUENCE: &'static str = csi!("?1000h\\x1b[?1002h\\x1b[?1015h\\x1b[?1006h");$/;"	v
str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^const EXIT_MOUSE_SEQUENCE: &'static str = csi!("?1006l\\x1b[?1015l\\x1b[?1002l\\x1b[?1000l");$/;"	v
str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^impl<'a> Pattern for &'a str {$/;"	c
strategy	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    strategy: WriteStrategy,$/;"	m	struct:WriteBuf
stream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^    stream: S,$/;"	m	struct:PipeToSendStream
stream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/decoder.rs	/^    stream: S,$/;"	m	struct:ReadableChunks
stream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^    stream: executor::Spawn<S>,$/;"	m	struct:WaitStream
stream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^pub(crate) fn stream<S>(stream: S, timeout: Option<Duration>) -> WaitStream<S>$/;"	f
string	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^fn string<T: Target>(target: &mut Option<T>) -> &mut String {$/;"	f
strip_connection_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h2/mod.rs	/^fn strip_connection_headers(headers: &mut HeaderMap, is_request: bool) {$/;"	f
style	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    style: ProgressStyle,$/;"	m	struct:ProgressState
style	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    pub style: Option<Style>,$/;"	m	struct:TemplateVar
style	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/lib.rs	/^pub mod style;$/;"	n
subject	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^    pub subject: S,$/;"	m	struct:MessageHead
suffix_cache	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    suffix_cache: SuffixCache,$/;"	m	struct:Compiler
suffixes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    suffixes: LiteralSearcher,$/;"	m	struct:ExecReadOnly
suffixes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    suffixes: Literals,$/;"	m	struct:Parsed
suffixes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn suffixes(lits: &Literals) -> Self {$/;"	P	implementation:Matcher
suffixes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    fn suffixes(lits: &Literals) -> SingleByteSet {$/;"	P	implementation:SingleByteSet
suffixes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^    pub fn suffixes(lits: Literals) -> Self {$/;"	P	implementation:LiteralSearcher
swap_greed	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_builder.rs	/^    pub swap_greed: bool,$/;"	m	struct:RegexOptions
syntax_violation_callback	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn syntax_violation_callback(mut self, new: Option<&'a Fn(SyntaxViolation)>) -> Self {$/;"	P	implementation:ParseOptions
syntax_violation_enum	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^macro_rules! syntax_violation_enum {$/;"	M
sys	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/lib.rs	/^mod sys;$/;"	n
table	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    table: Vec<StatePtr>,$/;"	m	struct:Transitions
take	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn take(&self, key: &Key) -> Option<Pooled<T>> {$/;"	P	implementation:Pool
take_after_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn take_after_path(&mut self) -> String {$/;"	P	implementation:Url
take_delayed_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    fn take_delayed_eof(&mut self) -> Option<DelayEof> {$/;"	P	implementation:Body
take_error	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn take_error(&mut self) -> ::Result<()> {$/;"	f
take_fragment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn take_fragment(&mut self) -> Option<String> {$/;"	P	implementation:Url
taker	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    taker: want::Taker,$/;"	m	struct:Receiver
target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/form_urlencoded.rs	/^    target: Option<T>,$/;"	m	struct:Serializer
task	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    task: Option<Task>,$/;"	m	struct:AsyncIo
tcgetattr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/attr.rs	/^        pub fn tcgetattr(fd: c_int, termptr: *mut Termios) -> c_int;$/;"	f	function:get_terminal_attr
tcp	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^#[cfg(feature = "runtime")] mod tcp;$/;"	n
tcp_keepalive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn tcp_keepalive(mut self, keepalive: Option<Duration>) -> Self {$/;"	P	implementation:Builder
tcp_keepalive_timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    tcp_keepalive_timeout: Option<Duration>,$/;"	m	struct:AddrIncoming
tcp_nodelay	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn tcp_nodelay(mut self, enabled: bool) -> Self {$/;"	P	implementation:Builder
tcp_nodelay	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    tcp_nodelay: bool,$/;"	m	struct:AddrIncoming
tcp_sleep_on_accept_errors	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn tcp_sleep_on_accept_errors(mut self, val: bool) -> Self {$/;"	P	implementation:Builder
tcsetattr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/attr.rs	/^        pub fn tcsetattr(fd: c_int, opt: c_int, termptr: *const Termios) -> c_int;$/;"	f	function:set_terminal_attr
teddy_avx2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^mod teddy_avx2;$/;"	n
teddy_ssse3	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^mod teddy_ssse3;$/;"	n
template	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn template(mut self, s: &str) -> ProgressStyle {$/;"	P	implementation:ProgressStyle
template	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    template: Cow<'static, str>,$/;"	m	struct:ProgressStyle
template_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^pub fn template_dir() -> Option<PathBuf> {$/;"	f
template_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^pub fn template_dir()   -> Option<PathBuf> { run_xdg_user_dir_command("TEMPLATES") }$/;"	f
template_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/mac.rs	/^pub fn template_dir()   -> Option<PathBuf> { None }$/;"	f
template_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^pub fn template_dir()   -> Option<PathBuf> { home_dir().map(|h| h.join("Templates")) }$/;"	f
template_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^pub fn template_dir()   -> Option<PathBuf> { known_folder(&knownfolders::FOLDERID_Templates) }$/;"	f
term	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    term: W,$/;"	m	struct:MouseTerminal
terminal_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/redox/size.rs	/^pub fn terminal_size() -> io::Result<(u16, u16)> {$/;"	f
terminal_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/size.rs	/^pub fn terminal_size() -> io::Result<(u16, u16)> {$/;"	f
test	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/exitfailure-0.5.1/src/lib.rs	/^mod test {$/;"	n
test	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^mod test {$/;"	n
test	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/mod.rs	/^mod test {$/;"	n
test	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^mod test {$/;"	n
test	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^mod test {$/;"	n
test	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/async.rs	/^mod test {$/;"	n
test	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^mod test {$/;"	n
test	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/lib.rs	/^mod test {$/;"	n
test	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^mod test {$/;"	n
test_abort	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn test_abort() {$/;"	f	module:test
test_absolute_form	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn test_absolute_form() {$/;"	f	module:unit_tests
test_all	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    fn test_all() {$/;"	f	module:tests
test_async_stdin	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/async.rs	/^    fn test_async_stdin() {$/;"	f	module:test
test_authority_form	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn test_authority_form() {$/;"	f	module:unit_tests
test_backspace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn test_backspace() {$/;"	f	module:test
test_body_stream_concat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^fn test_body_stream_concat() {$/;"	f
test_cause_chain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    fn test_cause_chain() {$/;"	f	module:tests
test_client_request_encode_title_case	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn test_client_request_encode_title_case() {$/;"	f	module:tests
test_connected_extra	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    fn test_connected_extra() {$/;"	f	module:tests
test_connected_extra_chain	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    fn test_connected_extra_chain() {$/;"	f	module:tests
test_custom	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    fn test_custom() {$/;"	f	module:tests
test_date_len	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/date.rs	/^fn test_date_len() {$/;"	f
test_decoder_request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn test_decoder_request() {$/;"	f	module:tests
test_decoder_response	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn test_decoder_response() {$/;"	f	module:tests
test_destination_set_host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    fn test_destination_set_host() {$/;"	f	module:tests
test_destination_set_port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    fn test_destination_set_port() {$/;"	f	module:tests
test_destination_set_scheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    fn test_destination_set_scheme() {$/;"	f	module:tests
test_dirs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^    fn test_dirs() {$/;"	f	module:tests
test_duration_stuff	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^fn test_duration_stuff() {$/;"	f
test_enabled	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^    macro_rules! test_enabled {$/;"	M	module:tests
test_end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn test_end() {$/;"	f	module:test
test_errors_enforce_http	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    fn test_errors_enforce_http() {$/;"	f	module:tests
test_errors_missing_authority	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    fn test_errors_missing_authority() {$/;"	f	module:tests
test_errors_missing_scheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^    fn test_errors_missing_scheme() {$/;"	f	module:tests
test_esc_key	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn test_esc_key() {$/;"	f	module:test
test_events	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn test_events() {$/;"	f	module:test
test_events_and_raw	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn test_events_and_raw() {$/;"	f	module:test
test_exitdisplay	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/exitfailure-0.5.1/src/lib.rs	/^    fn test_exitdisplay() {$/;"	f	module:test
test_exitfailure	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/exitfailure-0.5.1/src/lib.rs	/^    fn test_exitfailure() {$/;"	f	module:test
test_expand_template	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^fn test_expand_template() {$/;"	f
test_expand_template_flags	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^fn test_expand_template_flags() {$/;"	f
test_file_user_dirs_exists	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^    fn test_file_user_dirs_exists() {$/;"	f	module:tests
test_from_http_response	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    fn test_from_http_response() {$/;"	f	module:tests
test_function_keys	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn test_function_keys() {$/;"	f	module:test
test_get_terminal_attr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/lib.rs	/^    fn test_get_terminal_attr() {$/;"	f	module:test
test_http	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    fn test_http() {$/;"	f	module:tests
test_https	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    fn test_https() {$/;"	f	module:tests
test_into_raw_mode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^    fn test_into_raw_mode() {$/;"	f	module:test
test_ip_addrs_split_by_preference	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    fn test_ip_addrs_split_by_preference() {$/;"	f	module:tests
test_keys	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn test_keys() {$/;"	f	module:test
test_origin_form	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    fn test_origin_form() {$/;"	f	module:unit_tests
test_parse_request	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn test_parse_request() {$/;"	f	module:tests
test_parse_request_errors	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn test_parse_request_errors() {$/;"	f	module:tests
test_parse_response	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn test_parse_response() {$/;"	f	module:tests
test_parse_utf8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/event.rs	/^fn test_parse_utf8() {$/;"	f
test_pbar_maxu64	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^fn test_pbar_maxu64() {$/;"	f
test_pbar_overflow	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^fn test_pbar_overflow() {$/;"	f
test_pbar_zero	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^fn test_pbar_zero() {$/;"	f
test_pool_checkout_drop_cleans_up_waiters	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn test_pool_checkout_drop_cleans_up_waiters() {$/;"	f	module:tests
test_pool_checkout_removes_expired	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn test_pool_checkout_removes_expired() {$/;"	f	module:tests
test_pool_checkout_returns_none_if_expired	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn test_pool_checkout_returns_none_if_expired() {$/;"	f	module:tests
test_pool_checkout_smoke	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn test_pool_checkout_smoke() {$/;"	f	module:tests
test_pool_checkout_task_unparked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn test_pool_checkout_task_unparked() {$/;"	f	module:tests
test_pool_max_idle_per_host	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn test_pool_max_idle_per_host() {$/;"	f	module:tests
test_pool_timer_removes_expired	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn test_pool_timer_removes_expired() {$/;"	f	module:tests
test_read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn test_read() {$/;"	f	module:test
test_read_chunk_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn test_read_chunk_size() {$/;"	f	module:tests
test_read_chunked_after_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn test_read_chunked_after_eof() {$/;"	f	module:tests
test_read_chunked_async	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn test_read_chunked_async() {$/;"	f	module:tests
test_read_chunked_early_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn test_read_chunked_early_eof() {$/;"	f	module:tests
test_read_chunked_single_read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn test_read_chunked_single_read() {$/;"	f	module:tests
test_read_eof_async	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn test_read_eof_async() {$/;"	f	module:tests
test_read_length_async	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn test_read_length_async() {$/;"	f	module:tests
test_read_sized_early_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    fn test_read_sized_early_eof() {$/;"	f	module:tests
test_redirect_policy_custom	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^fn test_redirect_policy_custom() {$/;"	f
test_redirect_policy_limit	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^fn test_redirect_policy_limit() {$/;"	f
test_remove_sensitive_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^fn test_remove_sensitive_headers() {$/;"	f
test_response_builder_ext	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    fn test_response_builder_ext() {$/;"	f	module:tests
test_server_encode_connect_method	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn test_server_encode_connect_method() {$/;"	f	module:tests
test_set_terminal_attr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/lib.rs	/^    fn test_set_terminal_attr() {$/;"	f	module:test
test_size	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/lib.rs	/^    fn test_size() {$/;"	f	module:test
test_special_keys	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn test_special_keys() {$/;"	f	module:test
test_tunnel	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    fn test_tunnel() {$/;"	f	module:tests
test_tunnel_bad_response	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    fn test_tunnel_bad_response() {$/;"	f	module:tests
test_tunnel_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    fn test_tunnel_eof() {$/;"	f	module:tests
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/internal.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/chunk.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^mod tests;$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/error.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/dispatch.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/expand.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/mod.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/utf8.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/into_url.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^mod tests {$/;"	n
tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^mod tests;$/;"	n
tests	/home/doc/Code/Git/oracle/src/main.rs	/^mod tests;$/;"	n
text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/input.rs	/^    text: &'t [u8],$/;"	m	struct:ByteInput
text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    text: &'t [u8],$/;"	m	struct:Captures
text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^    text: &'t [u8],$/;"	m	struct:Match
text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    pub fn text(&self) -> &'t R::Text {$/;"	f
text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_trait.rs	/^    text: &'t R::Text,$/;"	m	struct:Matches
text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    text: &'t str,$/;"	m	struct:Captures
text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_unicode.rs	/^    text: &'t str,$/;"	m	struct:Match
text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub fn text<T, U>(self, name: T, value: U) -> Form$/;"	P	implementation:Form
text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    pub fn text<T>(value: T) -> Part$/;"	P	implementation:Part
text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    pub fn text(&mut self) -> ::Result<String> {$/;"	P	implementation:Response
text	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/select-0.4.2/src/node.rs	/^    pub fn text(&self) -> String {$/;"	P	implementation:Node
thread	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    thread: Option<thread::JoinHandle<()>>$/;"	m	struct:InnerClientHandle
thread	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^    thread: thread::Thread,$/;"	m	struct:ThreadNotify
tick	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn tick(&self) {$/;"	P	implementation:ProgressBar
tick	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    tick: u64,$/;"	m	struct:ProgressState
tick_chars	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn tick_chars(mut self, s: &str) -> ProgressStyle {$/;"	P	implementation:ProgressStyle
tick_chars	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    tick_chars: Vec<char>,$/;"	m	struct:ProgressStyle
tick_thread	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    tick_thread: Option<thread::JoinHandle<()>>,$/;"	m	struct:ProgressState
time_per_step	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    pub fn time_per_step(&self) -> Duration {$/;"	P	implementation:Estimate
timedout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^pub(crate) fn timedout(url: Option<Url>) -> Error {$/;"	f
timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    timeout: Option<Duration>,$/;"	m	struct:PoolInner
timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^    timeout: Option<Delay>,$/;"	m	struct:AddrIncoming
timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    pub fn timeout(mut self, timeout: Duration) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    timeout: Option<Duration>,$/;"	m	struct:Config
timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    pub fn timeout<T>(mut self, timeout: T) -> ClientBuilder$/;"	P	implementation:ClientBuilder
timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    timeout: Timeout,$/;"	m	struct:ClientBuilder
timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    timeout: Timeout,$/;"	m	struct:ClientHandle
timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^    timeout: Option<Duration>,$/;"	m	struct:WaitStream
timeout	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/wait.rs	/^pub(crate) fn timeout<F>(fut: F, timeout: Option<Duration>) -> Result<F::Item, Waited<F::Error>>$/;"	f
tiocgwinsz	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/size.rs	/^fn tiocgwinsz() -> i32 {$/;"	f
tiocgwinsz	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/size.rs	/^fn tiocgwinsz() -> u32 {$/;"	f
tiocgwinsz	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/size.rs	/^fn tiocgwinsz() -> u64 {$/;"	f
title_case	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^fn title_case(dst: &mut Vec<u8>, name: &[u8]) {$/;"	f
title_case_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    title_case_headers: bool,$/;"	m	struct:State
title_case_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    title_case_headers: bool,$/;"	m	struct:Encode
tls	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    tls: TlsConnectorBuilder,$/;"	m	struct:Config
tls	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    tls: TlsConnector,$/;"	m	struct:Connector
tls	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^mod tls;$/;"	n
tmpdir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^fn tmpdir() -> TempDir {$/;"	f
to_file_path	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn to_file_path(&self) -> Result<PathBuf, ()> {$/;"	P	implementation:Url
to_h2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    fn to_h2(&self) -> bool {$/;"	P	implementation:Fallback
to_output_encoding	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^    pub fn to_output_encoding(self) -> Self {$/;"	P	implementation:EncodingOverride
to_owned	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    pub fn to_owned(&self) -> Host<String> {$/;"	P	implementation:Host
to_owned	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    pub fn to_owned(&self) -> HostAndPort<String> {$/;"	P	implementation:HostAndPort
to_socket_addrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^    fn to_socket_addrs(&self) -> io::Result<Self::Iter> {$/;"	P	implementation:HostAndPort
to_socket_addrs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    fn to_socket_addrs(&self) -> io::Result<Self::Iter> {$/;"	P	implementation:Url
to_term	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn to_term(term: Term, refresh_rate: Option<u64>) -> ProgressDrawTarget {$/;"	P	implementation:ProgressDrawTarget
to_u32	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^pub fn to_u32(i: usize) -> ParseResult<u32> {$/;"	f
to_uppercase	/home/doc/Code/Git/oracle/src/work.rs	/^pub fn to_uppercase(s: &str) -> String {$/;"	f	function:neofetch
to_uri	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/into_url.rs	/^pub(crate) fn to_uri(url: &Url) -> ::hyper::Uri {$/;"	f
too_many_redirects	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^pub(crate) fn too_many_redirects(url: Url) -> Error {$/;"	f
too_many_redirects	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    pub fn too_many_redirects(self) -> RedirectAction {$/;"	P	implementation:RedirectAttempt
trans	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    trans: Transitions,$/;"	m	struct:CacheInner
transfer_encoding_is_chunked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/headers.rs	/^pub fn transfer_encoding_is_chunked(headers: &HeaderMap) -> bool {$/;"	f
trim	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^fn trim(s: &str) -> &str {$/;"	f
truncate	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    pub truncate: bool,$/;"	m	struct:TemplateVar
try_	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^macro_rules! try_ {$/;"	M
try_bind	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn try_bind(addr: &SocketAddr) -> ::Result<Builder<AddrIncoming>> {$/;"	P	implementation:Server
try_into_parts	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn try_into_parts(self) -> Option<Parts<I, S>> {$/;"	f
try_io_read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn try_io_read(&mut self) -> Poll<usize, io::Error> {$/;"	f
try_keep_alive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn try_keep_alive(&mut self) {$/;"	f
try_keep_alive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn try_keep_alive<T: Http1Transaction>(&mut self) {$/;"	P	implementation:State
try_parse	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/dns.rs	/^    pub(super) fn try_parse(host: &str, port: u16) -> Option<IpAddrs> {$/;"	P	implementation:IpAddrs
try_send	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    pub fn try_send(&mut self, val: T) -> Result<RetryPromise<T, U>, T> {$/;"	P	implementation:Sender
try_send	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    pub fn try_send(&mut self, val: T) -> Result<RetryPromise<T, U>, T> {$/;"	P	implementation:UnboundedSender
try_unit	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/format.rs	/^        macro_rules! try_unit {$/;"	M	method:HumanDuration::fmt
ts	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub ts: Instant,$/;"	m	struct:ProgressDrawState
tty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/redox/mod.rs	/^pub mod tty;$/;"	n
tty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/sys/unix/mod.rs	/^pub mod tty;$/;"	n
tunnel	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^fn tunnel<T>(conn: T, host: String, port: u16) -> Tunnel<T> {$/;"	f
tunnel_eof	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^fn tunnel_eof() -> io::Error {$/;"	f
tx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    tx: BodySender,$/;"	m	struct:Sender
tx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    tx: Option<SendRequest<B>>,$/;"	m	struct:WhenReady
tx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    tx: PoolTx<B>,$/;"	m	struct:PoolClient
tx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    tx: oneshot::Sender<()>,$/;"	m	struct:Signal
tx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    tx: oneshot::Sender<::Result<Upgraded>>$/;"	m	struct:Pending
tx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    tx: Sender<(usize, ProgressDrawState)>,$/;"	m	struct:MultiProgress
tx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/body.rs	/^    tx: hyper::body::Sender,$/;"	m	struct:Sender
tx	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    tx: Option<ThreadSender>,$/;"	m	struct:InnerClientHandle
ty	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^    ty: FileType,$/;"	m	struct:DirEntry
u32_to_usize	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^fn u32_to_usize(n: u32) -> usize {$/;"	f
u8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^    impl<'a> MemRead for &'a [u8] {$/;"	c	module:tests
u8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_bytes.rs	/^impl<'a> Replacer for &'a [u8] {$/;"	c
u8_class	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    fn u8_class(&self, b: u8) -> usize {$/;"	P	implementation:Fsm
u8x16	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^impl fmt::Debug for u8x16 {$/;"	c
u8x16	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^impl u8x16 {$/;"	c
u8x16_load	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    pub fn u8x16_load(self, slice: &[u8]) -> u8x16 {$/;"	P	implementation:SSSE3VectorBuilder
u8x16_load_unaligned	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    pub fn u8x16_load_unaligned(self, slice: &[u8]) -> u8x16 {$/;"	P	implementation:SSSE3VectorBuilder
u8x16_load_unchecked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    pub unsafe fn u8x16_load_unchecked(self, slice: &[u8]) -> u8x16 {$/;"	P	implementation:SSSE3VectorBuilder
u8x16_load_unchecked_unaligned	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    pub unsafe fn u8x16_load_unchecked_unaligned(self, slice: &[u8]) -> u8x16 {$/;"	P	implementation:SSSE3VectorBuilder
u8x16_splat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/ssse3.rs	/^    pub fn u8x16_splat(self, n: u8) -> u8x16 {$/;"	P	implementation:SSSE3VectorBuilder
u8x32	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^impl fmt::Debug for u8x32 {$/;"	c
u8x32	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^impl u8x32 {$/;"	c
u8x32_load	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    pub fn u8x32_load(self, slice: &[u8]) -> u8x32 {$/;"	P	implementation:AVX2VectorBuilder
u8x32_load_unaligned	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    pub fn u8x32_load_unaligned(self, slice: &[u8]) -> u8x32 {$/;"	P	implementation:AVX2VectorBuilder
u8x32_load_unchecked	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    pub unsafe fn u8x32_load_unchecked(self, slice: &[u8]) -> u8x32 {$/;"	P	implementation:AVX2VectorBuilder
u8x32_load_unchecked_unaligned	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    pub unsafe fn u8x32_load_unchecked_unaligned(self, slice: &[u8]) -> u8x32 {$/;"	P	implementation:AVX2VectorBuilder
u8x32_splat	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/vector/avx2.rs	/^    pub fn u8x32_splat(self, n: u8) -> u8x32 {$/;"	P	implementation:AVX2VectorBuilder
unbound	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    pub fn unbound(self) -> UnboundedSender<T, U> {$/;"	P	implementation:Sender
unbounded_sender_doesnt_bound_on_want	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/dispatch.rs	/^    fn unbounded_sender_doesnt_bound_on_want() {$/;"	f	module:tests
unicode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    pub fn unicode(mut self, yes: bool) -> Self {$/;"	P	implementation:ExecBuilder
unicode	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/re_builder.rs	/^    pub unicode: bool,$/;"	m	struct:RegexOptions
unicode_lit_star_backtracking_utf8bytes_default_utf8bytes_mismatch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn unicode_lit_star_backtracking_utf8bytes_default_utf8bytes_mismatch() {$/;"	f	module:test
unicode_serialization	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/origin.rs	/^    pub fn unicode_serialization(&self) -> String {$/;"	P	implementation:Origin
unit_tests	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^mod unit_tests {$/;"	n
unix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^#[cfg(unix)]                                                                      mod unix;$/;"	n
unix	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/lib.rs	/^mod unix;$/;"	n
unreachable_ipv4_addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^        fn unreachable_ipv4_addr() -> IpAddr {$/;"	f	function:tests::client_happy_eyeballs
unreachable_ipv6_addr	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/http.rs	/^        fn unreachable_ipv6_addr() -> IpAddr {$/;"	f	function:tests::client_happy_eyeballs
unwrap	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^        fn unwrap(self) -> Bytes {$/;"	P	implementation:tests::Async
unwrap	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^        fn unwrap(self) -> ChunkedState {$/;"	P	implementation:tests::Async
unwrap	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/decode.rs	/^        fn unwrap(self) -> T;$/;"	P	interface:tests::HelpUnwrap
unwrap	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    fn unwrap(self) -> Inst {$/;"	P	implementation:MaybeInst
unwrap_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    fn unwrap_dir(self) -> Vec<Tree> {$/;"	P	implementation:Tree
unwrap_singleton	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.7/src/tests.rs	/^    fn unwrap_singleton(self) -> Tree {$/;"	P	implementation:Tree
update	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/date.rs	/^    fn update(&mut self, now: time::Timespec) {$/;"	P	implementation:CachedDate
update	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/date.rs	/^pub fn update() {$/;"	f
update_and_draw	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    fn update_and_draw<F: FnOnce(&mut ProgressState)>(&self, f: F) {$/;"	P	implementation:ProgressBar
update_and_header_value	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/date.rs	/^pub(crate) fn update_and_header_value() -> HeaderValue {$/;"	f
update_date	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    fn update_date() {}$/;"	P	interface:Http1Transaction
update_date	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn update_date() {$/;"	P	implementation:Server
update_uri	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/connect/mod.rs	/^    fn update_uri<F>(&mut self, f: F) -> ::Result<()>$/;"	P	implementation:Destination
upgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn upgrade(&self) -> Option<Arc<T>> {$/;"	P	implementation:WeakOpt
upgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/lib.rs	/^pub mod upgrade;$/;"	n
upgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    upgrade: Option<::upgrade::Pending>,$/;"	m	struct:State
upgrade_h2	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    fn upgrade_h2(&mut self) {$/;"	f
upgrades	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^mod upgrades {$/;"	n
uppercut_s_backtracking_bytes_default_bytes_mismatch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/exec.rs	/^    fn uppercut_s_backtracking_bytes_default_bytes_mismatch() {$/;"	f	module:test
url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    url: Url,$/;"	m	struct:PendingRequest
url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn url(&self) -> &Url {$/;"	P	implementation:Request
url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    url: Url,$/;"	m	struct:Request
url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    fn url(&mut self, url: Url) -> &mut Self {$/;"	P	implementation:Builder
url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    fn url(&mut self, url: Url) -> &mut Self;$/;"	P	interface:ResponseBuilderExt
url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    pub fn url(&self) -> &Url {$/;"	P	implementation:Response
url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    url: Box<Url>,$/;"	m	struct:Response
url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    pub fn url(&self) -> Option<&Url> {$/;"	P	implementation:Error
url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    url: Option<Url>,$/;"	m	struct:Inner
url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/proxy.rs	/^    fn url(s: &str) -> Url {$/;"	f	module:tests
url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/redirect.rs	/^    pub fn url(&self) -> &Url {$/;"	P	implementation:RedirectAttempt
url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn url(&self) -> &Url {$/;"	P	implementation:Request
url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    pub fn url(&self) -> &Url {$/;"	P	implementation:Response
url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    url: Option<&'a mut Url>,$/;"	m	struct:UrlQuery
url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/path_segments.rs	/^    url: &'a mut Url,$/;"	m	struct:PathSegmentsMut
url_bad_scheme	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^pub(crate) fn url_bad_scheme(url: Url) -> Error {$/;"	f
url_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/request.rs	/^    pub fn url_mut(&mut self) -> &mut Url {$/;"	P	implementation:Request
url_mut	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/request.rs	/^    pub fn url_mut(&mut self) -> &mut Url {$/;"	P	implementation:Request
url_origin	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/origin.rs	/^pub fn url_origin(url: &Url) -> Origin {$/;"	f
urls	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/client.rs	/^    urls: Vec<Url>,$/;"	m	struct:PendingRequest
usb	/home/doc/Code/Git/oracle/src/work.rs	/^pub fn usb() -> std::string::String {$/;"	f	function:neofetch
username	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn username(&self) -> &str {$/;"	P	implementation:Url
username	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/quirks.rs	/^pub fn username(url: &Url) -> &str {$/;"	f
username_end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    username_end: u32,  \/\/ Before ':' (if a password is given) or '@' (if not)$/;"	m	struct:Url
uses_bytes	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^    pub fn uses_bytes(&self) -> bool {$/;"	P	implementation:Program
usize_to_u32	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^fn usize_to_u32(n: usize) -> u32 {$/;"	f
usize_to_u32	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^fn usize_to_u32(n: usize) -> u32 {$/;"	f
utf8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod utf8;$/;"	n
utf8	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/encoding.rs	/^    pub fn utf8() -> Self {$/;"	P	implementation:EncodingOverride
utf8_seqs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/compile.rs	/^    utf8_seqs: Option<Utf8Sequences>,$/;"	m	struct:Compiler
utils	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/lib.rs	/^mod utils;$/;"	n
val	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^        val: i32,$/;"	m	struct:tests::CanClose
value	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    value: Option<T>,$/;"	m	struct:Pooled
value	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    value: T,$/;"	m	struct:Idle
value	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    value: (usize, usize),$/;"	m	struct:HeaderIndices
value	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/multipart.rs	/^    value: Body,$/;"	m	struct:Part
vb	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^fn vb(b: usize) -> String {$/;"	f
vb	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    vb: AVX2VectorBuilder,$/;"	m	struct:Masks
vb	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    vb: AVX2VectorBuilder,$/;"	m	struct:Teddy
vb	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    vb: SSSE3VectorBuilder,$/;"	m	struct:Masks
vb	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    vb: SSSE3VectorBuilder,$/;"	m	struct:Teddy
vec	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    vec: Vec<u8>,$/;"	m	struct:MockCursor
vector	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/lib.rs	/^mod vector;$/;"	n
ver	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/mod.rs	/^    ver: Ver,$/;"	m	struct:Config
verify	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    fn verify($/;"	P	implementation:Teddy
verify	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    fn verify($/;"	P	implementation:Teddy
verify_bucket	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_avx2/imp.rs	/^    fn verify_bucket($/;"	P	implementation:Teddy
verify_bucket	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/literal/teddy_ssse3/imp.rs	/^    fn verify_bucket($/;"	P	implementation:Teddy
vers_dl_size	/home/doc/Code/Git/oracle/src/download_distros.rs	/^pub fn vers_dl_size(url: &str, version: &str) -> String {$/;"	f
version	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    version: Version,$/;"	m	struct:State
version	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/mod.rs	/^    pub version: Version,$/;"	m	struct:MessageHead
version	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    pub fn version(&self) -> Version {$/;"	P	implementation:Response
version	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/response.rs	/^    version: Version,$/;"	m	struct:Response
version	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/response.rs	/^    pub fn version(&self) -> Version {$/;"	P	implementation:Response
version_as_string	/home/doc/Code/Git/oracle/src/download_distros.rs	/^pub fn version_as_string(version: &[String]) -> String {$/;"	f
version_to_iso	/home/doc/Code/Git/oracle/src/download_distros.rs	/^pub fn version_to_iso(url: &str, version: &str) -> String {$/;"	f
video_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^pub fn video_dir() -> Option<PathBuf> {$/;"	f
video_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lin.rs	/^pub fn video_dir()      -> Option<PathBuf> { run_xdg_user_dir_command("VIDEOS") }$/;"	f
video_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/mac.rs	/^pub fn video_dir()      -> Option<PathBuf> { home_dir().map(|h| h.join("Movies")) }$/;"	f
video_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/redox.rs	/^pub fn video_dir()      -> Option<PathBuf> { home_dir().map(|h| h.join("Videos")) }$/;"	f
video_dir	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/win.rs	/^pub fn video_dir()      -> Option<PathBuf> { known_folder(&knownfolders::FOLDERID_Videos) }$/;"	f
violation_fn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    violation_fn: ViolationFn<'a>,$/;"	m	struct:ParseOptions
violation_fn	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub violation_fn: ViolationFn<'a>,$/;"	m	struct:Parser
visible_byte	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^        fn visible_byte(b: u8) -> String {$/;"	f	method:Program::fmt
visited	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/backtrack.rs	/^    visited: Vec<Bits>,$/;"	m	struct:Cache
vtable	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    vtable: *const VTable,$/;"	m	struct:Inner
vtable	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    vtable: *const VTable,$/;"	m	struct:InnerHeader
vtable	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/error/error_impl_small.rs	/^    vtable: *const VTable,$/;"	m	struct:TraitObject
vtable	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    vtable: *const VTable,$/;"	m	struct:Inner
vtable	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    vtable: *const VTable,$/;"	m	struct:InnerHeader
vtable	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/small_error.rs	/^    vtable: *const VTable,$/;"	m	struct:TraitObject
wait	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/lib.rs	/^mod wait;$/;"	n
waiter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    fn waiter(&self, key: Key, tx: oneshot::Sender<T>) {$/;"	P	implementation:Pool
waiter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    waiter: Option<oneshot::Receiver<T>>,$/;"	m	struct:Checkout
waiters	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/pool.rs	/^    waiters: HashMap<Key, VecDeque<oneshot::Sender<T>>>,$/;"	m	struct:PoolInner
wants_keep_alive	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    fn wants_keep_alive(&self) -> bool {$/;"	P	implementation:State
wants_read_again	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn wants_read_again(&mut self) -> bool {$/;"	f
wants_upgrade	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/mod.rs	/^    wants_upgrade: bool,$/;"	m	struct:ParsedMessage
watch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    fn watch() {$/;"	f	module:tests
watch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    pub fn watch<F, FN>(self, future: F, on_drain: FN) -> Watching<F, FN>$/;"	P	implementation:Watch
watch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    watch: Watch,$/;"	m	struct:Watching
watch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^        fn watch(&self, conn: UpgradeableConnection<I, S, E>) -> Self::Future {$/;"	f	module:spawn_all
watch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^        fn watch(&self, conn: UpgradeableConnection<I, S, E>) -> Self::Future;$/;"	P	interface:spawn_all::Watcher
watch	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/shutdown.rs	/^    fn watch(&self, conn: UpgradeableConnection<I, S, E>) -> Self::Future {$/;"	f
watch_clones	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/drain.rs	/^    fn watch_clones() {$/;"	f	module:tests
when_ready	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/client/conn.rs	/^    pub(super) fn when_ready(self) -> WhenReady<B> {$/;"	P	implementation:SendRequest
width	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn width(&self) -> usize {$/;"	P	implementation:ProgressState
width	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    width: Option<u16>,$/;"	m	struct:ProgressState
width	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/utils.rs	/^    pub width: Option<usize>,$/;"	m	struct:TemplateVar
win	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/dirs-1.0.4/src/lib.rs	/^#[cfg(target_os = "windows")]                                                     mod win;$/;"	n
with_backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/mod.rs	/^macro_rules! with_backtrace { ($($i:item)*) => ($(#[cfg(all(feature = "backtrace", feature = "st/;"	M
with_context	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/result_ext.rs	/^    fn with_context<F, D>(self, f: F) -> Result<T, Context<D>>$/;"	P	interface:ResultExt
with_context	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/result_ext.rs	/^    fn with_context<F, D>(self, f: F) -> Result<T, Context<D>>$/;"	f
with_default_port	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/lib.rs	/^    pub fn with_default_port<F>(&self, f: F) -> io::Result<HostAndPort<&str>>$/;"	P	implementation:Url
with_draw_target	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn with_draw_target(len: u64, target: ProgressDrawTarget) -> ProgressBar {$/;"	P	implementation:ProgressBar
with_executor	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn with_executor<E2>(self, exec: E2) -> Http<E2> {$/;"	P	implementation:Http
with_goto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/prog.rs	/^        fn with_goto(cur: usize, goto: usize, fmtd: String) -> String {$/;"	f	method:Program::fmt
with_graceful_shutdown	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/mod.rs	/^    pub fn with_graceful_shutdown<F>(self, signal: F) -> Graceful<I, S, F, E>$/;"	f
with_inner	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/client.rs	/^    fn with_inner<F>(mut self, func: F) -> ClientBuilder$/;"	P	implementation:ClientBuilder
with_log	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    pub fn with_log(original_input: &'i str, vfn: ViolationFn) -> Self {$/;"	P	implementation:Input
with_max	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn with_max(max: usize) -> ReadStrategy {$/;"	P	implementation:ReadStrategy
with_query_and_fragment	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/parser.rs	/^    fn with_query_and_fragment(mut self, scheme_end: u32, username_end: u32,$/;"	P	implementation:Parser
with_std	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^macro_rules! with_std { ($($i:item)*) => ($(#[cfg(feature = "std")]$i)*) }$/;"	M
with_upgrades	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/conn.rs	/^    pub fn with_upgrades(self) -> UpgradeableConnection<I, S, E>$/;"	f
with_url	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/error.rs	/^    pub(crate) fn with_url(mut self, url: Url) -> Error {$/;"	P	implementation:Error
without_backtrace	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/backtrace/mod.rs	/^macro_rules! without_backtrace { ($($i:item)*) => ($(#[cfg(not(all(feature = "backtrace", featur/;"	M
without_std	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.3/src/lib.rs	/^macro_rules! without_std { ($($i:item)*) => ($(#[cfg(not(feature = "std"))]$i)*) }$/;"	M
word_boundary	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^    word_boundary: bool,$/;"	m	struct:EmptyFlags
work	/home/doc/Code/Git/oracle/src/main.rs	/^mod work;$/;"	n
would_block	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn would_block(&mut self) -> io::Error {$/;"	P	implementation:AsyncIo
wrap	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub fn wrap(vec: Vec<u8>) -> MockCursor {$/;"	P	implementation:MockCursor
wrap	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/async_impl/body.rs	/^    pub(crate) fn wrap(body: ::hyper::Body) -> Body {$/;"	P	implementation:Body
wrap_iter	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn wrap_iter<It: Iterator>(&self, it: It) -> ProgressBarIter<It> {$/;"	P	implementation:ProgressBar
wrap_read	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.10.3/src/progress.rs	/^    pub fn wrap_read<R: io::Read>(&self, read: R) -> ProgressBarRead<R> {$/;"	P	implementation:ProgressBar
wrap_stream	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/body/body.rs	/^    pub fn wrap_stream<S>(stream: S) -> Body$/;"	P	implementation:Body
write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Duplex
write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn write(&mut self, data: &[u8]) -> io::Result<usize> {$/;"	P	implementation:AsyncIo
write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn write(&mut self, data: &[u8]) -> io::Result<usize> {$/;"	P	implementation:MockCursor
write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    pub fn write(&self, bytes: &[u8]) -> Poll<usize, io::Error> {$/;"	P	implementation:DuplexHandle
write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    write: AsyncIo<MockCursor>,$/;"	m	struct:DuplexInner
write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^        fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:addr_stream::AddrStream
write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Upgraded
write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Conn
write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect_async.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:TlsStream
write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/input.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:MouseTerminal
write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/raw.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:RawTerminal
write	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/screen.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:AlternateScreen
write_bg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^    fn write_bg(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:AnsiValue
write_bg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^    fn write_bg(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Color
write_bg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^    fn write_bg(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Reset
write_bg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^    fn write_bg(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Rgb
write_bg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^    fn write_bg(&self, f: &mut fmt::Formatter) -> fmt::Result;$/;"	P	interface:Color
write_body	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn write_body(&mut self, chunk: B) {$/;"	f
write_body_and_end	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn write_body_and_end(&mut self, chunk: B) {$/;"	f
write_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/common/io/rewind.rs	/^    fn write_buf<B: Buf>(&mut self, buf: &mut B) -> Poll<usize, io::Error> {$/;"	f
write_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn write_buf<B: Buf>(&mut self, buf: &mut B) -> Poll<usize, io::Error> {$/;"	P	implementation:AsyncIo
write_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn write_buf<B: Buf>(&mut self, buf: &mut B) -> Poll<usize, io::Error> {$/;"	P	implementation:Duplex
write_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    pub(super) fn write_buf(&mut self) -> &mut WriteBuf<B> {$/;"	f
write_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    write_buf: WriteBuf<B>,$/;"	m	struct:Buffered
write_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/server/tcp.rs	/^        fn write_buf<B: Buf>(&mut self, buf: &mut B) -> Poll<usize, io::Error> {$/;"	P	implementation:addr_stream::AddrStream
write_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/upgrade.rs	/^    fn write_buf<B: Buf>(&mut self, buf: &mut B) -> Poll<usize, io::Error> {$/;"	P	implementation:Upgraded
write_buf	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.5/src/connect.rs	/^    fn write_buf<B: Buf>(&mut self, buf: &mut B) -> Poll<usize, io::Error> {$/;"	P	implementation:Conn
write_buf_auto_flatten	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn write_buf_auto_flatten() {$/;"	f	module:tests
write_buf_flatten	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn write_buf_flatten() {$/;"	f	module:tests
write_buf_queue	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn write_buf_queue() {$/;"	f	module:tests
write_buf_queue_disable_auto	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn write_buf_queue_disable_auto() {$/;"	f	module:tests
write_buf_requires_non_empty_bufs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/io.rs	/^    fn write_buf_requires_non_empty_bufs() {$/;"	f	module:tests
write_fg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^    fn write_fg(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:AnsiValue
write_fg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^    fn write_fg(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Color
write_fg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^    fn write_fg(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Reset
write_fg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^    fn write_fg(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Rgb
write_fg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/termion-1.5.1/src/color.rs	/^    fn write_fg(&self, f: &mut fmt::Formatter) -> fmt::Result;$/;"	P	interface:Color
write_fmt	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn write_fmt(&mut self, args: fmt::Arguments) -> fmt::Result {$/;"	P	implementation:FastWrite
write_full_msg	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn write_full_msg(&mut self, head: MessageHead<T::Outgoing>, body: B) {$/;"	f
write_head	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    pub fn write_head(&mut self, head: MessageHead<T::Outgoing>, body: Option<BodyLength>) {$/;"	f
write_headers	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^fn write_headers(headers: &HeaderMap, dst: &mut Vec<u8>) {$/;"	f
write_headers_title_case	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^fn write_headers_title_case(headers: &HeaderMap, dst: &mut Vec<u8>) {$/;"	f
write_ipv6	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.7.2/src/host.rs	/^fn write_ipv6(addr: &Ipv6Addr, f: &mut Formatter) -> fmt::Result {$/;"	f
write_no_vecs	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/mock.rs	/^    fn write_no_vecs<B: Buf>(&mut self, buf: &mut B) -> Poll<usize, io::Error> {$/;"	P	implementation:AsyncIo
write_str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/date.rs	/^    fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	P	implementation:CachedDate
write_str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/encode.rs	/^    fn write_str(&mut self, num: &str) -> fmt::Result {$/;"	P	implementation:ChunkSize
write_str	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/role.rs	/^    fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	P	implementation:FastWrite
write_vari32	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^fn write_vari32(data: &mut Vec<u8>, n: i32) {$/;"	f
write_varu32	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.1.0/src/dfa.rs	/^fn write_varu32(data: &mut Vec<u8>, mut n: u32) {$/;"	f
writing	/home/doc/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.12.18/src/proto/h1/conn.rs	/^    writing: Writing,$/;"	m	struct:State
x	/home/doc/Code/Git/oracle/src/os.rs	/^    pub x: u8,$/;"	m	struct:Os
xx	/home/doc/Code/Git/oracle/src/os.rs	/^    pub xx: u8,$/;"	m	struct:Os
y	/home/doc/Code/Git/oracle/src/os.rs	/^    pub y: u8,$/;"	m	struct:Os
yy	/home/doc/Code/Git/oracle/src/os.rs	/^    pub yy: u8,$/;"	m	struct:Os
z	/home/doc/Code/Git/oracle/src/os.rs	/^    pub z: u8,$/;"	m	struct:Os
zz	/home/doc/Code/Git/oracle/src/os.rs	/^    pub zz: u8,$/;"	m	struct:Os
